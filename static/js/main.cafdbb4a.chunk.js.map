{"version":3,"sources":["../node_modules/three-js/addons sync /^/.//.*/.js$","assets/audio/EminenceFront_TheWho.mp3","PageNotFound.tsx","assets/js/cuon-matrix.tsx","assets/js/webgl-utils.js","assets/js/cuon-utils.tsx","examples/OrbDefence.tsx","examples/ClickedPoints.tsx","examples/ExampleList.tsx","examples/ColoredPoints.tsx","Canvas.tsx","examples/MultiPoint.tsx","examples/HelloTriangle.tsx","examples/HelloTriangleLines.tsx","examples/HelloTriangleStrip.tsx","examples/HelloTriangleLoop.tsx","examples/HelloQuad.tsx","examples/HelloQuadFan.tsx","examples/RotatedTriangle.tsx","examples/RotatedTriangleMatrix.tsx","examples/ScaledTriangleMatrix.tsx","examples/RotatedTranslatedTriangle.tsx","examples/RotatingTriangle.tsx","examples/AudioThreeJS.tsx","examples/Hud.tsx","examples/PickFace.tsx","Orientation.tsx","examples/RotateObjectWithMouse.tsx","examples/Chaos.tsx","examples/Pendulum2.tsx","examples/Bezier.tsx","WebGl.tsx","Bootstrap.tsx","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","PageNotFound","props","state","React","Component","Vector","elements","Matrix","Matrix4","opt_src","setIdentity","set","src","i","s","d","concat","other","a","b","ai0","ai1","ai2","ai3","Float32Array","multiply","multiplyVector3","pos","p","v","Vector3","undefined","result","multiplyVector4","Vector4","transpose","t","setInverseOf","inv","det","invert","setOrtho","left","right","bottom","top","near","far","rw","rh","rd","ortho","setFrustum","frustum","setPerspective","fovy","aspect","ct","Math","PI","sin","cos","perspective","setScale","x","y","z","scale","setTranslate","translate","setRotate","angle","c","len","rlen","nc","xy","yz","zx","xs","ys","zs","sqrt","rotate","setLookAt","eyeX","eyeY","eyeZ","centerX","centerY","centerZ","upX","upY","upZ","fx","fy","fz","rlf","sx","sy","sz","rls","ux","uy","uz","lookAt","dropShadow","plane","light","mat","dot","dropShadowDirectionally","normX","normY","normZ","planeX","planeY","planeZ","lightX","lightY","lightZ","normalize","g","WebglUtils","create3DContext","canvas","opt_attribs","names","context","ii","length","getContext","setupWebGL","opt_onError","msg","container","document","getElementsByTagName","str","window","WebGLRenderingContext","innerHTML","makeFailHTML","addEventListener","event","statusMessage","loadShader","gl","type","source","shader","createShader","message","console","error","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","log","deleteShader","getWebGLContext","canvasId","programs","getElementById","attributes","value","vertexShader","fragmentShader","vshader","fshader","name","VERTEX_SHADER","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","iProgram","useProgram","push","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","cancelAnimationFrame","cancelRequestAnimationFrame","webkitCancelAnimationFrame","webkitCancelRequestAnimationFrame","mozCancelAnimationFrame","mozCancelRequestAnimationFrame","msCancelAnimationFrame","msCancelRequestAnimationFrame","oCancelAnimationFrame","oCancelRequestAnimationFrame","clearTimeout","a_Face","OrbDefence","VSHADER_SOURCE","FSHADER_SOURCE","ANGLE_STEP","currentAngle","initVertexBuffers","vertices","colors","faces","Uint8Array","indices","indexBuffer","createBuffer","initArrayBuffer","FLOAT","UNSIGNED_BYTE","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","checkFace","n","u_PickedFace","viewProjMatrix","u_MvpMatrix","pixels","uniform1i","draw","readPixels","RGBA","g_MvpMatrix","uniformMatrix4fv","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawElements","TRIANGLES","draw2D","ctx","clearRect","beginPath","moveTo","lineTo","closePath","strokeStyle","stroke","font","fillStyle","fillText","floor","last","Date","now","animate","elapsed","data","num","attribute","buffer","a_attribute","getAttribLocation","vertexAttribPointer","enableVertexAttribArray","this","hud","clearColor","enable","DEPTH_TEST","getUniformLocation","innerWidth","innerHeight","onmousedown","ev","target","clientX","clientY","rect","getBoundingClientRect","x_in_canvas","y_in_canvas","face","tick","width","height","style","position","zIndex","ClickedPoints","g_points","a_Position","click","setState","vertexAttrib3f","drawArrays","POINTS","ExampleList","textAlign","href","Routes","key","redirect","to","path","ColoredPoints","g_colors","u_FragColor","rgba","uniform4f","Canvas","createElement","color","MultiPoint","vertexBuffer","HelloTriangle","HelloTriangleLines","LINES","HelloTriangleStrip","LINE_STRIP","HelloTriangleLoop","LINE_LOOP","HelloQuad","TRIANGLE_STRIP","HelloQuadFan","TRIANGLE_FAN","RotatedTriangle","ANGLE","radian","cosB","sinB","u_CosB","u_SinB","uniform1f","RotatedTriangleMatrix","xformMatrix","u_xformMatrix","ScaledTriangleMatrix","Sx","Sy","Sz","RotatedTranslatedTriangle","modelMatrix","u_ModelMatrix","RotatingTriangle","g_last","EminenceFront","require","AudioThreeJS","audio","Audio","default","analyser","dataArray","bufferLength","noise","SimplexNoise","play","querySelector","THREE","THREELib","scene","Scene","group","Group","camera","PerspectiveCamera","add","renderer","WebGLRenderer","alpha","antialias","setSize","planeGeometry","PlaneGeometry","planeMaterial","MeshLambertMaterial","side","DoubleSide","wireframe","Mesh","rotation","plane2","icosahedronGeometry","IcosahedronGeometry","lambertMaterial","ball","ambientLight","AmbientLight","spotLight","SpotLight","intensity","castShadow","canvasElement","appendChild","domElement","updateProjectionMatrix","load","renderCanvas","analyzingAudio","getByteFrequencyData","analyzingAudioSetDefaults","cb","lowerHalfArray","slice","upperHalfArray","lowerMax","max","upperAvg","avg","lowerMaxFr","upperAvgFr","makeRoughGround","modulate","makeRoughBall","pow","render","alert","AudioContext","webkitAudioContext","tryPlayAudio","then","audioCTX","audioAnalyser","createAnalyser","audioSource","createMediaElementSource","connect","destination","fftSize","frequencyBinCount","mesh","bassFr","treFr","geometry","forEach","vertex","offset","parameters","radius","time","performance","rf","distance","noise3D","multiplyScalar","verticesNeedUpdate","normalsNeedUpdate","computeVertexNormals","computeFaceNormals","distortionFr","noise2D","fractionate","val","minVal","maxVal","outMin","outMax","bind","body","resume","pause","arr","reduce","sum","preload","autoPlay","Hud","check","u_Clicked","picked","PickFace","Orientation","axis","toQuaternion","ad2","ca","sa","fromQuaternion","q","cfac","acos","un","RotateObjectWithMouse","VSHADER_SOURCE_PHONG_SHADING","FSHADER_SOURCE_PHONG_SHADING","VSHADER_SOURCE_GOURAUD_SHADING","FSHADER_SOURCE_GOURAUD_SHADING","VSHADER_SOURCE_FLAT_SHADING","FSHADER_SOURCE_FLAT_SHADING","VSHADER_SOURCE_WIRE_SHADING","FSHADER_SOURCE_WIRE_SHADING","buffers","modelLoaded","orient_camera","orient_light","orient_model","imodel","frontColor","backColor","lightColor","shininess","opt","vsf","computeBB","bbox","dx","dy","dz","r","xc","xmax","xmin","yc","ymax","ymin","zc","zmax","zmin","constructNormals","i1","i2","i3","tn","vn","x1","x2","x3","y1","y2","y3","z1","z2","z3","vnormals","createArrayBuffer","getProgramByName","find","documentGetInputElementCheckedById","checked","prg","prgName","resize","projMatrix","u_Perspective","mvMatrix","u_MvMatrix","mvpMatrix","normalMatrix","u_NormalMatrix","u_FrontColor","u_BackColor","lightMatrix","uniform3f","u_LightDirection","u_AmbientLight","u_LightColor","u_Shininess","initAttributeVariable","a_Normal","vnormalBuffer","tnormalBuffer","a_BaryCoords","bcoordsBuffer","nvert","expandArrays","modelObj","nt3","verticesE","vnormalsE","bcoords","indv","getLocationsUsingProgram","getLocations","handleLoadedModel","payload","Uint32Array","tnormals","a_Attribute","initMouseEvents","dragging","onmouseup","onmousemove","cd","sd","sf","abs","keydown","mstep","xstep","ystep","zstep","keyCode","shiftKey","loadModel","filename","bunny","cone","cube","e37","elephant","displayWidth","clientWidth","displayHeight","clientHeight","viewport","fname","prompt","onkeydown","Chaos","j","vx","vy","px","py","random","Pendulum2","asize","da","Lmin","Lmax","restart","g_bobBuffer","g_wireBuffer","g_anchorBuffer","xp","yp","nv","wireLength","newAngle","down","min","up","stop","reverse","onClick","Bezier","cp3","cpts","icp","mvpi","nseg","orient_curve","psize","xv","yv","zv","u_Color","cpt1","cpt2","points","deCasteljau","p1","p2","mvp","mvpiMatrix","cptsBuffer","pointsBuffer","boxBuffer","computePoints","lineWidth","setDefaults","zoomIn","zoomOut","WebGl","component","pathTo","subRoutingSwitch","bootstrap","codeBlock","markdown","highlight","language","dark","text","showLineNumbers","theme","dracula","googlecode","switchDarkAndLightTheme","darkMode","semaphoreLock","localLock","criticalSection","operationActive","timeEnd","lockError","swal","buttons","cancel","catch","changeLoggedInStatus","authenticated","route","rest","prop","exact","from","views","passPropertiesAndRender","authenticate","isLoaded","testRestfulPostPutDeleteResponse","response","success","created","updated","deleted","handleResponseCodes","stack","assign","alertsWaiting","pop","handleAlert","intercept","title","icon","nextAlert","cache","setupCache","maxAge","isAppLocal","location","port","axios","create","baseURL","adapter","headers","paramsSerializer","params","Qs","stringify","arrayFormat","timeout","withCredentials","responseType","onUploadProgress","onDownloadProgress","maxRedirects","versions","shouldContinueAfterTimeout","timeoutMs","timer","timerId","PassComponent","startInputChangeUpdateRoutine","interceptors","request","use","method","url","match","JSON","Promise","reject","danger","hist","createBrowserHistory","APP_ROOT","process","cwd","DOM","history","ReactDOM"],"mappings":"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","file":"static/js/main.cafdbb4a.chunk.js","sourcesContent":["var map = {\n\t\"./AdaptiveToneMappingPass.js\": 130,\n\t\"./BasicShader.js\": 131,\n\t\"./BleachBypassShader.js\": 132,\n\t\"./BlendShader.js\": 133,\n\t\"./BloomPass.js\": 134,\n\t\"./BokehPass.js\": 135,\n\t\"./BokehShader.js\": 136,\n\t\"./BokehShader2.js\": 137,\n\t\"./BrightnessContrastShader.js\": 138,\n\t\"./CanvasRenderer.js\": 139,\n\t\"./ColorCorrectionShader.js\": 140,\n\t\"./ColorifyShader.js\": 141,\n\t\"./ConvolutionShader.js\": 142,\n\t\"./CopyShader.js\": 143,\n\t\"./DDSLoader.js\": 144,\n\t\"./DOFMipMapShader.js\": 145,\n\t\"./DigitalGlitch.js\": 146,\n\t\"./DotScreenPass.js\": 147,\n\t\"./DotScreenShader.js\": 148,\n\t\"./EdgeShader.js\": 149,\n\t\"./EdgeShader2.js\": 150,\n\t\"./EffectComposer.js\": 151,\n\t\"./FXAAShader.js\": 152,\n\t\"./FilmPass.js\": 153,\n\t\"./FilmShader.js\": 154,\n\t\"./FocusShader.js\": 155,\n\t\"./FresnelShader.js\": 156,\n\t\"./GammaCorrectionShader.js\": 157,\n\t\"./GlitchPass.js\": 158,\n\t\"./HorizontalBlurShader.js\": 159,\n\t\"./HorizontalTiltShiftShader.js\": 160,\n\t\"./HueSaturationShader.js\": 161,\n\t\"./JSONLoader.js\": 162,\n\t\"./KaleidoShader.js\": 163,\n\t\"./LuminosityShader.js\": 164,\n\t\"./MTLLoader.js\": 165,\n\t\"./MarchingCubes.js\": 166,\n\t\"./MaskPass.js\": 167,\n\t\"./MirrorShader.js\": 168,\n\t\"./NormalMapShader.js\": 169,\n\t\"./OBJLoader.js\": 170,\n\t\"./OceanShaders.js\": 171,\n\t\"./OrbitControls.js\": 172,\n\t\"./ParallaxShader.js\": 173,\n\t\"./Projector.js\": 174,\n\t\"./RGBShiftShader.js\": 175,\n\t\"./RenderPass.js\": 176,\n\t\"./SSAOShader.js\": 177,\n\t\"./SVGLoader.js\": 178,\n\t\"./SavePass.js\": 179,\n\t\"./SepiaShader.js\": 180,\n\t\"./ShaderPass.js\": 181,\n\t\"./TechnicolorShader.js\": 182,\n\t\"./TexturePass.js\": 183,\n\t\"./ToneMapShader.js\": 184,\n\t\"./TriangleBlurShader.js\": 185,\n\t\"./UnpackDepthRGBAShader.js\": 186,\n\t\"./VerticalBlurShader.js\": 187,\n\t\"./VerticalTiltShiftShader.js\": 188,\n\t\"./VignetteShader.js\": 189\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 129;","export default __webpack_public_path__ + \"static/media/EminenceFront_TheWho.d981224c.mp3\";","import React from \"react\";\n\nexport default class PageNotFound extends React.Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div>\n                <h4>Error 404 - Page not Found</h4>\n            </div>\n        );\n    }\n}\n\n","// cuon-matrix.js (c) 2012 kanda and matsuda\n/**\n * This is a class treating 4x4 matrix.\n * This class contains the function that is equivalent to OpenGL matrix stack.\n * The matrix after conversion is calculated by multiplying a conversion matrix from the right.\n * The matrix is replaced by the calculated result.\n */\n\nexport abstract class Vector {\n    // @link https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html\n    elements!: Float32Array;    // Definite Assignment Assertions\n}\n\nexport abstract class Matrix extends Vector {\n\n}\n\n\n/**\n * Constructor of Matrix4\n * If opt_src is specified, new matrix is initialized by opt_src.\n * Otherwise, new matrix is initialized by identity matrix.\n * @param opt_src source matrix(option)\n */\nexport class Matrix4 extends Matrix {\n\n    constructor(opt_src ?: Matrix) {\n        super();\n\n        if (undefined === opt_src) {\n            this.elements = new Float32Array(\n                [\n                    1, 0, 0, 0,\n                    0, 1, 0, 0,\n                    0, 0, 1, 0,\n                    0, 0, 0, 1\n                ]);\n            return;\n        }\n\n        let s = opt_src.elements;\n\n        let d = new Float32Array(16);\n\n        for (let i = 0; i < 16; ++i) {\n\n            d[i] = s[i];\n\n        }\n\n        this.elements = d;\n\n    }\n\n    /**\n     * Set the identity matrix.\n     * @return this\n     */\n    setIdentity = () => {\n        const e = this.elements;\n        e[0] = 1;\n        e[4] = 0;\n        e[8] = 0;\n        e[12] = 0;\n        e[1] = 0;\n        e[5] = 1;\n        e[9] = 0;\n        e[13] = 0;\n        e[2] = 0;\n        e[6] = 0;\n        e[10] = 1;\n        e[14] = 0;\n        e[3] = 0;\n        e[7] = 0;\n        e[11] = 0;\n        e[15] = 1;\n        return this;\n    };\n\n    /**\n     * Copy matrix.\n     * @param src source matrix\n     * @return this\n     */\n    set = (src) => {\n        let i, s, d;\n\n        s = src.elements;\n        d = this.elements;\n\n        if (s === d) {\n            return;\n        }\n\n        for (i = 0; i < 16; ++i) {\n            d[i] = s[i];\n        }\n\n        return this;\n    };\n\n    /**\n     * Multiply the matrix from the right.\n     * @param other The multiply matrix\n     * @return this\n     */\n    concat = (other) => {\n        let i, e, a, b, ai0, ai1, ai2, ai3;\n\n        // Calculate e = a * b\n        e = this.elements;\n        a = this.elements;\n        b = other.elements;\n\n        // If e equals b, copy b to temporary matrix.\n        if (e === b) {\n            b = new Float32Array(16);\n            for (i = 0; i < 16; ++i) {\n                b[i] = e[i];\n            }\n        }\n\n        for (i = 0; i < 4; i++) {\n            ai0 = a[i];\n            ai1 = a[i + 4];\n            ai2 = a[i + 8];\n            ai3 = a[i + 12];\n            e[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3];\n            e[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7];\n            e[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11];\n            e[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\n        }\n\n        return this;\n    };\n\n    multiply = this.concat;\n\n    /**\n     * Multiply the three-dimensional vector.\n     * @param pos  The multiply vector\n     * @return The result of multiplication(Float32Array)\n     */\n    multiplyVector3 = (pos) => {\n        const e = this.elements;\n        const p = pos.elements;\n        const v = new Vector3(undefined);\n        const result = v.elements;\n\n        result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[8] + e[12];\n        result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[9] + e[13];\n        result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + e[14];\n\n        return v;\n    };\n\n    /**\n     * Multiply the four-dimensional vector.\n     * @param pos  The multiply vector\n     * @return The result of multiplication(Float32Array)\n     */\n    multiplyVector4 = (pos) => {\n        const e = this.elements;\n        const p = pos.elements;\n        const v = new Vector4(undefined);\n        const result = v.elements;\n\n        result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[8] + p[3] * e[12];\n        result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[9] + p[3] * e[13];\n        result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + p[3] * e[14];\n        result[3] = p[0] * e[3] + p[1] * e[7] + p[2] * e[11] + p[3] * e[15];\n\n        return v;\n    };\n\n    /**\n     * Transpose the matrix.\n     * @return this\n     */\n    transpose = () => {\n        let e, t;\n\n        e = this.elements;\n\n        t = e[1];\n        e[1] = e[4];\n        e[4] = t;\n        t = e[2];\n        e[2] = e[8];\n        e[8] = t;\n        t = e[3];\n        e[3] = e[12];\n        e[12] = t;\n        t = e[6];\n        e[6] = e[9];\n        e[9] = t;\n        t = e[7];\n        e[7] = e[13];\n        e[13] = t;\n        t = e[11];\n        e[11] = e[14];\n        e[14] = t;\n\n        return this;\n    };\n\n    /**\n     * Calculate the inverse matrix of specified matrix, and set to this.\n     * @param other The source matrix\n     * @return this\n     */\n    setInverseOf = (other) => {\n        let i, s, d, inv, det;\n\n        s = other.elements;\n        d = this.elements;\n        inv = new Float32Array(16);\n\n        inv[0] = s[5] * s[10] * s[15] - s[5] * s[11] * s[14] - s[9] * s[6] * s[15]\n            + s[9] * s[7] * s[14] + s[13] * s[6] * s[11] - s[13] * s[7] * s[10];\n        inv[4] = -s[4] * s[10] * s[15] + s[4] * s[11] * s[14] + s[8] * s[6] * s[15]\n            - s[8] * s[7] * s[14] - s[12] * s[6] * s[11] + s[12] * s[7] * s[10];\n        inv[8] = s[4] * s[9] * s[15] - s[4] * s[11] * s[13] - s[8] * s[5] * s[15]\n            + s[8] * s[7] * s[13] + s[12] * s[5] * s[11] - s[12] * s[7] * s[9];\n        inv[12] = -s[4] * s[9] * s[14] + s[4] * s[10] * s[13] + s[8] * s[5] * s[14]\n            - s[8] * s[6] * s[13] - s[12] * s[5] * s[10] + s[12] * s[6] * s[9];\n\n        inv[1] = -s[1] * s[10] * s[15] + s[1] * s[11] * s[14] + s[9] * s[2] * s[15]\n            - s[9] * s[3] * s[14] - s[13] * s[2] * s[11] + s[13] * s[3] * s[10];\n        inv[5] = s[0] * s[10] * s[15] - s[0] * s[11] * s[14] - s[8] * s[2] * s[15]\n            + s[8] * s[3] * s[14] + s[12] * s[2] * s[11] - s[12] * s[3] * s[10];\n        inv[9] = -s[0] * s[9] * s[15] + s[0] * s[11] * s[13] + s[8] * s[1] * s[15]\n            - s[8] * s[3] * s[13] - s[12] * s[1] * s[11] + s[12] * s[3] * s[9];\n        inv[13] = s[0] * s[9] * s[14] - s[0] * s[10] * s[13] - s[8] * s[1] * s[14]\n            + s[8] * s[2] * s[13] + s[12] * s[1] * s[10] - s[12] * s[2] * s[9];\n\n        inv[2] = s[1] * s[6] * s[15] - s[1] * s[7] * s[14] - s[5] * s[2] * s[15]\n            + s[5] * s[3] * s[14] + s[13] * s[2] * s[7] - s[13] * s[3] * s[6];\n        inv[6] = -s[0] * s[6] * s[15] + s[0] * s[7] * s[14] + s[4] * s[2] * s[15]\n            - s[4] * s[3] * s[14] - s[12] * s[2] * s[7] + s[12] * s[3] * s[6];\n        inv[10] = s[0] * s[5] * s[15] - s[0] * s[7] * s[13] - s[4] * s[1] * s[15]\n            + s[4] * s[3] * s[13] + s[12] * s[1] * s[7] - s[12] * s[3] * s[5];\n        inv[14] = -s[0] * s[5] * s[14] + s[0] * s[6] * s[13] + s[4] * s[1] * s[14]\n            - s[4] * s[2] * s[13] - s[12] * s[1] * s[6] + s[12] * s[2] * s[5];\n\n        inv[3] = -s[1] * s[6] * s[11] + s[1] * s[7] * s[10] + s[5] * s[2] * s[11]\n            - s[5] * s[3] * s[10] - s[9] * s[2] * s[7] + s[9] * s[3] * s[6];\n        inv[7] = s[0] * s[6] * s[11] - s[0] * s[7] * s[10] - s[4] * s[2] * s[11]\n            + s[4] * s[3] * s[10] + s[8] * s[2] * s[7] - s[8] * s[3] * s[6];\n        inv[11] = -s[0] * s[5] * s[11] + s[0] * s[7] * s[9] + s[4] * s[1] * s[11]\n            - s[4] * s[3] * s[9] - s[8] * s[1] * s[7] + s[8] * s[3] * s[5];\n        inv[15] = s[0] * s[5] * s[10] - s[0] * s[6] * s[9] - s[4] * s[1] * s[10]\n            + s[4] * s[2] * s[9] + s[8] * s[1] * s[6] - s[8] * s[2] * s[5];\n\n        det = s[0] * inv[0] + s[1] * inv[4] + s[2] * inv[8] + s[3] * inv[12];\n        if (det === 0) {\n            return this;\n        }\n\n        det = 1 / det;\n        for (i = 0; i < 16; i++) {\n            d[i] = inv[i] * det;\n        }\n\n        return this;\n    };\n\n    /**\n     * Calculate the inverse matrix of this, and set to this.\n     * @return this\n     */\n    invert = () => {\n        return this.setInverseOf(this);\n    };\n\n    /**\n     * Set the orthographic projection matrix.\n     * @param left The coordinate of the left of clipping plane.\n     * @param right The coordinate of the right of clipping plane.\n     * @param bottom The coordinate of the bottom of clipping plane.\n     * @param top The coordinate of the top top clipping plane.\n     * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\n     * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\n     * @return this\n     */\n    setOrtho = (left, right, bottom, top, near, far) => {\n        let e, rw, rh, rd;\n\n        if (left === right || bottom === top || near === far) {\n            throw 'null frustum';\n        }\n\n        rw = 1 / (right - left);\n        rh = 1 / (top - bottom);\n        rd = 1 / (far - near);\n\n        e = this.elements;\n\n        e[0] = 2 * rw;\n        e[1] = 0;\n        e[2] = 0;\n        e[3] = 0;\n\n        e[4] = 0;\n        e[5] = 2 * rh;\n        e[6] = 0;\n        e[7] = 0;\n\n        e[8] = 0;\n        e[9] = 0;\n        e[10] = -2 * rd;\n        e[11] = 0;\n\n        e[12] = -(right + left) * rw;\n        e[13] = -(top + bottom) * rh;\n        e[14] = -(far + near) * rd;\n        e[15] = 1;\n\n        return this;\n    };\n\n    /**\n     * Multiply the orthographic projection matrix from the right.\n     * @param left The coordinate of the left of clipping plane.\n     * @param right The coordinate of the right of clipping plane.\n     * @param bottom The coordinate of the bottom of clipping plane.\n     * @param top The coordinate of the top top clipping plane.\n     * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\n     * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\n     * @return this\n     */\n    ortho = (left, right, bottom, top, near, far) => {\n        return this.concat(new Matrix4().setOrtho(left, right, bottom, top, near, far));\n    };\n\n    /**\n     * Set the perspective projection matrix.\n     * @param left The coordinate of the left of clipping plane.\n     * @param right The coordinate of the right of clipping plane.\n     * @param bottom The coordinate of the bottom of clipping plane.\n     * @param top The coordinate of the top top clipping plane.\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\n     * @return this\n     */\n    setFrustum = (left, right, bottom, top, near, far) => {\n        let e, rw, rh, rd;\n\n        if (left === right || top === bottom || near === far) {\n            throw 'null frustum';\n        }\n        if (near <= 0) {\n            throw 'near <= 0';\n        }\n        if (far <= 0) {\n            throw 'far <= 0';\n        }\n\n        rw = 1 / (right - left);\n        rh = 1 / (top - bottom);\n        rd = 1 / (far - near);\n\n        e = this.elements;\n\n        e[0] = 2 * near * rw;\n        e[1] = 0;\n        e[2] = 0;\n        e[3] = 0;\n\n        e[4] = 0;\n        e[5] = 2 * near * rh;\n        e[6] = 0;\n        e[7] = 0;\n\n        e[8] = (right + left) * rw;\n        e[9] = (top + bottom) * rh;\n        e[10] = -(far + near) * rd;\n        e[11] = -1;\n\n        e[12] = 0;\n        e[13] = 0;\n        e[14] = -2 * near * far * rd;\n        e[15] = 0;\n\n        return this;\n    };\n\n    /**\n     * Multiply the perspective projection matrix from the right.\n     * @param left The coordinate of the left of clipping plane.\n     * @param right The coordinate of the right of clipping plane.\n     * @param bottom The coordinate of the bottom of clipping plane.\n     * @param top The coordinate of the top top clipping plane.\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\n     * @return this\n     */\n    frustum = (left, right, bottom, top, near, far) => {\n        return this.concat(new Matrix4().setFrustum(left, right, bottom, top, near, far));\n    };\n\n    /**\n     * Set the perspective projection matrix by fovy and aspect.\n     * @param fovy The angle between the upper and lower sides of the frustum.\n     * @param aspect The aspect ratio of the frustum. (width/height)\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\n     * @return this\n     */\n    setPerspective = (fovy, aspect, near, far) => {\n        let e, rd, s, ct;\n\n        if (near === far || aspect === 0) {\n            throw 'null frustum';\n        }\n        if (near <= 0) {\n            throw 'near <= 0';\n        }\n        if (far <= 0) {\n            throw 'far <= 0';\n        }\n\n        fovy = Math.PI * fovy / 180 / 2;\n        s = Math.sin(fovy);\n        if (s === 0) {\n            throw 'null frustum';\n        }\n\n        rd = 1 / (far - near);\n        ct = Math.cos(fovy) / s;\n\n        e = this.elements;\n\n        e[0] = ct / aspect;\n        e[1] = 0;\n        e[2] = 0;\n        e[3] = 0;\n\n        e[4] = 0;\n        e[5] = ct;\n        e[6] = 0;\n        e[7] = 0;\n\n        e[8] = 0;\n        e[9] = 0;\n        e[10] = -(far + near) * rd;\n        e[11] = -1;\n\n        e[12] = 0;\n        e[13] = 0;\n        e[14] = -2 * near * far * rd;\n        e[15] = 0;\n\n        return this;\n    };\n\n    /**\n     * Multiply the perspective projection matrix from the right.\n     * @param fovy The angle between the upper and lower sides of the frustum.\n     * @param aspect The aspect ratio of the frustum. (width/height)\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\n     * @return this\n     */\n    perspective = (fovy, aspect, near, far) => {\n        return this.concat(new Matrix4().setPerspective(fovy, aspect, near, far));\n    };\n\n    /**\n     * Set the matrix for scaling.\n     * @param x The scale factor along the X axis\n     * @param y The scale factor along the Y axis\n     * @param z The scale factor along the Z axis\n     * @return this\n     */\n    setScale = (x, y, z) => {\n        const e = this.elements;\n        e[0] = x;\n        e[4] = 0;\n        e[8] = 0;\n        e[12] = 0;\n        e[1] = 0;\n        e[5] = y;\n        e[9] = 0;\n        e[13] = 0;\n        e[2] = 0;\n        e[6] = 0;\n        e[10] = z;\n        e[14] = 0;\n        e[3] = 0;\n        e[7] = 0;\n        e[11] = 0;\n        e[15] = 1;\n        return this;\n    };\n\n    /**\n     * Multiply the matrix for scaling from the right.\n     * @param x The scale factor along the X axis\n     * @param y The scale factor along the Y axis\n     * @param z The scale factor along the Z axis\n     * @return this\n     */\n    scale = (x, y, z) => {\n        const e = this.elements;\n        e[0] *= x;\n        e[4] *= y;\n        e[8] *= z;\n        e[1] *= x;\n        e[5] *= y;\n        e[9] *= z;\n        e[2] *= x;\n        e[6] *= y;\n        e[10] *= z;\n        e[3] *= x;\n        e[7] *= y;\n        e[11] *= z;\n        return this;\n    };\n\n    /**\n     * Set the matrix for translation.\n     * @param x The X value of a translation.\n     * @param y The Y value of a translation.\n     * @param z The Z value of a translation.\n     * @return this\n     */\n    setTranslate = (x, y, z) => {\n        const e = this.elements;\n        e[0] = 1;\n        e[4] = 0;\n        e[8] = 0;\n        e[12] = x;\n        e[1] = 0;\n        e[5] = 1;\n        e[9] = 0;\n        e[13] = y;\n        e[2] = 0;\n        e[6] = 0;\n        e[10] = 1;\n        e[14] = z;\n        e[3] = 0;\n        e[7] = 0;\n        e[11] = 0;\n        e[15] = 1;\n        return this;\n    };\n\n    /**\n     * Multiply the matrix for translation from the right.\n     * @param x The X value of a translation.\n     * @param y The Y value of a translation.\n     * @param z The Z value of a translation.\n     * @return this\n     */\n    translate = (x, y, z) => {\n        const e = this.elements;\n        e[12] += e[0] * x + e[4] * y + e[8] * z;\n        e[13] += e[1] * x + e[5] * y + e[9] * z;\n        e[14] += e[2] * x + e[6] * y + e[10] * z;\n        e[15] += e[3] * x + e[7] * y + e[11] * z;\n        return this;\n    };\n\n    /**\n     * Set the matrix for rotation.\n     * The vector of rotation axis may not be normalized.\n     * @param angle The angle of rotation (degrees)\n     * @param x The X coordinate of vector of rotation axis.\n     * @param y The Y coordinate of vector of rotation axis.\n     * @param z The Z coordinate of vector of rotation axis.\n     * @return this\n     */\n    setRotate = (angle, x, y, z) => {\n        let e, s, c, len, rlen, nc, xy, yz, zx, xs, ys, zs;\n\n        angle = Math.PI * angle / 180;\n        e = this.elements;\n\n        s = Math.sin(angle);\n        c = Math.cos(angle);\n\n        if (0 !== x && 0 === y && 0 === z) {\n            // Rotation around X axis\n            if (x < 0) {\n                s = -s;\n            }\n            e[0] = 1;\n            e[4] = 0;\n            e[8] = 0;\n            e[12] = 0;\n            e[1] = 0;\n            e[5] = c;\n            e[9] = -s;\n            e[13] = 0;\n            e[2] = 0;\n            e[6] = s;\n            e[10] = c;\n            e[14] = 0;\n            e[3] = 0;\n            e[7] = 0;\n            e[11] = 0;\n            e[15] = 1;\n        } else if (0 === x && 0 !== y && 0 === z) {\n            // Rotation around Y axis\n            if (y < 0) {\n                s = -s;\n            }\n            e[0] = c;\n            e[4] = 0;\n            e[8] = s;\n            e[12] = 0;\n            e[1] = 0;\n            e[5] = 1;\n            e[9] = 0;\n            e[13] = 0;\n            e[2] = -s;\n            e[6] = 0;\n            e[10] = c;\n            e[14] = 0;\n            e[3] = 0;\n            e[7] = 0;\n            e[11] = 0;\n            e[15] = 1;\n        } else if (0 === x && 0 === y && 0 !== z) {\n            // Rotation around Z axis\n            if (z < 0) {\n                s = -s;\n            }\n            e[0] = c;\n            e[4] = -s;\n            e[8] = 0;\n            e[12] = 0;\n            e[1] = s;\n            e[5] = c;\n            e[9] = 0;\n            e[13] = 0;\n            e[2] = 0;\n            e[6] = 0;\n            e[10] = 1;\n            e[14] = 0;\n            e[3] = 0;\n            e[7] = 0;\n            e[11] = 0;\n            e[15] = 1;\n        } else {\n            // Rotation around another axis\n            len = Math.sqrt(x * x + y * y + z * z);\n            if (len !== 1) {\n                rlen = 1 / len;\n                x *= rlen;\n                y *= rlen;\n                z *= rlen;\n            }\n            nc = 1 - c;\n            xy = x * y;\n            yz = y * z;\n            zx = z * x;\n            xs = x * s;\n            ys = y * s;\n            zs = z * s;\n\n            e[0] = x * x * nc + c;\n            e[1] = xy * nc + zs;\n            e[2] = zx * nc - ys;\n            e[3] = 0;\n\n            e[4] = xy * nc - zs;\n            e[5] = y * y * nc + c;\n            e[6] = yz * nc + xs;\n            e[7] = 0;\n\n            e[8] = zx * nc + ys;\n            e[9] = yz * nc - xs;\n            e[10] = z * z * nc + c;\n            e[11] = 0;\n\n            e[12] = 0;\n            e[13] = 0;\n            e[14] = 0;\n            e[15] = 1;\n        }\n\n        return this;\n    };\n\n    /**\n     * Multiply the matrix for rotation from the right.\n     * The vector of rotation axis may not be normalized.\n     * @param angle The angle of rotation (degrees)\n     * @param x The X coordinate of vector of rotation axis.\n     * @param y The Y coordinate of vector of rotation axis.\n     * @param z The Z coordinate of vector of rotation axis.\n     * @return this\n     */\n    rotate = (angle, x, y, z) => {\n        return this.concat(new Matrix4().setRotate(angle, x, y, z));\n    };\n\n    /**\n     * Set the viewing matrix.\n     * @param eyeX, eyeY, eyeZ The position of the eye point.\n     * @param centerX, centerY, centerZ The position of the reference point.\n     * @param upX, upY, upZ The direction of the up vector.\n     * @return this\n     */\n    setLookAt = (eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ) => {\n        let e, fx, fy, fz, rlf, sx, sy, sz, rls, ux, uy, uz;\n\n        fx = centerX - eyeX;\n        fy = centerY - eyeY;\n        fz = centerZ - eyeZ;\n\n        // Normalize f.\n        rlf = 1 / Math.sqrt(fx * fx + fy * fy + fz * fz);\n        fx *= rlf;\n        fy *= rlf;\n        fz *= rlf;\n\n        // Calculate cross product of f and up.\n        sx = fy * upZ - fz * upY;\n        sy = fz * upX - fx * upZ;\n        sz = fx * upY - fy * upX;\n\n        // Normalize s.\n        rls = 1 / Math.sqrt(sx * sx + sy * sy + sz * sz);\n        sx *= rls;\n        sy *= rls;\n        sz *= rls;\n\n        // Calculate cross product of s and f.\n        ux = sy * fz - sz * fy;\n        uy = sz * fx - sx * fz;\n        uz = sx * fy - sy * fx;\n\n        // Set to this.\n        e = this.elements;\n        e[0] = sx;\n        e[1] = ux;\n        e[2] = -fx;\n        e[3] = 0;\n\n        e[4] = sy;\n        e[5] = uy;\n        e[6] = -fy;\n        e[7] = 0;\n\n        e[8] = sz;\n        e[9] = uz;\n        e[10] = -fz;\n        e[11] = 0;\n\n        e[12] = 0;\n        e[13] = 0;\n        e[14] = 0;\n        e[15] = 1;\n\n        // Translate.\n        return this.translate(-eyeX, -eyeY, -eyeZ);\n    };\n\n    /**\n     * Multiply the viewing matrix from the right.\n     * @param eyeX, eyeY, eyeZ The position of the eye point.\n     * @param centerX, centerY, centerZ The position of the reference point.\n     * @param upX, upY, upZ The direction of the up vector.\n     * @return this\n     */\n    lookAt = (eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ) => {\n        return this.concat(new Matrix4().setLookAt(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ));\n    };\n\n    /**\n     * Multiply the matrix for project vertex to plane from the right.\n     * @param plane The array[A, B, C, D] of the equation of plane \"Ax + By + Cz + D = 0\".\n     * @param light The array which stored coordinates of the light. if light[3]=0, treated as parallel light.\n     * @return this\n     */\n    dropShadow = (plane, light) => {\n        const mat = new Matrix4();\n        const e = mat.elements;\n\n        const dot = plane[0] * light[0] + plane[1] * light[1] + plane[2] * light[2] + plane[3] * light[3];\n\n        e[0] = dot - light[0] * plane[0];\n        e[1] = -light[1] * plane[0];\n        e[2] = -light[2] * plane[0];\n        e[3] = -light[3] * plane[0];\n\n        e[4] = -light[0] * plane[1];\n        e[5] = dot - light[1] * plane[1];\n        e[6] = -light[2] * plane[1];\n        e[7] = -light[3] * plane[1];\n\n        e[8] = -light[0] * plane[2];\n        e[9] = -light[1] * plane[2];\n        e[10] = dot - light[2] * plane[2];\n        e[11] = -light[3] * plane[2];\n\n        e[12] = -light[0] * plane[3];\n        e[13] = -light[1] * plane[3];\n        e[14] = -light[2] * plane[3];\n        e[15] = dot - light[3] * plane[3];\n\n        return this.concat(mat);\n    }\n\n    /**\n     * Multiply the matrix for project vertex to plane from the right.(Projected by parallel light.)\n     * @param normX, normY, normZ The normal vector of the plane.(Not necessary to be normalized.)\n     * @param planeX, planeY, planeZ The coordinate of arbitrary points on a plane.\n     * @param lightX, lightY, lightZ The vector of the direction of light.(Not necessary to be normalized.)\n     * @return this\n     */\n    dropShadowDirectionally = (normX, normY, normZ, planeX, planeY, planeZ, lightX, lightY, lightZ) => {\n        const a = planeX * normX + planeY * normY + planeZ * normZ;\n        return this.dropShadow([normX, normY, normZ, -a], [lightX, lightY, lightZ, 0]);\n    };\n}\n\n/**\n * Constructor of Vector3\n * If opt_src is specified, new vector is initialized by opt_src.\n * @param opt_src source vector(option)\n */\nexport class Vector3 extends Vector {\n\n\n    constructor(opt_src ?: Vector | Float32Array) {\n        super();\n\n        const v = new Float32Array(3);\n\n        if (opt_src && typeof opt_src === 'object') {\n            v[0] = opt_src[0];\n            v[1] = opt_src[1];\n            v[2] = opt_src[2];\n        }\n\n        this.elements = v;\n\n    }\n\n    /**\n     * Normalize.\n     * @return this\n     */\n    normalize = () => {\n        const v = this.elements;\n        const c = v[0], d = v[1], e = v[2];\n        let g = Math.sqrt(c * c + d * d + e * e);\n        if (g) {\n            if (g == 1)\n                return this;\n        } else {\n            v[0] = 0;\n            v[1] = 0;\n            v[2] = 0;\n            return this;\n        }\n        g = 1 / g;\n        v[0] = c * g;\n        v[1] = d * g;\n        v[2] = e * g;\n        return this;\n    };\n}\n\n\n/**\n * Constructor of Vector4\n * If opt_src is specified, new vector is initialized by opt_src.\n * @param opt_src source vector(option)\n */\nexport class Vector4 extends Vector {\n\n\n    constructor(opt_src ?: Vector) {\n        super();\n\n        const v = new Float32Array(4);\n\n        if (undefined !== opt_src) {\n            v[0] = opt_src[0];\n            v[1] = opt_src[1];\n            v[2] = opt_src[2];\n            v[3] = opt_src[3];\n        }\n\n        this.elements = v;\n    }\n}","/*\r\n * Copyright 2010, Google Inc.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *     * Redistributions of source code must retain the above copyright\r\n * notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above\r\n * copyright notice, this list of conditions and the following disclaimer\r\n * in the documentation and/or other materials provided with the\r\n * distribution.\r\n *     * Neither the name of Google Inc. nor the names of its\r\n * contributors may be used to endorse or promote products derived from\r\n * this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @fileoverview This file contains functions every webgl program will need\r\n * a version of one way or another.\r\n *\r\n * Instead of setting up a context manually it is recommended to\r\n * use. This will check for success or failure. On failure it\r\n * will attempt to present an approriate message to the user.\r\n *\r\n *       gl = WebglUtils.setupWebGL(canvas);\r\n *\r\n * For animated WebGL apps use of setTimeout or setInterval are\r\n * discouraged. It is recommended you structure your rendering\r\n * loop like this.\r\n *\r\n *       function render() {\r\n *         window.requestAnimationFrame(render, canvas);\r\n *\r\n *         // do rendering\r\n *         ...\r\n *       }\r\n *       render();\r\n *\r\n * This will call your rendering function up to the refresh rate\r\n * of your display but will stop rendering if your app is not\r\n * visible.\r\n */\r\n\r\nexport const WebglUtils = function() {\r\n\r\n/**\r\n * Creates the HTLM for a failure message\r\n * @param {string} canvasContainerId id of container of th\r\n *        canvas.\r\n * @return {string} The html.\r\n */\r\nvar makeFailHTML = function(msg) {\r\n  return '' +\r\n        '<div style=\"margin: auto; width:500px;z-index:10000;' +\r\n        'margin-top:20em;text-align:center;\">' + msg + '</div>';\r\n  return '' +\r\n    '<table style=\"background-color: #8CE; width: 100%; height: 100%;\"><tr>' +\r\n    '<td align=\"center\">' +\r\n    '<div style=\"display: table-cell; vertical-align: middle;\">' +\r\n    '<div style=\"\">' + msg + '</div>' +\r\n    '</div>' +\r\n    '</td></tr></table>';\r\n};\r\n\r\n/**\r\n * Message for getting a webgl browser\r\n * @type {string}\r\n */\r\nvar GET_A_WEBGL_BROWSER = '' +\r\n  'This page requires a browser that supports WebGL.<br/>' +\r\n  '<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>';\r\n\r\n/**\r\n * Message for need better hardware\r\n * @type {string}\r\n */\r\nvar OTHER_PROBLEM = '' +\r\n  \"It doesn't appear your computer can support WebGL.<br/>\" +\r\n  '<a href=\"http://get.webgl.org\">Click here for more information.</a>';\r\n\r\n/**\r\n * Creates a webgl context. If creation fails it will\r\n * change the contents of the container of the <canvas>\r\n * tag to an error message with the correct links for WebGL.\r\n * @param {Element} canvas. The canvas element to create a\r\n *     context from.\r\n * @param {WebGLContextCreationAttirbutes} opt_attribs Any\r\n *     creation attributes you want to pass in.\r\n * @param {function:(msg)} opt_onError An function to call\r\n *     if there is an error during creation.\r\n * @return {WebGLRenderingContext} The created context.\r\n */\r\nvar setupWebGL = function(canvas, opt_attribs, opt_onError) {\r\n  function handleCreationError(msg) {\r\n      var container = document.getElementsByTagName(\"body\")[0];\r\n    //var container = canvas.parentNode;\r\n    if (container) {\r\n      var str = window.WebGLRenderingContext ?\r\n           OTHER_PROBLEM :\r\n           GET_A_WEBGL_BROWSER;\r\n      if (msg) {\r\n        str += \"<br/><br/>Status: \" + msg;\r\n      }\r\n      container.innerHTML = makeFailHTML(str);\r\n    }\r\n  };\r\n\r\n  opt_onError = opt_onError || handleCreationError;\r\n\r\n  if (canvas.addEventListener) {\r\n    canvas.addEventListener(\"webglcontextcreationerror\", function(event) {\r\n          opt_onError(event.statusMessage);\r\n        }, false);\r\n  }\r\n  var context = create3DContext(canvas, opt_attribs);\r\n  if (!context) {\r\n    if (!window.WebGLRenderingContext) {\r\n      opt_onError(\"\");\r\n    } else {\r\n      opt_onError(\"\");\r\n    }\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\n/**\r\n * Creates a webgl context.\r\n * @param {!Canvas} canvas The canvas tag to get context\r\n *     from. If one is not passed in one will be created.\r\n * @return {!WebGLContext} The created context.\r\n */\r\nvar create3DContext = function(canvas, opt_attribs) {\r\n  var names = [\"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\r\n  var context = null;\r\n  for (var ii = 0; ii < names.length; ++ii) {\r\n    try {\r\n      context = canvas.getContext(names[ii], opt_attribs);\r\n    } catch(e) {}\r\n    if (context) {\r\n      break;\r\n    }\r\n  }\r\n  return context;\r\n}\r\n\r\nreturn {\r\n  create3DContext: create3DContext,\r\n  setupWebGL: setupWebGL\r\n};\r\n}();\r\n\r\n/**\r\n * Provides requestAnimationFrame in a cross browser\r\n * way.\r\n */\r\nif (!window.requestAnimationFrame) {\r\n  window.requestAnimationFrame = (function() {\r\n    return window.requestAnimationFrame ||\r\n           window.webkitRequestAnimationFrame ||\r\n           window.mozRequestAnimationFrame ||\r\n           window.oRequestAnimationFrame ||\r\n           window.msRequestAnimationFrame ||\r\n           function(/* function FrameRequestCallback */ callback, \r\n                    /* DOMElement Element */ element) {\r\n             window.setTimeout(callback, 1000/60);\r\n           };\r\n  })();\r\n}\r\n\r\n/** * ERRATA: 'cancelRequestAnimationFrame' renamed to 'cancelAnimationFrame' \r\n *    to reflect an update to the W3C Animation-Timing Spec. \r\n * \r\n * Cancels an animation frame request. \r\n * Checks for cross-browser support, falls back to clearTimeout. \r\n * @param {number}  Animation frame request. */\r\nif (!window.cancelAnimationFrame) {\r\n  window.cancelAnimationFrame = (window.cancelRequestAnimationFrame ||\r\n                                 window.webkitCancelAnimationFrame || \r\n                                 window.webkitCancelRequestAnimationFrame ||\r\n                                 window.mozCancelAnimationFrame || \r\n                                 window.mozCancelRequestAnimationFrame ||\r\n                                 window.msCancelAnimationFrame || \r\n                                 window.msCancelRequestAnimationFrame ||\r\n                                 window.oCancelAnimationFrame || \r\n                                 window.oCancelRequestAnimationFrame ||\r\n                                 window.clearTimeout);\r\n}\r\n","// cuon-utils.tsx (mit) 2021 richardtmiles\n// @ref cuon-utils.js - 2012 kanda and matsuda\n\nimport {WebglUtils} from \"./webgl-utils\"\n\n\n/**\n * Create the linked program object\n * @param gl GL context\n * @param vshader a vertex shad\n * er program (string)\n * @param fshader a fragment shader program (string)\n * @param name a generic attribute keyable with the .find() method\n * @return created program object, or null if the creation has failed\n */\nexport function createProgram<AdditionalAttributesType = {}, iWebGLProgramType = iWebGLProgram>\n(gl: iWebGLRenderingContext<any, iWebGLProgramType>, vshader: string, fshader: string, name: string = \"default\")\n    : iWebGLRenderingContextProgram<AdditionalAttributesType, iWebGLProgramType> {\n\n    // Create shader object\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vshader);\n\n    if (!vertexShader) {\n        throw 'Could not load vertex shader!'\n    }\n\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fshader);\n\n    if (!fragmentShader) {\n        throw 'Could not load fragment shader!'\n    }\n\n    // Create a program object\n    const program: iWebGLProgramType | null = gl.createProgram() as iWebGLProgramType;\n\n    if (!program) {\n\n        throw 'Failed to create webgl program!'\n\n    }\n\n    // Attach the shader objects\n    gl.attachShader(program, vertexShader);\n\n    gl.attachShader(program, fragmentShader);\n\n    // Link the program object\n    gl.linkProgram(program);\n\n    // Check the result of linking\n    const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n    if (!linked) {\n\n        const error = gl.getProgramInfoLog(program);\n\n        console.log('Failed to link program: ' + error);\n\n        gl.deleteProgram(program);\n\n        gl.deleteShader(fragmentShader);\n\n        gl.deleteShader(vertexShader);\n\n        throw 'Failed to link program: ' + error;\n\n    }\n\n    const iProgram = {\n        name: name,\n        value: program\n    };\n\n    gl.useProgram(program);\n\n    gl.program = iProgram;\n\n    if (undefined === gl.programs) {\n\n        gl.programs = [];\n\n    }\n\n    gl.programs.push(iProgram);\n\n    return iProgram;\n\n}\n\n/**\n * Create a shader object\n * @param gl GL context\n * @param type the type of the shader object to be created\n * @param source shader program (string)\n * @return created shader object, or null if the creation has failed.\n */\nexport function loadShader(gl: WebGLRenderingContext, type: number, source) {\n\n    // Create shader object\n    const shader = gl.createShader(type);\n\n    if (shader == null) {\n\n        const message = 'unable to create shader';\n\n        console.error(message);\n\n        throw message\n\n    }\n\n    // Set the shader program\n    gl.shaderSource(shader, source);\n\n    // Compile the shader\n    gl.compileShader(shader);\n\n    // Check the result of compilation\n    const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n    if (!compiled) {\n\n        const error = gl.getShaderInfoLog(shader);\n\n        console.log('Failed to compile shader: ' + error);\n\n        gl.deleteShader(shader);\n\n        return null;\n\n    }\n\n    return shader;\n\n}\n\n\nexport interface iWebGLProgram<iWebGLProgramAdditionalAttributesType = any>\n    extends WebGLProgram {\n    attributes?: iWebGLProgramAdditionalAttributesType\n}\n\nexport interface iWebGLRenderingContextProgram<AdditionalAttributesType = any, iWebGLProgramAdditionalAttributesType = any> {\n    name: string,\n    value: iWebGLProgram<iWebGLProgramAdditionalAttributesType>,\n    attributes?: AdditionalAttributesType\n}\n\nexport interface iWebGLRenderingContext<AdditionalAttributesType = any, WebGLProgramType = iWebGLRenderingContextProgram>\n    extends WebGLRenderingContext {\n    canvas: HTMLCanvasElement,  // this override is helpful for ts\n    program?: iWebGLRenderingContextProgram<WebGLProgramType>,\n    programs?: Array<iWebGLRenderingContextProgram<WebGLProgramType> | undefined>,\n    attributes: AdditionalAttributesType\n}\n\n\nexport interface iProgramArgs {\n    vertexShader?: string,\n    fragmentShader?: string,\n    name?: string\n}\n\n/**\n * Initialize and get the rendering for WebGL\n * @param canvasId <string> element\n * @param programs\n * @return the rendering context for WebGL\n */\nexport function getWebGLContext<iWebGLRenderingContextAdditionalAttributesType = any, WebGLProgramType = iWebGLRenderingContextProgram>\n(canvasId: string, programs ?: Array<iProgramArgs>)\n    : iWebGLRenderingContext<iWebGLRenderingContextAdditionalAttributesType, WebGLProgramType> {\n\n    const canvas: HTMLCanvasElement | null = document.getElementById(canvasId) as HTMLCanvasElement;\n\n    if (null === canvas) {\n\n        throw 'Failed to find the canvas element on the page!'\n\n    }\n\n    // Get the rendering context for WebGL\n    const gl: iWebGLRenderingContext<iWebGLRenderingContextAdditionalAttributesType, WebGLProgramType>\n        = WebglUtils.setupWebGL(canvas, undefined, undefined) as iWebGLRenderingContext<iWebGLRenderingContextAdditionalAttributesType, WebGLProgramType>;\n\n    // @link https://stackoverflow.com/questions/13142635/how-can-i-create-an-object-based-on-an-interface-file-definition-in-typescript\n    gl.attributes = {} as iWebGLRenderingContextAdditionalAttributesType;\n\n    if (!gl) {\n\n        throw 'WebglUtils failed to setupWebGL()!';\n\n    }\n\n    programs?.map((value: iProgramArgs) => {\n\n        if (value.vertexShader === undefined\n            || value.fragmentShader === undefined) {\n\n            throw 'getWebGLContext was called incorrectly; vshader or fshader was undefined but not both. To skip program binding in getWebGLContext exclude both optional parameters';\n\n        }\n\n        createProgram<any, WebGLProgramType>(gl, value.vertexShader, value.fragmentShader, value.name);\n\n    });\n\n    return gl as iWebGLRenderingContext<iWebGLRenderingContextAdditionalAttributesType, WebGLProgramType>;\n\n}\n\n","import React, {Component} from \"react\";\nimport {Matrix4} from \"assets/js/cuon-matrix\";\nimport {getWebGLContext, iWebGLRenderingContext} from \"assets/js/cuon-utils\";\n\n\nconst a_Face = 'a_Face';\nconst a_Color = 'a_Color';\n\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class OrbDefence extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE = `\n        attribute vec4 a_Position;\n        attribute vec4 ${a_Color};\n        attribute float ${a_Face}; // Surface number (Cannot use int for attribute variable)\n        uniform mat4 u_MvpMatrix;\n        uniform int u_PickedFace; // Surface number of selected face\n        varying vec4 v_Color;\n        \n        void main() {\n        \n            gl_Position = u_MvpMatrix * a_Position;\n        \n            int face = int(a_Face); // Convert to int\n        \n            // @link https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)\n            vec3 color = (face == u_PickedFace) ? vec3(1.0, 0.3, 0.5) : a_Color.rgb; \n        \n            if (u_PickedFace == 0) { // In case of 0, insert the face number into alpha\n        \n                v_Color = vec4(color, a_Face/255.0);\n        \n            } else {\n        \n                v_Color = vec4(color, a_Color.a);\n        \n            }\n        \n        }`;\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE = `\n        #ifdef GL_ES\n        precision mediump float;\n        #endif\n        varying vec4 v_Color;\n        \n        void main() {\n            \n            gl_FragColor = v_Color;\n        \n        }`;\n\n    ANGLE_STEP = 100.0; // Rotation angle (degrees/second)\n\n    currentAngle = 0.0; // Current rotation angle\n\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        const gl: iWebGLRenderingContext = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        // Retrieve <canvas> element\n        const hud: HTMLCanvasElement | null = document.getElementById('hud') as HTMLCanvasElement;\n\n        // Get the rendering context for 2DCG\n        const ctx: CanvasRenderingContext2D | null = hud.getContext('2d');\n\n        if (!gl || !ctx) {\n            console.log('Failed to get rendering context');\n            return;\n        }\n\n        // Set the vertex information\n        const n : number = this.initVertexBuffers(gl);\n\n        if (n < 0) {\n            console.log('Failed to set the vertex information');\n            return;\n        }\n\n        // Set the clear color and enable the depth test\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\n        gl.enable(gl.DEPTH_TEST);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program orb'\n        }\n\n        // Get the storage locations of uniform variables\n        const u_MvpMatrix: WebGLUniformLocation | null = gl.getUniformLocation(program, 'u_MvpMatrix');\n\n        const u_PickedFace: WebGLUniformLocation | null = gl.getUniformLocation(program, 'u_PickedFace');\n\n        if (!u_MvpMatrix || !u_PickedFace) {\n\n            console.log('Failed to get the storage location of uniform variable');\n\n            return;\n\n        }\n\n        // Calculate the view projection matrix\n        const viewProjMatrix: Matrix4 = new Matrix4(undefined);\n\n        viewProjMatrix.setPerspective(30.0, window.innerWidth / window.innerHeight, 1.0, 100.0);\n\n        viewProjMatrix.lookAt(0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0);\n\n        // Initialize selected surface\n        gl.uniform1i(u_PickedFace, -1);\n\n        // Register the event handler\n        hud.onmousedown = (ev: MouseEvent) => {   // Mouse is pressed\n\n            const target = ev.target as HTMLElement;\n\n            const x: number = ev.clientX,\n                y: number = ev.clientY;\n\n            // @link https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n            const rect = target.getBoundingClientRect();\n\n            if (rect.left <= x && x < rect.right && rect.top <= y && y < rect.bottom) {\n\n                // If Clicked position is inside the <canvas>, update the selected surface\n                const x_in_canvas: number = x - rect.left,\n                    y_in_canvas: number = rect.bottom - y;\n\n                const face = this.checkFace(gl, n, x_in_canvas, y_in_canvas, this.currentAngle, u_PickedFace, viewProjMatrix, u_MvpMatrix);\n\n                gl.uniform1i(u_PickedFace, face); // Pass the surface number to u_PickedFace\n\n                this.draw(gl, n, this.currentAngle, viewProjMatrix, u_MvpMatrix);\n\n            }\n\n        }\n\n        const tick = () => {   // Start drawing\n\n            this.currentAngle = this.animate(this.currentAngle);\n\n            this.draw2D(ctx, this.currentAngle); // Draw 2D\n\n            this.draw(gl, n, this.currentAngle, viewProjMatrix, u_MvpMatrix);\n\n            requestAnimationFrame(tick);\n\n        };\n\n        tick();\n\n    }\n\n    initVertexBuffers = (gl: WebGLRenderingContext): number => {\n        // Create a cube\n        //    v6----- v5\n        //   /|      /|\n        //  v1------v0|\n        //  | |     | |\n        //  | |v7---|-|v4\n        //  |/      |/\n        //  v2------v3\n\n        const vertices = new Float32Array([   // Vertex coordinates\n            1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0,    // v0-v1-v2-v3 front\n            1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0,    // v0-v3-v4-v5 right\n            1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0,    // v0-v5-v6-v1 up\n            -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0,    // v1-v6-v7-v2 left\n            -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0,    // v7-v4-v3-v2 down\n            1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0     // v4-v7-v6-v5 back\n        ]);\n\n        const colors = new Float32Array([   // Colors\n            0.80, 1.0, 0.56, 0.32, 0.18, 0.56, 0.02, 0.18, 0.56, 0.32, 0.18, 0.56, // v0-v1-v2-v3 front\n            0.5, 0.41, 0.69, 0.10, 0.41, 0.69, 0.5, 0.41, 0.69, 0.5, 0.41, 0.69,  // v0-v3-v4-v5 right\n            0.78, 0.20, 0.84, 0.78, 0.69, 0.84, 0.78, 0.69, 0.84, 0.78, 0.69, 0.84, // v0-v5-v6-v1 up\n            0.0, 0.10, 0.61, 0.0, 0.32, 0.61, 0.70, 0.32, 0.61, 0.0, 0.32, 0.00,  // v1-v6-v7-v2 left\n            0.27, 0.80, 0.82, 0.27, 0.58, 0.82, 0.97, 0.58, 0.82, 0.27, 0.58, 0.82, // v7-v4-v3-v2 down\n            0.73, 0.12, 0.93, 0.43, 0.82, 0.93, 0.73, 0.82, 0.93, 0.73, 0.82, 0.93, // v4-v7-v6-v5 back\n        ]);\n\n        const faces = new Uint8Array([   // Faces\n            1, 1, 1, 1,     // v0-v1-v2-v3 front\n            2, 2, 2, 2,     // v0-v3-v4-v5 right\n            3, 3, 3, 3,     // v0-v5-v6-v1 up\n            4, 4, 4, 4,     // v1-v6-v7-v2 left\n            5, 5, 5, 5,     // v7-v4-v3-v2 down\n            6, 6, 6, 6,     // v4-v7-v6-v5 back\n        ]);\n\n        const indices = new Uint8Array([   // Indices of the vertices\n            0, 1, 2, 0, 2, 3,    // front\n            4, 5, 6, 4, 6, 7,    // right\n            8, 9, 10, 8, 10, 11,    // up\n            12, 13, 14, 12, 14, 15,    // left\n            16, 17, 18, 16, 18, 19,    // down\n            20, 21, 22, 20, 22, 23     // back\n        ]);\n\n        // Create a buffer object\n        const indexBuffer = gl.createBuffer();\n\n        if (!indexBuffer) {\n            return -1;\n        }\n\n        // Write vertex information to buffer object\n        if (!this.initArrayBuffer(gl, vertices, gl.FLOAT, 3, 'a_Position')) {\n            return -1;// Coordinates Information\n        }\n\n        if (!this.initArrayBuffer(gl, colors, gl.FLOAT, 3, 'a_Color')) {\n            return -1;// Color Information\n        }\n\n        if (!this.initArrayBuffer(gl, faces, gl.UNSIGNED_BYTE, 1, a_Face)) {\n            return -1;// Surface Information\n        }\n\n        // Unbind the buffer object\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n        // Write the indices to the buffer object\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\n        return indices.length;\n\n    }\n\n    checkFace = (gl : WebGLRenderingContext, n : number, x : number, y : number, currentAngle, u_PickedFace : WebGLUniformLocation, viewProjMatrix: Matrix4, u_MvpMatrix : WebGLUniformLocation) => {\n\n        const pixels = new Uint8Array(4); // Array for storing the pixel value\n\n        gl.uniform1i(u_PickedFace, 0);  // Draw by writing surface number into alpha value\n\n        this.draw(gl, n, currentAngle, viewProjMatrix, u_MvpMatrix);\n\n        // Read the pixel value of the clicked position. pixels[3] is the surface number\n        gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n        console.log(pixels)\n\n        return pixels[3];\n\n    }\n\n    g_MvpMatrix : Matrix4 = new Matrix4(undefined); // Model view projection matrix\n\n    draw = (gl : WebGLRenderingContext, n : number, currentAngle : number, viewProjMatrix : Matrix4, u_MvpMatrix : WebGLUniformLocation) => {\n\n        // Calculate The model view projection matrix and pass it to u_MvpMatrix\n        this.g_MvpMatrix.set(viewProjMatrix);\n\n        this.g_MvpMatrix.rotate(currentAngle, 1.0, 0.0, 0.0); // Rotate appropriately\n\n        this.g_MvpMatrix.rotate(currentAngle, 0.0, 1.0, 0.0);\n\n        this.g_MvpMatrix.rotate(currentAngle, 0.0, 0.0, 1.0);\n\n        gl.uniformMatrix4fv(u_MvpMatrix, false, this.g_MvpMatrix.elements);\n\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);     // Clear buffers\n\n        gl.drawElements(gl.TRIANGLES, n, gl.UNSIGNED_BYTE, 0);   // Draw\n\n    }\n\n    draw2D = (ctx : CanvasRenderingContext2D, currentAngle : number) => {\n\n        ctx.clearRect(0, 0, 400, 400); // Clear <hud>\n\n        // Draw triangle with white lines\n        ctx.beginPath();                      // Start drawing\n\n        ctx.moveTo(120, 10);\n\n        ctx.lineTo(200, 150);\n\n        ctx.lineTo(40, 150);\n\n        ctx.closePath();\n\n        ctx.strokeStyle = 'rgba(255, 0, 255, 1)'; // Set white to color of lines\n\n        ctx.stroke();                           // Draw Triangle with white lines\n\n        // Draw white letters\n        ctx.font = '20px \"Times New Roman\"';\n\n        ctx.fillStyle = 'rgba(255, 0, 255, 1)'; // Set white to the color of letters\n\n        ctx.fillText('HUD: Head Up Display', 40, 180);\n\n        ctx.fillText('Triangle is drawn by Canvas 2D API.', 40, 200);\n\n        ctx.fillText('Cube is drawn by WebGL API.', 40, 220);\n\n        ctx.fillText('Current Angle: ' + Math.floor(currentAngle), 40, 240);\n\n    }\n\n    last = Date.now();  // Last time that this function was called\n\n    animate = (angle) => {\n\n        const now = Date.now(); // Calculate the elapsed time\n\n        const elapsed = now - this.last;\n\n        this.last = now;\n\n        // Update the current rotation angle (adjusted by the elapsed time)\n        const newAngle = angle + (this.ANGLE_STEP * elapsed) / 1000.0;\n\n        return newAngle % 360;\n\n    }\n\n    initArrayBuffer = (gl, data, type, num, attribute) => {\n\n        // Create a buffer object\n        const buffer = gl.createBuffer();\n\n        if (!buffer) {\n            console.log('Failed to create the buffer object');\n            return false;\n        }\n\n        // Write date into the buffer object\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        // Assign the buffer object to the attribute variable\n        const a_attribute = gl.getAttribLocation(program, attribute);\n\n        if (a_attribute < 0) {\n            console.log('Failed to get the storage location of ' + attribute);\n            return false;\n        }\n\n        gl.vertexAttribPointer(a_attribute, num, type, false, 0, 0);\n\n        // Enable the assignment to a_attribute variable\n        gl.enableVertexAttribArray(a_attribute);\n\n        // Unbind the buffer object\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n        return true;\n    }\n\n\n    render() {\n\n        return (\n            <>\n                \n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}\n                        style={{position: \"absolute\", zIndex: 0}}/>\n                <canvas id=\"hud\" width={window.innerWidth} height={window.innerHeight}\n                        style={{position: \"absolute\", zIndex: 1}}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\n\nexport default class ClickedPoints extends Component<any, {\n    x: number,\n    y: number\n}> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {\n            x: 0,\n            y: 0\n        };\n    }\n\n    g_points: Array<number> = []; // The array for the position of a mouse press\n\n    // ClickedPints.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE = `\n        attribute vec4 a_Position;\n        void main() {\n            gl_Position = a_Position;\n            gl_PointSize = 10.0;\n        }`;\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE = `\n        void main() {\n          gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n        }`;\n\n\n    // @link https://sites.google.com/site/webglbook/home/chapter-2\n    // @link http://rodger.global-linguist.com/webgl/ch02/ClickedPoints.html\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program in clickedPoints.tsx'\n        }\n\n        // // Get the storage location of a_Position\n        const a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n            console.log('Failed to get the storage location of a_Position');\n            return;\n        }\n\n        // Register function (event handler) to be called on a mouse press\n        gl.canvas.onmousedown = (ev) => {\n            this.click(ev, gl, gl.canvas, a_Position);\n        };\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n    }\n\n    click(ev, gl, canvas, a_Position) {\n\n        let x = ev.clientX; // x coordinate of a mouse pointer\n\n        let y = ev.clientY; // y coordinate of a mouse pointer\n\n        const rect = ev.target.getBoundingClientRect();\n\n        x = ((x - rect.left) - canvas.width / 2) / (canvas.width / 2);\n\n        y = (canvas.height / 2 - (y - rect.top)) / (canvas.height / 2);\n\n        // Store the coordinates to g_points array\n        this.g_points.push(x);\n\n        this.g_points.push(y);\n\n        this.setState({x, y});\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        const len = this.g_points.length;\n\n        for (let i = 0; i < len; i += 2) {\n\n            // Pass the position of a point to a_Position variable\n            gl.vertexAttrib3f(a_Position, this.g_points[i], this.g_points[i + 1], 0.0);\n\n            // Draw\n            gl.drawArrays(gl.POINTS, 0, 1);\n\n        }\n\n    }\n\n    render() {\n\n        return (\n            <>\n                <h1>{this.state.x}, {this.state.y}</h1>\n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {iCustomRoute} from \"../Bootstrap\";\n\n\nexport default class ExampleList extends Component<{\n    Routes: iCustomRoute[]\n}, { }> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n    render() {\n\n        return (\n            <div style={{textAlign: \"center\"}}>\n                <h1><a href={\"https://github.com/RichardTMiles/WebGL-React-Starter-Template\"}>https://github.com/RichardTMiles/WebGL-React-Starter-Template</a></h1>\n                {this.props.Routes.map((value, key) => value?.redirect === true ? '' :\n                    <div key={key}><Link to={value.path}>{value?.name}</Link><br/></div>\n                )}\n            </div>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\n\nexport default class ColoredPoints extends Component<any, {\n    x: number,\n    y: number\n}> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {\n            x: 0,\n            y: 0\n        };\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE = `\n        attribute vec4 a_Position;\n        void main() {\n          gl_Position = a_Position;\n          gl_PointSize = 10.0;\n        }`;\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE = `\n        precision mediump float;\n        uniform vec4 u_FragColor;// uniform変数\n        void main() {\n            gl_FragColor = u_FragColor;\n        }`;\n\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        if (!gl) {\n            console.log('Failed to get the rendering context for WebGL');\n            return;\n        }\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program in colorPoints.tsx'\n        }\n\n        // // Get the storage location of a_Position\n        const a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n            console.log('Failed to get the storage location of a_Position');\n            return;\n        }\n\n        // Get the storage location of u_FragColor\n        const u_FragColor = gl.getUniformLocation(program, 'u_FragColor');\n\n        if (!u_FragColor) {\n            console.log('Failed to get the storage location of u_FragColor');\n            return;\n        }\n\n        // Register function (event handler) to be called on a mouse press\n        gl.canvas.onmousedown = (ev) => {\n            this.click(ev, gl, gl.canvas, a_Position, u_FragColor)\n        };\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n\n\n    g_points: number[][] = [];  // The array for the position of a mouse press\n\n    g_colors: number[][] = [];  // The array to store the color of a point\n\n    click(ev, gl, canvas, a_Position, u_FragColor) {\n\n        let x = ev.clientX; // x coordinate of a mouse pointer\n\n        let y = ev.clientY; // y coordinate of a mouse pointer\n\n        const rect = ev.target.getBoundingClientRect();\n\n        x = ((x - rect.left) - canvas.width / 2) / (canvas.width / 2);\n        y = (canvas.height / 2 - (y - rect.top)) / (canvas.height / 2);\n\n        // Store the coordinates to g_points array\n        this.g_points.push([x, y]);\n\n        this.setState({x, y});\n\n        // Store the coordinates to g_points array\n        if (x >= 0.0 && y >= 0.0) {      // First quadrant\n            this.g_colors.push([1.0, 0.0, 0.0, 1.0]);  // Red\n        } else if (x < 0.0 && y < 0.0) { // Third quadrant\n            this.g_colors.push([0.0, 1.0, 0.0, 1.0]);  // Green\n        } else {                         // Others\n            this.g_colors.push([1.0, 1.0, 1.0, 1.0]);  // White\n        }\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        const len = this.g_points.length;\n        for (let i = 0; i < len; i++) {\n            const xy = this.g_points[i];\n            const rgba = this.g_colors[i];\n\n            // Pass the position of a point to a_Position variable\n            gl.vertexAttrib3f(a_Position, xy[0], xy[1], 0.0);\n            // Pass the color of a point to u_FragColor variable\n            gl.uniform4f(u_FragColor, rgba[0], rgba[1], rgba[2], rgba[3]);\n            // Draw\n            gl.drawArrays(gl.POINTS, 0, 1);\n        }\n    }\n\n\n    render() {\n\n        // @link https://sites.google.com/site/webglbook/home/chapter-3\n        return (\n            <>\n                <h1>{this.state.x}, {this.state.y}</h1>\n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from 'react';\n\n\nclass Canvas extends Component<{\n    id?: string\n}, {}> {\n    constructor(props) {\n        super(props);\n    }\n\n    canvas = React.createElement(\"canvas\",\n{\n            id: this.props.id || \"WebbGl\",\n            width: window.innerWidth,\n            height: window.innerHeight,\n            style: {\n                color: \"red\"\n            }\n        },\n        \"Please use a browser that supports \\\"canvas\\\"\");\n\n    render() {\n        return this.canvas;\n    }\n}\n\nexport default Canvas;\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\nimport Canvas from \"../Canvas\";\n\nexport default class MultiPoint extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    canvasId = \"WebGl\";\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE =\n        'attribute vec4 a_Position;\\n' +\n        'void main() {\\n' +\n        '  gl_Position = a_Position;\\n' +\n        '  gl_PointSize = 10.0;\\n' +\n        '}\\n';\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE =\n        'void main() {\\n' +\n        '  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n        '}\\n';\n\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext(this.canvasId, [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n\n        // Write the positions of vertices to a vertex shader\n        const n = this.initVertexBuffers(gl);\n\n        if (n < 0) {\n            console.log('Failed to set the positions of the vertices');\n            return;\n        }\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0, 0, 0, 1);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Draw three points\n        gl.drawArrays(gl.POINTS, 0, n);\n    }\n\n\n    g_points: number[][] = [];  // The array for the position of a mouse press\n\n    g_colors: number[][] = [];  // The array to store the color of a point\n\n    initVertexBuffers(gl) {\n\n        const vertices = new Float32Array([\n            0.0, 0.5, -0.5, -0.5, 0.5, -0.5\n        ]);\n\n        const n = 3; // The number of vertices\n\n        // Create a buffer object\n        const vertexBuffer = gl.createBuffer();\n\n        if (!vertexBuffer) {\n            console.log('Failed to create the buffer object');\n            return -1;\n        }\n\n        // Bind the buffer object to target\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        const a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n            console.log('Failed to get the storage location of a_Position');\n            return -1;\n        }\n\n        // Assign the buffer object to a_Position variable\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        // Enable the assignment to a_Position variable\n        gl.enableVertexAttribArray(a_Position);\n\n        return n;\n    }\n\n\n\n    render() {\n        return <Canvas id={this.canvasId}/>;\n    }\n\n}\n\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class HelloTriangle extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE =\n        'attribute vec4 a_Position;\\n' +\n        'void main() {\\n' +\n        '  gl_Position = a_Position;\\n' +\n        '}\\n';\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE =\n        'void main() {\\n' +\n        '  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n        '}\\n';\n\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        // Write the positions of vertices to a vertex shader\n        const n = this.initVertexBuffers(gl);\n\n        if (n < 0) {\n            console.log('Failed to set the positions of the vertices');\n            return;\n        }\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0, 0, 0, 1);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Draw the rectangle\n        gl.drawArrays(gl.TRIANGLES, 0, n);\n    }\n\n    initVertexBuffers(gl) {\n        const vertices = new Float32Array([\n            0, 0.5, -0.5, -0.5, 0.5, -0.5\n        ]);\n\n        const n = 3; // The number of vertices\n\n        // Create a buffer object\n        const vertexBuffer = gl.createBuffer();\n        if (!vertexBuffer) {\n            console.log('Failed to create the buffer object');\n            return -1;\n        }\n\n        // Bind the buffer object to target\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        const a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n\n            console.log('Failed to get the storage location of a_Position');\n\n            return -1;\n\n        }\n\n        // Assign the buffer object to a_Position variable\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        // Enable the assignment to a_Position variable\n        gl.enableVertexAttribArray(a_Position);\n\n        return n;\n    }\n\n\n    render() {\n\n        return (\n            <>\n                \n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class HelloTriangleLines extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE =\n        'attribute vec4 a_Position;\\n' +\n        'void main() {\\n' +\n        '  gl_Position = a_Position;\\n' +\n        '}\\n';\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE =\n        'void main() {\\n' +\n        '  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n        '}\\n';\n\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        // Write the positions of vertices to a vertex shader\n        const n = this.initVertexBuffers(gl);\n\n        if (n < 0) {\n            console.log('Failed to set the positions of the vertices');\n            return;\n        }\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0, 0, 0, 1);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Draw the rectangle\n        gl.drawArrays(gl.LINES, 0, n);\n    }\n\n    initVertexBuffers(gl) {\n\n        const vertices = new Float32Array([\n            0, 0.5, -0.5, -0.5, 0.5, -0.5\n        ]);\n\n        const n = 3; // The number of vertices\n\n        // Create a buffer object\n        const vertexBuffer = gl.createBuffer();\n\n        if (!vertexBuffer) {\n\n            console.log('Failed to create the buffer object');\n\n            return -1;\n\n        }\n\n        // Bind the buffer object to target\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        const a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n\n            console.log('Failed to get the storage location of a_Position');\n\n            return -1;\n\n        }\n\n        // Assign the buffer object to a_Position variable\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        // Enable the assignment to a_Position variable\n        gl.enableVertexAttribArray(a_Position);\n\n        return n;\n    }\n\n\n    render() {\n\n        return (\n            <>\n                \n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class HelloTriangleStrip extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE =\n        'attribute vec4 a_Position;\\n' +\n        'void main() {\\n' +\n        '  gl_Position = a_Position;\\n' +\n        '}\\n';\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE =\n        'void main() {\\n' +\n        '  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n        '}\\n';\n\n    componentDidMount() {\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        // Write the positions of vertices to a vertex shader\n        const n = this.initVertexBuffers(gl);\n\n        if (n < 0) {\n            console.log('Failed to set the positions of the vertices');\n            return;\n        }\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0, 0, 0, 1);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Draw the rectangle\n        gl.drawArrays(gl.LINE_STRIP, 0, n);\n    }\n\n    initVertexBuffers(gl) {\n\n        const vertices = new Float32Array([\n            0, 0.5, -0.5, -0.5, 0.5, -0.5\n        ]);\n\n        const n = 3; // The number of vertices\n\n        // Create a buffer object\n        const vertexBuffer = gl.createBuffer();\n\n        if (!vertexBuffer) {\n            console.log('Failed to create the buffer object');\n            return -1;\n        }\n\n        // Bind the buffer object to target\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        const a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n            console.log('Failed to get the storage location of a_Position');\n            return -1;\n        }\n        // Assign the buffer object to a_Position variable\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        // Enable the assignment to a_Position variable\n        gl.enableVertexAttribArray(a_Position);\n\n        return n;\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </div>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class HelloTriangleLoop extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE =\n        'attribute vec4 a_Position;\\n' +\n        'void main() {\\n' +\n        '  gl_Position = a_Position;\\n' +\n        '}\\n';\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE =\n        'void main() {\\n' +\n        '  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n        '}\\n';\n\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        if (!gl) {\n            console.log('Failed to get the rendering context for WebGL');\n            return;\n        }\n\n        // Write the positions of vertices to a vertex shader\n        const n = this.initVertexBuffers(gl);\n\n        if (n < 0) {\n            console.log('Failed to set the positions of the vertices');\n            return;\n        }\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0, 0, 0, 1);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Draw the rectangle\n        gl.drawArrays(gl.LINE_LOOP, 0, n);\n\n    }\n\n    initVertexBuffers(gl) {\n        const vertices = new Float32Array([\n            0, 0.5, -0.5, -0.5, 0.5, -0.5\n        ]);\n        const n = 3; // The number of vertices\n\n        // Create a buffer object\n        const vertexBuffer = gl.createBuffer();\n        if (!vertexBuffer) {\n            console.log('Failed to create the buffer object');\n            return -1;\n        }\n\n        // Bind the buffer object to target\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const a_Position = gl.getAttribLocation(gl.program, 'a_Position');\n        if (a_Position < 0) {\n            console.log('Failed to get the storage location of a_Position');\n            return -1;\n        }\n        // Assign the buffer object to a_Position variable\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        // Enable the assignment to a_Position variable\n        gl.enableVertexAttribArray(a_Position);\n\n        return n;\n    }\n\n\n    render() {\n\n        return (\n            <>\n                \n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class HelloQuad extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE = `\n        attribute vec4 a_Position;\n        void main() {\n          gl_Position = a_Position;\n        }`;\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE = `\n        void main() {\n          gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n        }`;\n\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        var gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        // Write the positions of vertices to a vertex shader\n        var n = this.initVertexBuffers(gl);\n\n        if (n < 0) {\n            console.log('Failed to set the positions of the vertices');\n            return;\n        }\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0, 0, 0, 1);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Draw the rectangle\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, n);\n\n    }\n\n    initVertexBuffers(gl) {\n        var vertices = new Float32Array([\n            -0.5, 0.5,   -0.5, -0.5,   0.5, 0.5,　0.5, -0.5\n        ]);\n\n        var n = 4; // The number of vertices\n\n        // Create a buffer object\n        var vertexBuffer = gl.createBuffer();\n\n        if (!vertexBuffer) {\n            console.log('Failed to create the buffer object');\n            return -1;\n        }\n\n        // Bind the buffer object to target\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        var a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n            console.log('Failed to get the storage location of a_Position');\n            return -1;\n        }\n        // Assign the buffer object to a_Position variable\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        // Enable the assignment to a_Position variable\n        gl.enableVertexAttribArray(a_Position);\n\n        return n;\n    }\n\n\n    render() {\n\n        return (\n            <>\n                \n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class HelloQuadFan extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE = `\n        attribute vec4 a_Position;\n        void main() {\n          gl_Position = a_Position;\n        }`;\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE = `\n        void main() {\n          gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n        }`;\n\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        // Write the positions of vertices to a vertex shader\n        const n = this.initVertexBuffers(gl);\n\n        if (n < 0) {\n            console.log('Failed to set the positions of the vertices');\n            return;\n        }\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0, 0, 0, 1);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Draw the rectangle\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, n);\n\n    }\n\n    initVertexBuffers(gl) {\n        const vertices = new Float32Array([\n            -0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 0.5, -0.5\n        ]);\n        const n = 4; // The number of vertices\n\n        // Create a buffer object\n        const vertexBuffer = gl.createBuffer();\n        if (!vertexBuffer) {\n            console.log('Failed to create the buffer object');\n            return -1;\n        }\n\n        // Bind the buffer object to target\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        const a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n            console.log('Failed to get the storage location of a_Position');\n            return -1;\n        }\n        // Assign the buffer object to a_Position variable\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        // Enable the assignment to a_Position variable\n        gl.enableVertexAttribArray(a_Position);\n\n        return n;\n    }\n\n\n    render() {\n\n        return (\n            <>\n                \n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class RotatedTriangle extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // RotatedTriangle.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE =\n        // x' = x cosβ - y sinβ\n        // y' = x sinβ + y cosβ　Equation 3.3\n        // z' = z\n        'attribute vec4 a_Position;\\n' +\n        'uniform float u_CosB, u_SinB;\\n' +\n        'void main() {\\n' +\n        '  gl_Position.x = a_Position.x * u_CosB - a_Position.y * u_SinB;\\n' +\n        '  gl_Position.y = a_Position.x * u_SinB + a_Position.y * u_CosB;\\n' +\n        '  gl_Position.z = a_Position.z;\\n' +\n        '  gl_Position.w = 1.0;\\n' +\n        '}\\n';\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE =\n        'void main() {\\n' +\n        '  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n        '}\\n';\n\n    // The rotation angle\n    ANGLE = 90.0;\n\n    // @link http://rodger.global-linguist.com/webgl/ch03/RotatedTriangle.html\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        if (!gl) {\n            console.log('Failed to get the rendering context for WebGL');\n            return;\n        }\n\n        // Write the positions of vertices to a vertex shader\n        const n = this.initVertexBuffers(gl);\n\n        if (n < 0) {\n            console.log('Failed to set the positions of the vertices');\n            return;\n        }\n\n        // // Pass the data required to rotate the shape to the vertex shader\n        const radian = Math.PI * this.ANGLE / 180.0; // Convert to radians\n\n        const cosB = Math.cos(radian);\n\n        const sinB = Math.sin(radian);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        const u_CosB = gl.getUniformLocation(program, 'u_CosB');\n\n        const u_SinB = gl.getUniformLocation(program, 'u_SinB');\n\n        if (!u_CosB || !u_SinB) {\n\n            console.log('Failed to get the storage location of u_CosB or u_SinB');\n\n            return;\n\n        }\n\n        gl.uniform1f(u_CosB, cosB);\n\n        gl.uniform1f(u_SinB, sinB);\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0, 0, 0, 1);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Draw the rectangle\n        gl.drawArrays(gl.TRIANGLES, 0, n);\n    }\n\n    initVertexBuffers(gl) {\n        const vertices = new Float32Array([\n            0, 0.5, -0.5, -0.5, 0.5, -0.5\n        ]);\n\n        const n = 3; // The number of vertices\n\n        // Create a buffer object\n        const vertexBuffer = gl.createBuffer();\n\n        if (!vertexBuffer) {\n            console.log('Failed to create the buffer object');\n            return -1;\n        }\n\n        // Bind the buffer object to target\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        const a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n            console.log('Failed to get the storage location of a_Position');\n            return -1;\n        }\n\n        // Assign the buffer object to a_Position variable\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        // Enable the assignment to a_Position variable\n        gl.enableVertexAttribArray(a_Position);\n\n        return n;\n    }\n\n\n    render() {\n\n        return (\n            <>\n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class RotatedTriangleMatrix extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // RotatedTriangle_Matrix.js (c) matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE =\n        'attribute vec4 a_Position;\\n' +\n        'uniform mat4 u_xformMatrix;\\n' +\n        'void main() {\\n' +\n        '  gl_Position = u_xformMatrix * a_Position;\\n' +\n        '}\\n';\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE =\n        'void main() {\\n' +\n        '  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n        '}\\n';\n\n    // The rotation angle\n    ANGLE = 90.0;\n\n    // @link http://rodger.global-linguist.com/webgl/ch03/RotatedTriangle.html\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        var gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        if (!gl) {\n            console.log('Failed to get the rendering context for WebGL');\n            return;\n        }\n\n        // Write the positions of vertices to a vertex shader\n        var n = this.initVertexBuffers(gl);\n\n        if (n === false || n < 0) {\n            console.log('Failed to set the positions of the vertices');\n            return;\n        }\n\n        // Create a rotation matrix\n        var radian = Math.PI * this.ANGLE / 180.0; // Convert to radians\n\n        var cosB = Math.cos(radian), sinB = Math.sin(radian);\n\n        // Note: WebGL is column major order\n        var xformMatrix = new Float32Array([\n            cosB, sinB, 0.0, 0.0,\n            -sinB, cosB, 0.0, 0.0,\n            0.0,  0.0, 1.0, 0.0,\n            0.0,  0.0, 0.0, 1.0\n        ]);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        // Pass the rotation matrix to the vertex shader\n        var u_xformMatrix = gl.getUniformLocation(program, 'u_xformMatrix');\n\n        if (!u_xformMatrix) {\n            console.log('Failed to get the storage location of u_xformMatrix');\n            return;\n        }\n\n        gl.uniformMatrix4fv(u_xformMatrix, false, xformMatrix);\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0, 0, 0, 1);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Draw the rectangle\n        gl.drawArrays(gl.TRIANGLES, 0, n);\n\n    }\n\n    initVertexBuffers(gl) {\n        var vertices = new Float32Array([\n            0, 0.5,   -0.5, -0.5,   0.5, -0.5\n        ]);\n\n        var n = 3; // The number of vertices\n\n        // Create a buffer object\n        var vertexBuffer = gl.createBuffer();\n\n        if (!vertexBuffer) {\n            console.log('Failed to create the buffer object');\n            return false;\n        }\n\n        // Bind the buffer object to target\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        var a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n            console.log('Failed to get the storage location of a_Position');\n            return -1;\n        }\n\n        // Assign the buffer object to a_Position variable\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        // Enable the assignment to a_Position variable\n        gl.enableVertexAttribArray(a_Position);\n\n        return n;\n    }\n\n\n    render() {\n\n        return (\n            <>\n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class ScaledTriangleMatrix extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // RotatedTriangle_Matrix.js (c) matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE =\n        'attribute vec4 a_Position;\\n' +\n        'uniform mat4 u_xformMatrix;\\n' +\n        'void main() {\\n' +\n        '  gl_Position = u_xformMatrix * a_Position;\\n' +\n        '}\\n';\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE =\n        'void main() {\\n' +\n        '  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n        '}\\n';\n\n    // The scaling factor\n    Sx = 1.0;\n    Sy = 1.5;\n    Sz = 1.0;\n\n    // @link http://rodger.global-linguist.com/webgl/ch03/RotatedTriangle.html\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        // Write the positions of vertices to a vertex shader\n        const n = this.initVertexBuffers(gl);\n\n        if (false === n || n < 0) {\n            console.log('Failed to set the positions of the vertices');\n            return;\n        }\n\n        // Note: WebGL is column major order\n        const xformMatrix = new Float32Array([\n            this.Sx, 0.0, 0.0, 0.0,\n            0.0, this.Sy, 0.0, 0.0,\n            0.0, 0.0, this.Sz, 0.0,\n            0.0, 0.0, 0.0, 1.0\n        ]);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        // Pass the rotation matrix to the vertex shader\n        const u_xformMatrix = gl.getUniformLocation(program, 'u_xformMatrix');\n\n        if (!u_xformMatrix) {\n\n            console.log('Failed to get the storage location of u_xformMatrix');\n\n            return;\n\n        }\n\n        gl.uniformMatrix4fv(u_xformMatrix, false, xformMatrix);\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0, 0, 0, 1);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Draw the rectangle\n        gl.drawArrays(gl.TRIANGLES, 0, n);\n\n    }\n\n    initVertexBuffers(gl) {\n\n        const vertices = new Float32Array([\n            0, 0.5, -0.5, -0.5, 0.5, -0.5\n        ]);\n\n        const n = 3; // The number of vertices\n\n        // Create a buffer object\n        const vertexBuffer = gl.createBuffer();\n\n        if (!vertexBuffer) {\n            console.log('Failed to create the buffer object');\n            return false;\n        }\n\n        // Bind the buffer object to target\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        const a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n            console.log('Failed to get the storage location of a_Position');\n            return -1;\n        }\n\n        // Assign the buffer object to a_Position variable\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        // Enable the assignment to a_Position variable\n        gl.enableVertexAttribArray(a_Position);\n\n        return n;\n    }\n\n\n    render() {\n\n        return (\n            <>\n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\n\nimport {getWebGLContext} from \"assets/js/cuon-utils\"\nimport {Matrix4} from \"assets/js/cuon-matrix\"\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class RotatedTranslatedTriangle extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE =\n        'attribute vec4 a_Position;\\n' +\n        'uniform mat4 u_ModelMatrix;\\n' +\n        'void main() {\\n' +\n        '  gl_Position = u_ModelMatrix * a_Position;\\n' +\n        '}\\n';\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE =\n        'void main() {\\n' +\n        '  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n        '}\\n';\n\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        // Write the positions of vertices to a vertex shader\n        const n = this.initVertexBuffers(gl);\n\n        if (n === false || n < 0) {\n            console.log('Failed to set the positions of the vertices');\n            return;\n        }\n\n        // Create Matrix4 object for model transformation\n        const modelMatrix = new Matrix4(undefined);\n\n        // Calculate a model matrix\n        const ANGLE = 60.0; // The rotation angle\n\n        const Tx = 0.5;     // Translation distance\n\n        modelMatrix.setRotate(ANGLE, 0, 0, 1);  // Set rotation matrix\n\n        modelMatrix.translate(Tx, 0, 0);        // Multiply modelMatrix by the calculated translation matrix\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        // Pass the model matrix to the vertex shader\n        const u_ModelMatrix = gl.getUniformLocation(program, 'u_ModelMatrix');\n\n        if (!u_ModelMatrix) {\n            console.log('Failed to get the storage location of u_xformMatrix');\n            return;\n        }\n\n        gl.uniformMatrix4fv(u_ModelMatrix, false, modelMatrix.elements);\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0, 0, 0, 1);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Draw the rectangle\n        gl.drawArrays(gl.TRIANGLES, 0, n);\n\n    }\n\n    initVertexBuffers(gl) {\n        const vertices = new Float32Array([\n            0, 0.3, -0.3, -0.3, 0.3, -0.3\n        ]);\n\n        const n = 3; // The number of vertices\n\n        // Create a buffer object\n        const vertexBuffer = gl.createBuffer();\n\n        if (!vertexBuffer) {\n            console.log('Failed to create the buffer object');\n            return false;\n        }\n\n        // Bind the buffer object to target\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        const a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n            console.log('Failed to get the storage location of a_Position');\n            return -1;\n        }\n\n        // Assign the buffer object to a_Position variable\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        // Enable the assignment to a_Position variable\n        gl.enableVertexAttribArray(a_Position);\n\n        return n;\n    }\n\n\n    render() {\n\n        return (\n            <>\n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\nimport {getWebGLContext} from \"../assets/js/cuon-utils\";\nimport { Matrix4 } from \"assets/js/cuon-matrix\";\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class RotatingTriangle extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE =\n        'attribute vec4 a_Position;\\n' +\n        'uniform mat4 u_ModelMatrix;\\n' +\n        'void main() {\\n' +\n        '  gl_Position = u_ModelMatrix * a_Position;\\n' +\n        '}\\n';\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE =\n        'void main() {\\n' +\n        '  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n        '}\\n';\n\n    // Rotation angle (degrees/second)\n    ANGLE_STEP = 45.0;\n\n    componentDidMount() {\n        // Get the rendering context for WebGL\n        var gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        // Write the positions of vertices to a vertex shader\n        var n = this.initVertexBuffers(gl);\n\n        if (n < 0) {\n            console.log('Failed to set the positions of the vertices');\n            return;\n        }\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        // Get storage location of u_ModelMatrix\n        var u_ModelMatrix = gl.getUniformLocation(program, 'u_ModelMatrix');\n\n        if (!u_ModelMatrix) {\n            console.log('Failed to get the storage location of u_ModelMatrix');\n            return;\n        }\n\n        // Current rotation angle\n        var currentAngle = 0.0;\n\n        // Model matrix\n        var modelMatrix = new Matrix4(undefined);\n\n        // Start drawing\n        const tick = () => {\n            currentAngle = this.animate(currentAngle);  // Update the rotation angle\n            this.draw(gl, n, currentAngle, modelMatrix, u_ModelMatrix);   // Draw the triangle\n            requestAnimationFrame(tick); // Request that the browser calls tick\n        };\n        tick();\n    }\n\n    initVertexBuffers(gl) {\n        var vertices = new Float32Array ([\n            0, 0.5,   -0.5, -0.5,   0.5, -0.5\n        ]);\n        var n = 3;   // The number of vertices\n\n        // Create a buffer object\n        var vertexBuffer = gl.createBuffer();\n        if (!vertexBuffer) {\n            console.log('Failed to create the buffer object');\n            return -1;\n        }\n\n        // Bind the buffer object to target\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        // Assign the buffer object to a_Position variable\n        var a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if(a_Position < 0) {\n            console.log('Failed to get the storage location of a_Position');\n            return -1;\n        }\n\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        // Enable the assignment to a_Position variable\n        gl.enableVertexAttribArray(a_Position);\n\n        return n;\n    }\n\n    draw(gl, n, currentAngle, modelMatrix, u_ModelMatrix) {\n        // Set the rotation matrix\n        modelMatrix.setRotate(currentAngle, 0, 0, 1); // Rotation angle, rotation axis (0, 0, 1)\n\n        // Pass the rotation matrix to the vertex shader\n        gl.uniformMatrix4fv(u_ModelMatrix, false, modelMatrix.elements);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Draw the rectangle\n        gl.drawArrays(gl.TRIANGLES, 0, n);\n    }\n\n    // Last time that this function was called\n    g_last = Date.now();\n\n    animate(angle) {\n        // Calculate the elapsed time\n        var now = Date.now();\n        var elapsed = now - this.g_last;\n        this.g_last = now;\n        // Update the current rotation angle (adjusted by the elapsed time)\n        var newAngle = angle + (this.ANGLE_STEP * elapsed) / 1000.0;\n        return newAngle %= 360;\n    }\n\n    render() {\n\n        return (\n            <>\n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\nimport SimplexNoise from \"simplex-noise\";\nimport THREELib from \"three-js\";\n\nconst EminenceFront = require(\"assets/audio/EminenceFront_TheWho.mp3\");\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class AudioThreeJS extends Component<{}, {\n    //initialise simplex noise instance\n    audio: HTMLAudioElement,\n    context?: AudioContext,\n    analyser?: AnalyserNode,\n    src?: MediaElementAudioSourceNode,\n    dataArray: Uint8Array,\n    bufferLength: number,\n}> {\n\n    constructor(props) {\n        super(props);\n\n        // we use this to make the card to appear after the page has been rendered\n        this.play = this.play.bind(this);\n\n    }\n\n    state = {\n        audio: new Audio(EminenceFront.default),\n        analyser: undefined,\n        context: undefined,\n        src: undefined,\n        dataArray: new Uint8Array(),\n        bufferLength: 0,\n    };\n\n    noise = new SimplexNoise();\n\n    componentDidMount() {\n\n        // And off we go!\n        // this will load the canvas and audio but not play, we HAVE to\n        // wait for a user interaction. This is a chrome rule.\n        this.play();\n\n        // the main visualiser function\n        window.addEventListener('click', () => {\n            this.play();    // this second invocation should play\n        });\n\n        document.body.addEventListener('touchend',\n            () => this.context.resume())\n\n    }\n\n    componentWillUnmount() {\n        this.state.audio.pause();\n    }\n\n    play = () => {\n\n        const element = document.querySelector('canvas');\n\n        if (typeof (element) != 'undefined' && element != null) {\n\n            if (undefined !== this.state.analyser) {\n\n                return;\n\n            }\n\n\n            const AudioContext = window.AudioContext // Default\n                || // @ts-ignore\n                window.webkitAudioContext // Safari and old versions of Chrome\n                || false;\n\n            const tryPlayAudio = () => this.state.audio.play()\n                .then(() => console.log('Trying to play?!'));\n\n            if (undefined === this.state.context) {\n\n                const audioCTX = new AudioContext();\n                const audioAnalyser = audioCTX.createAnalyser();\n                const audioSource = audioCTX.createMediaElementSource(this.state.audio);\n\n                audioSource.connect(audioAnalyser);\n                audioAnalyser.connect(audioCTX.destination);\n                audioAnalyser.fftSize = 512;\n\n                this.setState({\n                    context: audioCTX,\n                    analyser: audioAnalyser,\n                    // Read it into memory as an arrayBuffer\n                    // Turn it from mp3/aac/whatever into raw audio data\n                    src: audioSource,\n                    bufferLength: audioAnalyser.frequencyBinCount,\n                    dataArray: new Uint8Array(audioAnalyser.frequencyBinCount)\n                }, tryPlayAudio)\n\n            } else {\n\n                tryPlayAudio().then(() => console.log('tryPlayAudio done.'));\n\n            }\n\n            return;\n        }\n\n        const THREE = THREELib(); // return THREE JS\n\n        //here comes the webgl\n        const scene = new THREE.Scene();\n\n        const group = new THREE.Group();\n\n        const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n        camera.position.set(0, 0, 100);\n\n        camera.lookAt(scene.position);\n\n        scene.add(camera);\n\n        const renderer = new THREE.WebGLRenderer({alpha: true, antialias: true});\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n        const planeGeometry = new THREE.PlaneGeometry(800, 800, 20, 20);\n\n        const planeMaterial = new THREE.MeshLambertMaterial({\n            color: 0x6904ce,\n            side: THREE.DoubleSide,\n            wireframe: true\n        });\n\n        const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n\n        plane.rotation.x = -0.5 * Math.PI;\n\n        plane.position.set(0, 30, 0);\n\n        group.add(plane);\n\n        const plane2 = new THREE.Mesh(planeGeometry, planeMaterial);\n\n        plane2.rotation.x = -0.5 * Math.PI;\n\n        plane2.position.set(0, -30, 0);\n\n        group.add(plane2);\n\n        const icosahedronGeometry = new THREE.IcosahedronGeometry(10, 4);\n\n        const lambertMaterial = new THREE.MeshLambertMaterial({\n            color: 0xff00ee,\n            wireframe: true\n        });\n\n        const ball = new THREE.Mesh(icosahedronGeometry, lambertMaterial);\n\n        ball.position.set(0, 0, 0);\n\n        group.add(ball);\n\n        const ambientLight = new THREE.AmbientLight(0xaaaaaa);\n\n        scene.add(ambientLight);\n\n        const spotLight = new THREE.SpotLight(0xffffff);\n\n        spotLight.intensity = 0.9;\n\n        spotLight.position.set(-10, 40, 20);\n\n        spotLight.lookAt(ball);\n\n        spotLight.castShadow = true;\n\n        scene.add(spotLight);\n\n        // var orbitControls = new THREE.OrbitControls(camera, renderer.domElement);\n        // orbitControls.autoRotate = true;\n\n        scene.add(group);\n\n        const canvasElement = document.getElementById('out');\n\n        if (null === canvasElement) {\n\n            alert('Could not element with id \"out\".');\n\n            return;\n\n        }\n\n        canvasElement.appendChild(renderer.domElement);\n\n        window.addEventListener('resize', () => {\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        }, false);\n\n        const renderCanvas = () => {\n\n            const analyzingAudio = undefined !== this.state.analyser;\n\n            if (analyzingAudio) {\n\n                // Send it through the analyser\n                // @ts-ignore - it is not possible for analyser to be undefined here\n                const audioAnalyzer : AnalyserNode = this.state.analyser;\n\n                audioAnalyzer.getByteFrequencyData(this.state.dataArray);\n\n            }\n\n            const analyzingAudioSetDefaults = (cb) => analyzingAudio ? cb() : 0;\n\n            const lowerHalfArray = analyzingAudioSetDefaults(() => this.state.dataArray.slice(0, (this.state.dataArray.length / 2) - 1));\n\n            const upperHalfArray = analyzingAudioSetDefaults(() => this.state.dataArray.slice((this.state.dataArray.length / 2) - 1, this.state.dataArray.length - 1));\n\n            //const overallAvg = this.avg(this.dataArray);\n\n            const lowerMax = analyzingAudioSetDefaults(() => this.max(lowerHalfArray));\n\n            // const lowerAvg = this.avg(lowerHalfArray);\n\n            // const upperMax = this.max(upperHalfArray);\n\n            const upperAvg = analyzingAudioSetDefaults(() => this.avg(upperHalfArray));\n\n            const lowerMaxFr = analyzingAudioSetDefaults(() => lowerMax / lowerHalfArray.length);\n\n            // const lowerAvgFr = lowerAvg / lowerHalfArray.length;\n\n            // const upperMaxFr = upperMax / upperHalfArray.length;\n\n            const upperAvgFr = analyzingAudioSetDefaults(()=> upperAvg / upperHalfArray.length);\n\n            this.makeRoughGround(plane, this.modulate(upperAvgFr, 0, 1, 0.5, 4));\n\n            this.makeRoughGround(plane2, this.modulate(lowerMaxFr, 0, 1, 0.5, 4));\n\n            this.makeRoughBall(ball,\n                this.modulate(Math.pow(lowerMaxFr, 0.8), 0, 1, 0, 8),\n                this.modulate(upperAvgFr, 0, 1, 0, 4));\n\n            group.rotation.y += 0.005;\n\n            renderer.render(scene, camera);\n\n            requestAnimationFrame(renderCanvas);\n\n        }\n\n        this\n            .state\n            .audio\n            .load() // this is more of a Queuing action for most browsers\n\n        renderCanvas();\n\n    };\n\n\n    makeRoughBall = (mesh, bassFr, treFr) => {\n\n        mesh.geometry.vertices.forEach((vertex) => {\n            const offset = mesh.geometry.parameters.radius;\n            const amp = 7;\n            const time = window.performance.now();\n            vertex.normalize();\n            const rf = 0.00001;\n            const distance = (offset + bassFr) + this.noise.noise3D(vertex.x + time * rf * 7, vertex.y + time * rf * 8, vertex.z + time * rf * 9) * amp * treFr;\n            vertex.multiplyScalar(distance);\n        });\n\n        mesh.geometry.verticesNeedUpdate = true;\n\n        mesh.geometry.normalsNeedUpdate = true;\n\n        mesh.geometry.computeVertexNormals();\n\n        mesh.geometry.computeFaceNormals();\n\n    }\n\n    makeRoughGround = (mesh, distortionFr) => {\n\n        mesh.geometry.vertices.forEach((vertex) => {\n            const amp = 2;\n            const time = Date.now();\n            // distance\n            // noinspection PointlessArithmeticExpressionJS\n            vertex.z = (this.noise.noise2D(vertex.x + time * 0.0003, vertex.y + time * 0.0001) + 0) * distortionFr * amp;\n        });\n\n        mesh.geometry.verticesNeedUpdate = true;\n\n        mesh.geometry.normalsNeedUpdate = true;\n\n        mesh.geometry.computeVertexNormals();\n\n        mesh.geometry.computeFaceNormals();\n\n    }\n\n//some helper funcdtions here\n    fractionate = (val, minVal, maxVal) => {\n        return (val - minVal) / (maxVal - minVal);\n    }\n\n    modulate = (val, minVal, maxVal, outMin, outMax) => {\n\n        const fr = this.fractionate(val, minVal, maxVal);\n\n        const delta = outMax - outMin;\n\n        return outMin + (fr * delta);\n\n    }\n\n    avg(arr) {\n\n        const total = arr.reduce(function (sum, b) {\n            return sum + b;\n        });\n\n        return (total / arr.length);\n\n    }\n\n    max(arr) {\n        return arr.reduce(function (a, b) {\n            return Math.max(a, b);\n        })\n    }\n\n\n    render() {\n        return (\n            <div id=\"content\">\n                <audio preload=\"auto\" id=\"audio\" autoPlay src=\"\"/>\n                <div id=\"out\"/>\n            </div>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\nimport {getWebGLContext} from \"../assets/js/cuon-utils\";\nimport {Matrix4} from \"../assets/js/cuon-matrix\";\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class Hud extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE =\n        'attribute vec4 a_Position;\\n' +\n        'attribute vec4 a_Color;\\n' +\n        'uniform mat4 u_MvpMatrix;\\n' +\n        'uniform bool u_Clicked;\\n' + // Mouse is pressed\n        'varying vec4 v_Color;\\n' +\n        'void main() {\\n' +\n        '  gl_Position = u_MvpMatrix * a_Position;\\n' +\n        '  if (u_Clicked) {\\n' + //  Draw in red if mouse is pressed\n        '    v_Color = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n        '  } else {\\n' +\n        '    v_Color = a_Color;\\n' +\n        '  }\\n' +\n        '}\\n';\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE =\n        '#ifdef GL_ES\\n' +\n        'precision mediump float;\\n' +\n        '#endif\\n' +\n        'varying vec4 v_Color;\\n' +\n        'void main() {\\n' +\n        '  gl_FragColor = v_Color;\\n' +\n        '}\\n';\n\n    ANGLE_STEP = 20.0;\n\n    componentDidMount() {\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        // Retrieve <canvas> element\n        const hud: HTMLCanvasElement | null = document.getElementById('hud') as HTMLCanvasElement;\n\n        if (!hud) {\n            console.log('Failed to get HTML elements');\n            return false;\n        }\n\n        // Get the rendering context for 2DCG\n        const ctx = hud.getContext('2d');\n\n        if (!ctx) {\n            console.log('Failed to get rendering context');\n            return;\n        }\n\n        // Set the vertex information\n        const n = this.initVertexBuffers(gl);\n\n        if (n < 0) {\n            console.log('Failed to set the vertex information');\n            return;\n        }\n\n        // Set the clear color and enable the depth test\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\n        gl.enable(gl.DEPTH_TEST);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program in hud.tsx'\n        }\n\n        // Get the storage locations of uniform variables\n        const u_MvpMatrix = gl.getUniformLocation(program, 'u_MvpMatrix');\n\n        const u_Clicked = gl.getUniformLocation(program, 'u_Clicked');\n\n        if (!u_MvpMatrix || !u_Clicked) {\n            console.log('Failed to get the storage location of uniform variables');\n            return;\n        }\n\n        // Calculate the view projection matrix\n        const viewProjMatrix = new Matrix4(undefined);\n\n        viewProjMatrix.setPerspective(30.0, window.innerWidth / window.innerHeight, 1.0, 100.0);\n\n        viewProjMatrix.lookAt(0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0);\n\n        gl.uniform1i(u_Clicked, 0); // Pass false to u_Clicked\n\n        let currentAngle = 0.0; // Current rotation angle\n\n        // Register the event handler\n        hud.onmousedown = (ev) => {   // Mouse is pressed\n\n            const x = ev.clientX, y = ev.clientY;\n\n            const target = ev.target as HTMLElement;\n\n            const rect = target?.getBoundingClientRect();\n\n            if (rect.left <= x && x < rect.right && rect.top <= y && y < rect.bottom) {\n\n                // If pressed position is inside <canvas>, check if it is above object\n                const x_in_canvas = x - rect.left, y_in_canvas = rect.bottom - y;\n\n                const picked = this.check(gl, n, x_in_canvas, y_in_canvas, currentAngle, u_Clicked, viewProjMatrix, u_MvpMatrix);\n\n                if (picked) alert('The cube was selected! ');\n\n            }\n        }\n\n        const tick = () => {\n\n            // Start drawing\n            currentAngle = this.animate(currentAngle);\n\n            this.draw2D(ctx, currentAngle); // Draw 2D\n\n            this.draw(gl, n, currentAngle, viewProjMatrix, u_MvpMatrix);\n\n            requestAnimationFrame(tick);\n\n        };\n\n        tick();\n\n    }\n\n    initVertexBuffers = (gl) => {\n        // Create a cube\n        //    v6----- v5\n        //   /|      /|\n        //  v1------v0|\n        //  | |     | |\n        //  | |v7---|-|v4\n        //  |/      |/\n        //  v2------v3\n        const vertices = new Float32Array([   // Vertex coordinates\n            1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0,    // v0-v1-v2-v3 front\n            1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0,    // v0-v3-v4-v5 right\n            1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0,    // v0-v5-v6-v1 up\n            -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0,    // v1-v6-v7-v2 left\n            -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0,    // v7-v4-v3-v2 down\n            1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0     // v4-v7-v6-v5 back\n        ]);\n\n        const colors = new Float32Array([   // Colors\n            0.2, 0.58, 0.82, 0.2, 0.58, 0.82, 0.2, 0.58, 0.82, 0.2, 0.58, 0.82, // v0-v1-v2-v3 front\n            0.5, 0.41, 0.69, 0.5, 0.41, 0.69, 0.5, 0.41, 0.69, 0.5, 0.41, 0.69,  // v0-v3-v4-v5 right\n            0.0, 0.32, 0.61, 0.0, 0.32, 0.61, 0.0, 0.32, 0.61, 0.0, 0.32, 0.61,  // v0-v5-v6-v1 up\n            0.78, 0.69, 0.84, 0.78, 0.69, 0.84, 0.78, 0.69, 0.84, 0.78, 0.69, 0.84, // v1-v6-v7-v2 left\n            0.32, 0.18, 0.56, 0.32, 0.18, 0.56, 0.32, 0.18, 0.56, 0.32, 0.18, 0.56, // v7-v4-v3-v2 down\n            0.73, 0.82, 0.93, 0.73, 0.82, 0.93, 0.73, 0.82, 0.93, 0.73, 0.82, 0.93, // v4-v7-v6-v5 back\n        ]);\n\n        // Indices of the vertices\n        const indices = new Uint8Array([\n            0, 1, 2, 0, 2, 3,    // front\n            4, 5, 6, 4, 6, 7,    // right\n            8, 9, 10, 8, 10, 11,    // up\n            12, 13, 14, 12, 14, 15,    // left\n            16, 17, 18, 16, 18, 19,    // down\n            20, 21, 22, 20, 22, 23     // back\n        ]);\n\n        // Write the vertex property to buffers (coordinates and normals)\n        if (!this.initArrayBuffer(gl, vertices, 3, gl.FLOAT, 'a_Position')) {\n            return -1;\n        }\n\n        // Coordinates\n        if (!this.initArrayBuffer(gl, colors, 3, gl.FLOAT, 'a_Color')) {\n            return -1;\n        }      // Color Information\n\n        // Create a buffer object\n        const indexBuffer = gl.createBuffer();\n\n        if (!indexBuffer) {\n            return -1;\n        }\n\n        // Write the indices to the buffer object\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\n        return indices.length;\n\n    }\n\n\n    check = (gl, n, x, y, currentAngle, u_Clicked, viewProjMatrix, u_MvpMatrix) => {\n        let picked = false;\n\n        gl.uniform1i(u_Clicked, 1);  // Pass true to u_Clicked(Draw cube with red)\n\n        this.draw(gl, n, currentAngle, viewProjMatrix, u_MvpMatrix);\n\n        // Read pixel at the clicked position\n        const pixels = new Uint8Array(4); // Array for storing the pixel value\n\n        gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n        if (pixels[0] == 255) // If red = 255, clicked on cube\n            picked = true;\n\n\n        gl.uniform1i(u_Clicked, 0);  // Pass false to u_Clicked(Draw cube with specified color)\n\n        this.draw(gl, n, currentAngle, viewProjMatrix, u_MvpMatrix);\n\n        return picked;\n    }\n\n    g_MvpMatrix = new Matrix4(undefined); // Model view projection matrix\n\n    draw = (gl, n, currentAngle, viewProjMatrix, u_MvpMatrix) => {\n\n        // Calc The model view projection matrix and pass it to u_MvpMatrix\n        this.g_MvpMatrix.set(viewProjMatrix);\n\n        this.g_MvpMatrix.rotate(currentAngle, 1.0, 0.0, 0.0); // Rotate appropriately\n\n        this.g_MvpMatrix.rotate(currentAngle, 0.0, 1.0, 0.0);\n\n        this.g_MvpMatrix.rotate(currentAngle, 0.0, 0.0, 1.0);\n\n        gl.uniformMatrix4fv(u_MvpMatrix, false, this.g_MvpMatrix.elements);\n\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);     // Clear buffers (color and depth)\n\n        gl.drawElements(gl.TRIANGLES, n, gl.UNSIGNED_BYTE, 0);   // Draw\n\n    }\n\n    draw2D = (ctx, currentAngle) => {\n\n        ctx.clearRect(0, 0, 400, 400); // Clear <hud>\n\n        // Draw triangle with white lines\n        ctx.beginPath();                      // Start drawing\n\n        ctx.moveTo(120, 10);\n        ctx.lineTo(200, 150);\n        ctx.lineTo(40, 150);\n\n        ctx.closePath();\n\n        ctx.strokeStyle = 'rgba(255, 255, 255, 1)'; // Set white to color of lines\n\n        ctx.stroke();                           // Draw Triangle with white lines\n\n        // Draw white letters\n        ctx.font = '18px \"Times New Roman\"';\n\n        ctx.fillStyle = 'rgba(255, 255, 255, 1)'; // Set white to the color of letters\n\n        ctx.fillText('HUD: Head Up Display', 40, 180);\n\n        ctx.fillText('Triangle is drawn by Canvas 2D API.', 40, 200);\n\n        ctx.fillText('Cube is drawn by WebGL API.', 40, 220);\n\n        ctx.fillText('Current Angle: ' + Math.floor(currentAngle), 40, 240);\n\n    }\n\n    last = Date.now(); // Last time that this function was called\n\n    animate = (angle) => {\n\n        const now = Date.now();   // Calculate the elapsed time\n\n        const elapsed = now - this.last;\n\n        this.last = now;\n\n        // Update the current rotation angle (adjusted by the elapsed time)\n        const newAngle = angle + (this.ANGLE_STEP * elapsed) / 1000.0;\n\n        return newAngle % 360;\n\n    }\n\n    initArrayBuffer = (gl, data, num, type, attribute) => {\n\n        // Create a buffer object\n        const buffer = gl.createBuffer();\n\n        if (!buffer) {\n            console.log('Failed to create the buffer object');\n            return false;\n        }\n\n        // Write date into the buffer object\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        // Assign the buffer object to the attribute variable\n        const a_attribute = gl.getAttribLocation(program, attribute);\n\n        if (a_attribute < 0) {\n            console.log('Failed to get the storage location of ' + attribute);\n            return false;\n        }\n\n        gl.vertexAttribPointer(a_attribute, num, type, false, 0, 0);\n\n        // Enable the assignment of the buffer object to the attribute variable\n        gl.enableVertexAttribArray(a_attribute);\n\n        // Unbind the buffer object\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n        return true;\n    }\n\n\n    render() {\n        return (\n            <>\n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}\n                        style={{position: \"absolute\", zIndex: 0}}>\n                    Please use a browser that supports \"canvas\"\n                </canvas>\n                <canvas id=\"hud\" width={window.innerWidth} height={window.innerHeight}\n                        style={{position: \"absolute\", zIndex: 1}}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\nimport {Matrix4} from \"assets/js/cuon-matrix\";\nimport {getWebGLContext} from \"../assets/js/cuon-utils\";\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class PickFace extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE = `\n        attribute vec4 a_Position;\n        attribute vec4 a_Color;\n        attribute float a_Face;   // Surface number (Cannot use int for attribute variable)\n        uniform mat4 u_MvpMatrix;\n        uniform int u_PickedFace; // Surface number of selected face\n        varying vec4 v_Color;\n        void main() {\n          gl_Position = u_MvpMatrix * a_Position;\n          int face = int(a_Face); // Convert to int\n          vec3 color = (face == u_PickedFace) ? vec3(1.0) : a_Color.rgb;\n          if(u_PickedFace == 0) { // In case of 0, insert the face number into alpha\n            v_Color = vec4(color, a_Face/255.0);\n          } else {\n            v_Color = vec4(color, a_Color.a);\n          }\n        }`;\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE = `\n        #ifdef GL_ES\n        precision mediump float;\n        #endif\n        varying vec4 v_Color;\n        void main() {\n          gl_FragColor = v_Color;\n        }`;\n\n    ANGLE_STEP = 20.0; // Rotation angle (degrees/second)\n\n    currentAngle = 0.0; // Current rotation angle\n\n    componentDidMount() {\n\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        // Set the vertex information\n        const n = this.initVertexBuffers(gl);\n\n        if (n < 0) {\n            console.log('Failed to set the vertex information');\n            return;\n        }\n\n        // Set the clear color and enable the depth test\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\n        gl.enable(gl.DEPTH_TEST);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        // Get the storage locations of uniform variables\n        const u_MvpMatrix = gl.getUniformLocation(program, 'u_MvpMatrix');\n\n        const u_PickedFace = gl.getUniformLocation(program, 'u_PickedFace');\n\n        if (!u_MvpMatrix || !u_PickedFace) {\n            console.log('Failed to get the storage location of uniform variable');\n            return;\n        }\n\n        // Calculate the view projection matrix\n        const viewProjMatrix = new Matrix4(undefined);\n\n        viewProjMatrix.setPerspective(30.0, window.innerWidth / window.innerHeight, 1.0, 100.0);\n\n        viewProjMatrix.lookAt(0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0);\n\n        // Initialize selected surface\n        gl.uniform1i(u_PickedFace, -1);\n\n        // Register the event handler\n        gl.canvas.onmousedown = (ev) => {   // Mouse is pressed\n\n            const target = ev.target as HTMLElement;\n\n            const x = ev.clientX,\n                y = ev.clientY;\n\n            const rect = target.getBoundingClientRect();\n\n            if (rect.left <= x && x < rect.right && rect.top <= y && y < rect.bottom) {\n\n                // If Clicked position is inside the <canvas>, update the selected surface\n                const x_in_canvas = x - rect.left, y_in_canvas = rect.bottom - y;\n\n                const face = this.checkFace(gl, n, x_in_canvas, y_in_canvas, this.currentAngle, u_PickedFace, viewProjMatrix, u_MvpMatrix);\n\n                gl.uniform1i(u_PickedFace, face); // Pass the surface number to u_PickedFace\n\n                this.draw(gl, n, this.currentAngle, viewProjMatrix, u_MvpMatrix);\n\n            }\n\n        }\n\n        const tick = () => {   // Start drawing\n\n            this.currentAngle = this.animate(this.currentAngle);\n\n            this.draw(gl, n, this.currentAngle, viewProjMatrix, u_MvpMatrix);\n\n            requestAnimationFrame(tick);\n\n        };\n\n        tick();\n\n    }\n\n\n    initVertexBuffers = (gl) => {\n        // Create a cube\n        //    v6----- v5\n        //   /|      /|\n        //  v1------v0|\n        //  | |     | |\n        //  | |v7---|-|v4\n        //  |/      |/\n        //  v2------v3\n\n        const vertices = new Float32Array([   // Vertex coordinates\n            1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0,    // v0-v1-v2-v3 front\n            1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0,    // v0-v3-v4-v5 right\n            1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0,    // v0-v5-v6-v1 up\n            -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0,    // v1-v6-v7-v2 left\n            -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0,    // v7-v4-v3-v2 down\n            1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0     // v4-v7-v6-v5 back\n        ]);\n\n        const colors = new Float32Array([   // Colors\n            0.32, 0.18, 0.56, 0.32, 0.18, 0.56, 0.32, 0.18, 0.56, 0.32, 0.18, 0.56, // v0-v1-v2-v3 front\n            0.5, 0.41, 0.69, 0.5, 0.41, 0.69, 0.5, 0.41, 0.69, 0.5, 0.41, 0.69,  // v0-v3-v4-v5 right\n            0.78, 0.69, 0.84, 0.78, 0.69, 0.84, 0.78, 0.69, 0.84, 0.78, 0.69, 0.84, // v0-v5-v6-v1 up\n            0.0, 0.32, 0.61, 0.0, 0.32, 0.61, 0.0, 0.32, 0.61, 0.0, 0.32, 0.61,  // v1-v6-v7-v2 left\n            0.27, 0.58, 0.82, 0.27, 0.58, 0.82, 0.27, 0.58, 0.82, 0.27, 0.58, 0.82, // v7-v4-v3-v2 down\n            0.73, 0.82, 0.93, 0.73, 0.82, 0.93, 0.73, 0.82, 0.93, 0.73, 0.82, 0.93, // v4-v7-v6-v5 back\n        ]);\n\n        const faces = new Uint8Array([   // Faces\n            1, 1, 1, 1,     // v0-v1-v2-v3 front\n            2, 2, 2, 2,     // v0-v3-v4-v5 right\n            3, 3, 3, 3,     // v0-v5-v6-v1 up\n            4, 4, 4, 4,     // v1-v6-v7-v2 left\n            5, 5, 5, 5,     // v7-v4-v3-v2 down\n            6, 6, 6, 6,     // v4-v7-v6-v5 back\n        ]);\n\n        const indices = new Uint8Array([   // Indices of the vertices\n            0, 1, 2, 0, 2, 3,    // front\n            4, 5, 6, 4, 6, 7,    // right\n            8, 9, 10, 8, 10, 11,    // up\n            12, 13, 14, 12, 14, 15,    // left\n            16, 17, 18, 16, 18, 19,    // down\n            20, 21, 22, 20, 22, 23     // back\n        ]);\n\n        // Create a buffer object\n        const indexBuffer = gl.createBuffer();\n\n        if (!indexBuffer) {\n            return -1;\n        }\n\n        // Write vertex information to buffer object\n        if (!this.initArrayBuffer(gl, vertices, gl.FLOAT, 3, 'a_Position')) return -1; // Coordinates Information\n\n        if (!this.initArrayBuffer(gl, colors, gl.FLOAT, 3, 'a_Color')) return -1;      // Color Information\n\n        if (!this.initArrayBuffer(gl, faces, gl.UNSIGNED_BYTE, 1, 'a_Face')) return -1;// Surface Information\n\n        // Unbind the buffer object\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n        // Write the indices to the buffer object\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\n        return indices.length;\n\n    }\n\n    checkFace = (gl, n, x, y, currentAngle, u_PickedFace, viewProjMatrix, u_MvpMatrix) => {\n        const pixels = new Uint8Array(4); // Array for storing the pixel value\n        gl.uniform1i(u_PickedFace, 0);  // Draw by writing surface number into alpha value\n        this.draw(gl, n, currentAngle, viewProjMatrix, u_MvpMatrix);\n        // Read the pixel value of the clicked position. pixels[3] is the surface number\n        gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n        return pixels[3];\n    }\n\n    g_MvpMatrix = new Matrix4(undefined); // Model view projection matrix\n\n    draw = (gl, n, currentAngle, viewProjMatrix, u_MvpMatrix) => {\n        // Caliculate The model view projection matrix and pass it to u_MvpMatrix\n        this.g_MvpMatrix.set(viewProjMatrix);\n        this.g_MvpMatrix.rotate(currentAngle, 1.0, 0.0, 0.0); // Rotate appropriately\n        this.g_MvpMatrix.rotate(currentAngle, 0.0, 1.0, 0.0);\n        this.g_MvpMatrix.rotate(currentAngle, 0.0, 0.0, 1.0);\n        gl.uniformMatrix4fv(u_MvpMatrix, false, this.g_MvpMatrix.elements);\n\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);     // Clear buffers\n        gl.drawElements(gl.TRIANGLES, n, gl.UNSIGNED_BYTE, 0);   // Draw\n    }\n\n    last = Date.now();  // Last time that this function was called\n\n    animate = (angle) => {\n\n        const now = Date.now(); // Calculate the elapsed time\n\n        const elapsed = now - this.last;\n\n        this.last = now;\n\n        // Update the current rotation angle (adjusted by the elapsed time)\n        const newAngle = angle + (this.ANGLE_STEP * elapsed) / 1000.0;\n\n        return newAngle % 360;\n\n    }\n\n    initArrayBuffer = (gl, data, type, num, attribute) => {\n\n        // Create a buffer object\n        const buffer = gl.createBuffer();\n\n        if (!buffer) {\n            console.log('Failed to create the buffer object');\n            return false;\n        }\n\n        // Write date into the buffer object\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program'\n        }\n\n        // Assign the buffer object to the attribute variable\n        const a_attribute = gl.getAttribLocation(program, attribute);\n\n        if (a_attribute < 0) {\n            console.log('Failed to get the storage location of ' + attribute);\n            return false;\n        }\n\n        gl.vertexAttribPointer(a_attribute, num, type, false, 0, 0);\n\n        // Enable the assignment to a_attribute variable\n        gl.enableVertexAttribArray(a_attribute);\n\n        return true;\n    }\n\n\n    render() {\n\n        return (\n            <>\n                \n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","/******************************************************************************/\nexport class Orientation {\n\n    angle: number = 0;                  // Angle in degrees\n    axis: Array<number> = [];                   // Unit vector\n\n    constructor(angle: number, axis: Array<number>) {\n        this.angle = angle;                  // Angle in degrees\n        this.axis = axis;                    // Unit vector\n    };\n\n    toQuaternion = () => {\n        //  Convert from angle/axis to unit quaternion\n        const cfac = Math.PI / 180.0;\n        const ad2 = cfac * this.angle / 2.0;\n        const ca = Math.cos(ad2);\n        const sa = Math.sin(ad2);\n        return [ca, sa * this.axis[0], sa * this.axis[1],\n            sa * this.axis[2]];\n    };\n\n    fromQuaternion = (q) => {\n        //  Set properties to the angle/axis equivalent of unit quaternion q\n        const cfac = Math.PI / 180.0;\n        this.angle = 2.0 * Math.acos(q[0]) / cfac;\n        const un = Math.sqrt(q[1] * q[1] + q[2] * q[2] + q[3] * q[3]);\n        if (un > 0) {\n            this.axis[0] = q[1] / un;\n            this.axis[1] = q[2] / un;\n            this.axis[2] = q[3] / un;\n        }\n        return;\n    };\n}\n","import React, {Component} from \"react\";\nimport {Matrix4, Vector3} from \"assets/js/cuon-matrix\";\nimport {\n    getWebGLContext,\n    iWebGLRenderingContext,\n    iWebGLProgram, iProgramArgs\n} from \"../assets/js/cuon-utils\";\nimport {Orientation} from \"Orientation\";\n\nimport bunny from \"assets/json/bunny.json\"\nimport cone from \"assets/json/cone.json\"\nimport cube from \"assets/json/cube.json\"\nimport e37 from \"assets/json/e37.json\"\nimport elephant from \"assets/json/elephant.json\"\n\n// const logo = require('assets/img/webgl.png');\n\n//  wglsurf2.js:  Surface renderer\n//  R. Renka\n//  04/04/2017\n//\n//  This program reads a json file containing a triangle mesh surface\n//  (model) in the form of a vertex list and triangle list, and displays\n//  the surface with a user-specified shading method:  flat, Gouraud,\n//  Phong, or wireframe.\n\n\ninterface iProgramAdditionalAttributes {\n    a_Position?: number;\n    a_Normal?: number;\n    a_BaryCoords?: WebGLUniformLocation | null,\n    u_AmbientLight?: WebGLUniformLocation | null,\n    u_BackColor?: WebGLUniformLocation | null,\n    u_FrontColor?: WebGLUniformLocation | null,\n    u_LightColor?: WebGLUniformLocation | null,\n    u_LightDirection?: WebGLUniformLocation | null,\n    u_MvMatrix?: WebGLUniformLocation | null,\n    u_MvpMatrix?: WebGLUniformLocation | null,\n    u_NormalMatrix?: WebGLUniformLocation | null,\n    u_Perspective?: WebGLUniformLocation | null,\n    u_Shininess?: WebGLUniformLocation | null,\n}\n\ntype iProgramMultipleShaders = iWebGLProgram<iProgramAdditionalAttributes>;\n\ntype iWebGlWithAdditionalAttributes = iWebGLRenderingContext<{\n    bbox: any\n}>;\n\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class RotateObjectWithMouse extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE_PHONG_SHADING = `\n        //\n        //  *** Vertex shader program (GLSL code) for Phong shading\n        //\n        //  a_Position = vertex position in world coordinates\n        //  a_Normal = vertex normal vector in world coordinates\n        // \n        //  u_MvMatrix = Modelview matrix\n        //  u_MvpMatrix = Modelview-projection matrix\n        //  u_NormalMatrix = Inverse transpose of modelview matrix\n\n        attribute vec3 a_Position;\n        attribute vec3 a_Normal;\n\n        uniform mat4 u_MvMatrix;\n        uniform mat4 u_MvpMatrix;\n        uniform mat4 u_NormalMatrix;\n\n        varying vec3 v_Position;\n        varying vec3 v_Normal;\n\n        void main(void) {\n\n            //  gl_Position = vertex position in clip coordinates\n            //  v_Position = vertex position in eye coordinates\n            //  v_Normal = vertex normal vector in eye coordinates\n\n            gl_Position = u_MvpMatrix * vec4(a_Position, 1.0);\n            vec4 vPosition = u_MvMatrix * vec4(a_Position, 1.0);\n            v_Position = vec3(vPosition);\n            v_Normal = vec3(u_NormalMatrix * vec4(a_Normal, 0.0));\n        }\n    `;\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE_PHONG_SHADING = `\n        //\n        //  ### Fragment shader program for Phong shading\n        //\n        #ifdef GL_ES\n        precision mediump float;\n        #endif\n\n        //  u_FrontColor = material front face color\n        //  u_BackColor = material back face color\n        //  u_AmbientLight = Color of ambient light\n        //  u_LightDirection = Direction to point source in eye coordinates\n        //  u_LightColor = Color of point light source\n        //  u_Perspective = Perspective vs orthogonal projection option\n        //  u_Shininess = Exponent in specular reflection term \n\n        uniform vec4 u_FrontColor;\n        uniform vec4 u_BackColor;\n        uniform vec3 u_AmbientLight;\n        uniform vec3 u_LightDirection;\n        uniform vec3 u_LightColor;\n        uniform bool u_Perspective;\n        uniform float u_Shininess;\n\n        //  v_Position = interpolated fragment position in eye coordinates\n        //  v_Normal = interpolated normal vector in eye coordinates\n\n        varying vec3 v_Position;\n        varying vec3 v_Normal;\n\n        void main() {\n\n            //  Determine whether the fragment lies on a front or back face, and\n            //  choose the material color accordingly\n\n            vec3 normal = normalize(v_Normal);\n            vec4 matColor = u_FrontColor;\n            vec3 viewDirection;\n            if (u_Perspective) {\n                viewDirection = normalize(-v_Position);\n            } else {\n                viewDirection = vec3(0.0, 0.0, 1.0);\n            }\n            if (dot(normal, viewDirection) <= 0.0) {\n                matColor = u_BackColor;\n                normal = -normal;\n            }\n\n            //  Compute fragment color from Phong's illumination model\n\n            vec3 ambient = u_AmbientLight * matColor.rgb;\n            float nDotL = max(dot(u_LightDirection, normal), 0.0);\n            float specular = 0.0;\n            if (nDotL > 0.0) {\n                vec3 reflectDirection = reflect(-u_LightDirection, normal);\n                float eDotR = max(dot(reflectDirection, viewDirection), 0.0);\n                specular = pow(eDotR, u_Shininess);\n            }\n            vec3 diffuse = matColor.rgb * nDotL;\n            gl_FragColor = vec4(diffuse + ambient + specular * u_LightColor,\n            matColor.a);\n        }\n    `;\n\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE_GOURAUD_SHADING = `\n        //\n        //  *** Vertex shader program (GLSL code) for Gouraud shading\n        //\n\n        //  a_Position = vertex position in world coordinates\n        //  a_Normal = vertex normal vector in world coordinates\n\n        attribute vec3 a_Position;\n        attribute vec3 a_Normal;\n\n        //  u_MvMatrix = Modelview matrix\n        //  u_MvpMatrix = Modelview-projection matrix\n        //  u_NormalMatrix = Inverse transpose of modelview matrix\n\n        uniform mat4 u_MvMatrix;\n        uniform mat4 u_MvpMatrix;\n        uniform mat4 u_NormalMatrix;\n\n        //  u_FrontColor = material front face color\n        //  u_BackColor = material back face color\n        //  u_AmbientLight = Color of ambient light\n        //  u_LightDirection = Direction to point source in eye coordinates\n        //  u_LightColor = Color of point light source\n        //  u_Perspective = Perspective vs orthogonal projection option\n        //  u_Shininess = Exponent in specular reflection term \n\n        uniform vec4 u_FrontColor;\n        uniform vec4 u_BackColor;\n        uniform vec3 u_AmbientLight;\n        uniform vec3 u_LightDirection;\n        uniform vec3 u_LightColor;\n        uniform bool u_Perspective;\n        uniform float u_Shininess;\n\n        //  v_Color = Vertex color from illumination model\n\n        varying vec4 v_Color;\n\n        void main(void) {\n\n            //  gl_Position = vertex position in clip coordinates\n\n            gl_Position = u_MvpMatrix * vec4(a_Position, 1.0);\n\n            //  vPosition = vertex position in eye coordinates\n            //  vNormal = vertex normal in eye coordinates\n\n            vec3 vPosition = vec3(u_MvMatrix * vec4(a_Position, 1.0));\n            vec3 vNormal = vec3(u_NormalMatrix * vec4(a_Normal, 0.0));\n\n            //  Determine whether the vertex lies on a front or back face, and\n            //  choose the material color accordingly\n\n            vec3 normal = normalize(vNormal);\n            vec4 matColor = u_FrontColor;\n            vec3 viewDirection;\n            if (u_Perspective) {\n                viewDirection = normalize(-vPosition);\n            } else {\n                viewDirection = vec3(0.0, 0.0, 1.0);\n            }\n            if (dot(normal, viewDirection) <= 0.0) {\n                matColor = u_BackColor;\n                normal = -normal;\n            }\n\n            //  Compute vertex color from Phong's illumination model\n\n            vec3 ambient = u_AmbientLight * matColor.rgb;\n            float nDotL = max(dot(u_LightDirection, normal), 0.0);\n            float specular = 0.0;\n            if (nDotL > 0.0) {\n                vec3 reflectDirection = reflect(-u_LightDirection, normal);\n                float eDotR = max(dot(reflectDirection, viewDirection), 0.0);\n                specular = pow(eDotR, u_Shininess);\n            }\n            vec3 diffuse = matColor.rgb * nDotL;\n            v_Color = vec4(diffuse + ambient + specular * u_LightColor,\n            matColor.a);\n        }\n    `;\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE_GOURAUD_SHADING = `\n        //\n        //  ### Fragment shader program for Gouraud shading\n        //\n        #ifdef GL_ES\n        precision mediump float;\n        #endif\n\n        //  v_Color = Interpolated fragment color\n\n        varying vec4 v_Color;\n\n        void main() {\n            gl_FragColor = v_Color;\n        }\n    `;\n\n\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE_FLAT_SHADING = `\n        //\n        //  *** Vertex shader program (GLSL code) for flat (faceted) shading\n        //\n        //  This shader is identical to \"shader-vsG\".\n\n\n        //  a_Position = vertex position in world coordinates\n        //  a_Normal = vertex normal vector in world coordinates\n\n        attribute vec3 a_Position;\n        attribute vec3 a_Normal;\n\n        //  u_MvMatrix = Modelview matrix\n        //  u_MvpMatrix = Modelview-projection matrix\n        //  u_NormalMatrix = Inverse transpose of modelview matrix\n\n        uniform mat4 u_MvMatrix;\n        uniform mat4 u_MvpMatrix;\n        uniform mat4 u_NormalMatrix;\n\n        //  u_FrontColor = material front face color\n        //  u_BackColor = material back face color\n        //  u_AmbientLight = Color of ambient light\n        //  u_LightDirection = Direction to point source in eye coordinates\n        //  u_LightColor = Color of point light source\n        //  u_Perspective = Perspective vs orthogonal projection option\n        //  u_Shininess = Exponent in specular reflection term \n\n        uniform vec4 u_FrontColor;\n        uniform vec4 u_BackColor;\n        uniform vec3 u_AmbientLight;\n        uniform vec3 u_LightDirection;\n        uniform vec3 u_LightColor;\n        uniform bool u_Perspective;\n        uniform float u_Shininess;\n\n        //  v_Color = Vertex color from illumination model\n\n        varying vec4 v_Color;\n\n        void main(void) {\n\n            //  gl_Position = vertex position in clip coordinates\n\n            gl_Position = u_MvpMatrix * vec4(a_Position, 1.0);\n\n            //  vPosition = vertex position in eye coordinates\n            //  vNormal = vertex normal in eye coordinates\n\n            vec3 vPosition = vec3(u_MvMatrix * vec4(a_Position, 1.0));\n            vec3 vNormal = vec3(u_NormalMatrix * vec4(a_Normal, 0.0));\n\n            //  Determine whether the vertex lies on a front or back face, and\n            //  choose the material color accordingly\n\n            vec3 normal = normalize(vNormal);\n            vec4 matColor = u_FrontColor;\n            vec3 viewDirection;\n            if (u_Perspective) {\n                viewDirection = normalize(-vPosition);\n            } else {\n                viewDirection = vec3(0.0, 0.0, 1.0);\n            }\n            if (dot(normal, viewDirection) <= 0.0) {\n                matColor = u_BackColor;\n                normal = -normal;\n            }\n\n            //  Compute vertex color from Phong's illumination model\n\n            vec3 ambient = u_AmbientLight * matColor.rgb;\n            float nDotL = max(dot(u_LightDirection, normal), 0.0);\n            float specular = 0.0;\n            if (nDotL > 0.0) {\n                vec3 reflectDirection = reflect(-u_LightDirection, normal);\n                float eDotR = max(dot(reflectDirection, viewDirection), 0.0);\n                specular = pow(eDotR, u_Shininess);\n            }\n            vec3 diffuse = matColor.rgb * nDotL;\n            v_Color = vec4(diffuse + ambient + specular * u_LightColor,\n            matColor.a);\n        }\n    `;\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE_FLAT_SHADING = `\n        //\n        //  ### Fragment shader program for flat shading\n        //\n        //  This shader is identical to \"shader-fsG\".\n\n        #ifdef GL_ES\n        precision mediump float;\n        #endif\n\n        //  v_Color = Interpolated fragment color\n\n        varying vec4 v_Color;\n\n        void main() {\n            gl_FragColor = v_Color;\n        }\n    `;\n\n\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE_WIRE_SHADING = `\n        //\n        //  *** Vertex shader program (GLSL code) for wireframe mesh\n        //\n\n        //  a_Position = vertex position in world coordinates\n        //  a_Normal = vertex normal vector in world coordinates\n        //  a_BaryCoords = vertex barycentric coordinates\n\n        attribute vec3 a_Position;\n        attribute vec3 a_Normal;\n        attribute vec3 a_BaryCoords;\n\n        //  u_MvMatrix = Modelview matrix\n        //  u_MvpMatrix = Modelview-projection matrix\n        //  u_NormalMatrix = Inverse transpose of modelview matrix\n\n        uniform mat4 u_MvMatrix;\n        uniform mat4 u_MvpMatrix;\n        uniform mat4 u_NormalMatrix;\n\n        //  u_FrontColor = material front face color\n        //  u_BackColor = material back face color\n        //  u_Perspective = Perspective vs orthogonal projection option\n\n        uniform vec4 u_FrontColor;\n        uniform vec4 u_BackColor;\n        uniform bool u_Perspective;\n\n        //  v_BaryCoords = Vertex barycentric coordinates\n        //  v_Color = Vertex color\n\n        varying vec3 v_BaryCoords;\n        varying vec4 v_Color;\n\n        void main(void) {\n\n            //  gl_Position = vertex position in clip coordinates\n            //  v_BaryCoords = vertex barycentric coordinates\n\n            gl_Position = u_MvpMatrix * vec4(a_Position, 1.0);\n            v_BaryCoords = a_BaryCoords;\n\n            //  vPosition = vertex position in eye coordinates\n            //  vNormal = vertex normal in eye coordinates\n\n            vec3 vPosition = vec3(u_MvMatrix * vec4(a_Position, 1.0));\n            vec3 vNormal = vec3(u_NormalMatrix * vec4(a_Normal, 0.0));\n\n            //  Determine whether the vertex lies on a front or back face, and\n            //  choose the line color accordingly\n\n            v_Color = u_FrontColor;\n            vec3 viewDirection;\n            if (u_Perspective) {\n                viewDirection = -vPosition;\n            } else {\n                viewDirection = vec3(0.0, 0.0, 1.0);\n            }\n            if (dot(vNormal, viewDirection) <= 0.0) {\n                v_Color = u_BackColor;\n            }\n        }\n    `\n\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE_WIRE_SHADING = `\n        //\n        //  ### Fragment shader program for wireframe mesh\n        //\n        #ifdef GL_ES\n        precision mediump float;\n        #endif\n\n        //  v_BaryCoords = Interpolated fragment barycentric coordinates\n        //  v_Color = Interpolated fragment color\n\n        varying vec3 v_BaryCoords;\n        varying vec4 v_Color;\n\n        void main() {\n\n            //  The smallest barycentric coordinate is the minimum relative distance to\n            //  an edge (relative to the distance from the opposite vertex to the line\n            //  containing the edge)\n\n            if (any(lessThan(v_BaryCoords, vec3(0.02)))) {\n                gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n            } else {\n                gl_FragColor = v_Color;\n            }\n        }\n    `;\n\n\n    //  Buffer objects created by handleLoadedModel and used by draw:\n\n    buffers: any = {};\n\n    modelLoaded = false;     // True iff the model has been loaded\n\n    //  Camera, light, and model orientations (angle/axis pairs):\n    orient_camera = new Orientation(0.0, [1.0, 0.0, 0.0]);\n    orient_light = new Orientation(0.0, [1.0, 0.0, 0.0]);\n    orient_model = new Orientation(0.0, [1.0, 0.0, 0.0]);\n\n    //  Phong's illumination model:\n    imodel = {\n        frontColor: [0.5, 0.0, 0.0, 1.0],\n        backColor: [0.0, 0.0, 0.5, 1.0],\n        ambientLight: [0.4, 0.4, 0.4],\n        lightColor: [1.0, 1.0, 1.0],\n        shininess: 32\n    };\n\n    //  Miscellaneous options:\n    opt = {\n        perspective: true,       // Perspective vs orthographic projection\n        vsf: 1.0                 // Scale factor for zoom\n    };\n\n    gl ?: iWebGlWithAdditionalAttributes;\n\n    componentDidMount() {\n        //  This function is invoked by the onLoad event of the web page.\n        //  Retrieve <canvas> element.\n        const canvas = document.getElementById(\"webgl\");\n\n        //  Get the rendering context for WebGL.\n        this.gl = getWebGLContext<{\n            bbox: any\n        }>(\"webgl\", [\n            {\n                vertexShader: this.VSHADER_SOURCE_FLAT_SHADING,\n                fragmentShader: this.FSHADER_SOURCE_FLAT_SHADING,\n                name: 'prgF'\n            },{\n                vertexShader: this.VSHADER_SOURCE_GOURAUD_SHADING,\n                fragmentShader: this.FSHADER_SOURCE_GOURAUD_SHADING,\n                name: 'prgG'\n            },{\n                vertexShader: this.VSHADER_SOURCE_PHONG_SHADING,\n                fragmentShader: this.FSHADER_SOURCE_PHONG_SHADING,\n                name: 'prgP'\n            },{\n                vertexShader: this.VSHADER_SOURCE_WIRE_SHADING,\n                fragmentShader: this.FSHADER_SOURCE_WIRE_SHADING,\n                name: 'prgW'\n            },\n        ] as Array<iProgramArgs>);\n\n\n        if (!this.gl) {\n\n            console.log(\"Failed to get the rendering context for WebGL\");\n\n            return;\n\n        }\n\n        //  Retrieve storage locations of attributes and uniform variables.\n        this.getLocations();\n\n        //  Set the background color, and enable depth testing.\n        this.gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\n        this.gl.enable(this.gl.DEPTH_TEST);\n\n        //  Prompt for a file name.\n        const fname = prompt(\"Specify a path to a json file:  \" +\n            \"bunny, cone, cube, e37, or elephant\",\n            'cube');\n\n        //  Load a model from the web server using AJAX + JSON.\n        //  This function registers a callback and returns immediately.\n        //  The callback (handleLoadedModel), if successful, will initiate drawing.\n\n        this.loadModel(fname);\n\n        //  Register event handlers for keypresses and mouse events.\n        document.onkeydown = (ev) => {\n            this.keydown(ev);\n        };\n\n        this.initMouseEvents(canvas);\n\n\n    }\n\n\n    /******************************************************************************/\n    computeBB = (vertices, bbox) => {\n\n//  Compute axis-aligned bounding box parameters [xmin,xmax] X [ymin,ymax],\n//  radius r, and center c = (xc,yc,zc).\n\n        let dx, dy, dz, r, x, xc, xmax, xmin, y, yc, ymax, ymin, z, zc, zmax, zmin;\n\n        xmin = vertices[0];\n        xmax = xmin;\n        ymin = vertices[1];\n        ymax = ymin;\n        zmin = vertices[2];\n        zmax = zmin;\n\n        for (let i = 1; i < vertices.length / 3; i++) {\n            x = vertices[3 * i];\n            y = vertices[3 * i + 1];\n            z = vertices[3 * i + 2];\n            if (x < xmin) xmin = x;\n            if (x > xmax) xmax = x;\n            if (y < ymin) ymin = y;\n            if (y > ymax) ymax = y;\n            if (z < zmin) zmin = z;\n            if (z > zmax) zmax = z;\n        }\n\n        xc = (xmin + xmax) / 2.0;\n        yc = (ymin + ymax) / 2.0;\n        zc = (zmin + zmax) / 2.0;\n\n        dx = xmax - xmin;\n        dy = ymax - ymin;\n        dz = zmax - zmin;\n        r = Math.sqrt(dx * dx + dy * dy + dz * dz) / 2.0;\n\n//  Store bbox properties.\n\n        bbox.xmin = xmin;\n        bbox.xmax = xmax;\n        bbox.ymin = ymin;\n        bbox.ymax = ymax;\n        bbox.xc = xc;\n        bbox.yc = yc;\n        bbox.zc = zc;\n        bbox.r = r;\n    }\n\n\n    /******************************************************************************/\n    constructNormals = (vertices, indices) => {\n\n        const vnormals = new Float32Array(vertices.length);\n        let a, b, i1, i2, i3, tn, vn, x1, x2, x3, y1, y2, y3, z1, z2, z3;\n\n        for (var i = 0; i < indices.length / 3; i++) {\n            i1 = indices[3 * i];\n            i2 = indices[3 * i + 1];\n            i3 = indices[3 * i + 2];\n\n            x1 = vertices[3 * i1];\n            y1 = vertices[3 * i1 + 1];\n            z1 = vertices[3 * i1 + 2];\n\n            x2 = vertices[3 * i2];\n            y2 = vertices[3 * i2 + 1];\n            z2 = vertices[3 * i2 + 2];\n\n            x3 = vertices[3 * i3];\n            y3 = vertices[3 * i3 + 1];\n            z3 = vertices[3 * i3 + 2];\n\n            a = [x2 - x1, y2 - y1, z2 - z1];\n            b = [x3 - x1, y3 - y1, z3 - z1];\n            tn = [a[1] * b[2] - a[2] * b[1],\n                a[2] * b[0] - a[0] * b[2],\n                a[0] * b[1] - a[1] * b[0]];\n\n//  Normalize tn to a unit vector.\n\n            vn = Math.sqrt(tn[0] * tn[0] + tn[1] * tn[1] + tn[2] * tn[2]);\n            if (vn) {\n                tn[0] /= vn;\n                tn[1] /= vn;\n                tn[2] /= vn;\n            }\n\n//  Add the triangle normal tn to the three vertices.\n\n            vnormals[3 * i1] += tn[0];\n            vnormals[3 * i1 + 1] += tn[1];\n            vnormals[3 * i1 + 2] += tn[2];\n\n            vnormals[3 * i2] += tn[0];\n            vnormals[3 * i2 + 1] += tn[1];\n            vnormals[3 * i2 + 2] += tn[2];\n\n            vnormals[3 * i3] += tn[0];\n            vnormals[3 * i3 + 1] += tn[1];\n            vnormals[3 * i3 + 2] += tn[2];\n        }\n\n//  Normalize the vertex normals.\n\n        for (i = 0; i < vnormals.length / 3; i++) {\n            x1 = vnormals[3 * i];\n            y1 = vnormals[3 * i + 1];\n            z1 = vnormals[3 * i + 2];\n            vn = Math.sqrt(x1 * x1 + y1 * y1 + z1 * z1);\n            if (vn) {\n                vnormals[3 * i] /= vn;\n                vnormals[3 * i + 1] /= vn;\n                vnormals[3 * i + 2] /= vn;\n            }\n        }\n\n        return vnormals;\n    }\n\n\n    /******************************************************************************/\n    createArrayBuffer = (gl, data, num, type) => {\n\n//  Create a buffer object, bind it to the target, and copy data.\n\n        const buffer = gl.createBuffer();\n        if (!buffer) {\n            console.log('Failed to create the buffer object');\n            return null;\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\n//  Store information required by the attribute variable.\n\n        buffer.num = num;\n        buffer.type = type;\n\n        return buffer;\n    }\n\n    getProgramByName = (name: string): iProgramMultipleShaders => {\n\n        const v = this.gl?.programs?.find((v: any) => v.name === name)?.value;\n\n        if (undefined === v) {\n            throw 'Failed to find program ' + name;\n        }\n\n        return v;\n\n    };\n\n    documentGetInputElementCheckedById = (id: string): boolean => {\n\n        const element: HTMLInputElement | null = document.getElementById(id) as HTMLInputElement;\n\n        if (null === element) {\n            throw 'Could not find input element ' + id;\n        }\n\n        return element.checked;\n\n    };\n\n    /******************************************************************************/\n    draw = () => {\n\n        if (undefined === this.gl) {\n            console.log('Failed to load gl context during draw');\n            return;\n        }\n\n        if (undefined === this.gl.attributes) {\n            console.log('Failed to load gl attributes during draw');\n            return;\n        }\n\n        if (!this.modelLoaded) {\n            console.log('Failed to load model');\n            return;\n        }\n\n        //  Resize the canvas if necessary, and clear the buffers.\n        this.resize(this.gl);\n\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\n        //  Get the shading method (program) from the radio button.\n        let prg: iProgramMultipleShaders | undefined;\n        let prgName: string | undefined;\n\n        if (this.documentGetInputElementCheckedById(\"phong\")) {\n\n            prg = this.getProgramByName(prgName = \"prgP\");\n\n        } else if (this.documentGetInputElementCheckedById(\"gouraud\")) {\n\n            prg = this.getProgramByName(prgName = \"prgG\");\n\n        } else if (this.documentGetInputElementCheckedById(\"flat\")) {\n\n            prg = this.getProgramByName(prgName = \"prgF\");\n\n        } else {\n\n            prg = this.getProgramByName(prgName = \"prgW\");\n\n        }\n\n        if (undefined === prg) {\n\n            throw 'Failed to find registered webgl shader program';\n\n        }\n\n        this.gl.useProgram(prg);\n\n        //  Construct the projection matrix, and set the value of u_Perspective.\n        const projMatrix = new Matrix4(undefined);\n\n        const r = this.gl.attributes?.bbox?.r;\n\n        const vsf = this.opt.vsf;\n\n        if (this.opt.perspective) {\n            projMatrix.setFrustum(-vsf * r, vsf * r, -vsf * r, vsf * r, 2.0 * r, 4.0 * r);\n        } else {\n            projMatrix.setOrtho(-vsf * r, vsf * r, -vsf * r, vsf * r, 2.0 * r, 4.0 * r);\n        }\n\n        this.gl.uniform1f(prg?.attributes?.u_Perspective || null, this.opt.perspective ? 1 : 0);\n\n        //  Construct the modelview matrix, and set the value of the uniform variable.\n        const mvMatrix = new Matrix4();\n\n        mvMatrix.setRotate(this.orient_camera.angle, this.orient_camera.axis[0],\n            this.orient_camera.axis[1], this.orient_camera.axis[2]);\n\n        mvMatrix.translate(0.0, 0.0, -3.0 * r);\n\n        mvMatrix.rotate(this.orient_model.angle, this.orient_model.axis[0],\n            this.orient_model.axis[1], this.orient_model.axis[2]);\n\n        mvMatrix.translate(\n            -this.gl.attributes.bbox.xc,\n            -this.gl.attributes.bbox.yc,\n            -this.gl.attributes.bbox.zc);\n\n        this.gl.uniformMatrix4fv(prg?.attributes?.u_MvMatrix || null, false, mvMatrix.elements);\n\n        //  Construct the modelview-projection matrix and pass it to u_MvpMatrix.\n        const mvpMatrix = new Matrix4();\n\n        mvpMatrix.set(projMatrix);\n\n        mvpMatrix.multiply(mvMatrix);\n\n        this.gl.uniformMatrix4fv(prg?.attributes?.u_MvpMatrix || null, false, mvpMatrix.elements);\n\n        //  Construct the inverse transpose of mvMatrix, and set the uniform variable.\n        const normalMatrix = new Matrix4();\n\n        normalMatrix.setInverseOf(mvMatrix);\n\n        normalMatrix.transpose();\n\n        this.gl.uniformMatrix4fv(prg?.attributes?.u_NormalMatrix || null, false, normalMatrix.elements);\n\n        //  Set the uniform variables defining the illumination model.\n\n        this.gl.uniform4f(prg?.attributes?.u_FrontColor || null, this.imodel.frontColor[0], this.imodel.frontColor[1],\n            this.imodel.frontColor[2], this.imodel.frontColor[3]);\n\n        this.gl.uniform4f(prg?.attributes?.u_BackColor || null, this.imodel.backColor[0], this.imodel.backColor[1],\n            this.imodel.backColor[2], this.imodel.backColor[3]);\n\n        if (prgName !== \"prgW\") {\n\n            //  Set the light direction (surface to point source in eye coordinates)\n            //  to [0, 0, 1] rotated by orient_Light.\n            let v = new Vector3(new Float32Array([0.0, 0.0, 1.0]));\n\n            const lightMatrix = new Matrix4();\n\n            lightMatrix.setRotate(this.orient_light.angle, this.orient_light.axis[0],\n                this.orient_light.axis[1], this.orient_light.axis[2]);\n\n            v = lightMatrix.multiplyVector3(v);\n\n            this.gl.uniform3f(prg?.attributes?.u_LightDirection || null, v.elements[0], v.elements[1],\n                v.elements[2]);\n\n            this.gl.uniform3f(prg?.attributes?.u_AmbientLight || null, this.imodel.ambientLight[0],\n                this.imodel.ambientLight[1], this.imodel.ambientLight[2]);\n\n            this.gl.uniform3f(prg?.attributes?.u_LightColor || null, this.imodel.lightColor[0],\n                this.imodel.lightColor[1], this.imodel.lightColor[2]);\n\n            this.gl.uniform1f(prg?.attributes?.u_Shininess || null, this.imodel.shininess);\n        }\n\n        //  Assign the buffer objects and enable the assignments.\n        this.initAttributeVariable(this.gl, prg?.attributes?.a_Position, this.buffers.vertexBuffer);\n\n        if (prgName === \"prgG\" || prgName === \"prgP\") {\n\n            this.initAttributeVariable(this.gl, prg?.attributes?.a_Normal, this.buffers.vnormalBuffer);\n\n        } else {\n\n            this.initAttributeVariable(this.gl, prg?.attributes?.a_Normal, this.buffers.tnormalBuffer);\n\n        }\n\n        if (prgName === \"prgW\") {\n\n            this.initAttributeVariable(this.gl, prg?.attributes?.a_BaryCoords, this.buffers.bcoordsBuffer);\n\n        }\n\n        //  Render the model.\n        this.gl.drawArrays(this.gl.TRIANGLES, 0, this.buffers.nvert);\n\n    }\n\n\n    /******************************************************************************/\n    expandArrays = (vertices, indices, vnormals, modelObj) => {\n        //  Reorder and expand the model vertex array to include three vertices per\n        //  triangle by replicating shared vertex positions.  Each vertex consists\n        //  of an ordered triple of contiguously stored components, and each triangle\n        //  is an ordered sequence of three vertices with contiguously stored indices.\n        //  On return the three vertices of each triangle are stored contiguously in\n        //  modelObj.vertices and indices is no longer needed.  Also, the vertex\n        //  normal vectors are replicated and returned in modelObj.vnormals, and the\n        //  barycentric coordinates of the vertices are returned in modelObj.bcoords.\n\n        let i1, i2, i3;\n        const nt3 = indices.length;\n        const verticesE = new Float32Array(3 * nt3);\n        const vnormalsE = new Float32Array(3 * nt3);\n        const bcoords = new Float32Array(3 * nt3);\n        //let indi = 0;\n        let indv = 0;\n        for (let i = 0; i < nt3 / 3; i++) {\n            i1 = indices[3 * i];\n            i2 = indices[3 * i + 1];\n            i3 = indices[3 * i + 2];\n            verticesE[indv] = vertices[3 * i1];\n            verticesE[indv + 1] = vertices[3 * i1 + 1];\n            verticesE[indv + 2] = vertices[3 * i1 + 2];\n            verticesE[indv + 3] = vertices[3 * i2];\n            verticesE[indv + 4] = vertices[3 * i2 + 1];\n            verticesE[indv + 5] = vertices[3 * i2 + 2];\n            verticesE[indv + 6] = vertices[3 * i3];\n            verticesE[indv + 7] = vertices[3 * i3 + 1];\n            verticesE[indv + 8] = vertices[3 * i3 + 2];\n\n            vnormalsE[indv] = vnormals[3 * i1];\n            vnormalsE[indv + 1] = vnormals[3 * i1 + 1];\n            vnormalsE[indv + 2] = vnormals[3 * i1 + 2];\n            vnormalsE[indv + 3] = vnormals[3 * i2];\n            vnormalsE[indv + 4] = vnormals[3 * i2 + 1];\n            vnormalsE[indv + 5] = vnormals[3 * i2 + 2];\n            vnormalsE[indv + 6] = vnormals[3 * i3];\n            vnormalsE[indv + 7] = vnormals[3 * i3 + 1];\n            vnormalsE[indv + 8] = vnormals[3 * i3 + 2];\n\n            bcoords[indv] = 1.0;\n            bcoords[indv + 1] = 0.0;\n            bcoords[indv + 2] = 0.0;\n            bcoords[indv + 3] = 0.0;\n            bcoords[indv + 4] = 1.0;\n            bcoords[indv + 5] = 0.0;\n            bcoords[indv + 6] = 0.0;\n            bcoords[indv + 7] = 0.0;\n            bcoords[indv + 8] = 1.0;\n\n            indv += 9;\n            //indi += 3;\n        }\n        modelObj.vertices = verticesE;\n        modelObj.vnormals = vnormalsE;\n        modelObj.bcoords = bcoords;\n    }\n\n    private getLocationsUsingProgram = (name: string) => {\n\n        const prg: iProgramMultipleShaders = this.getProgramByName(name)\n\n        if (undefined === prg.attributes) {\n\n            prg.attributes = {};\n\n        }\n\n        if (undefined === this.gl) {\n            throw 'Failed to lookup gl context for program locations';\n        }\n\n        prg.attributes.a_Position = this.gl.getAttribLocation(prg, 'a_Position');\n        prg.attributes.a_Normal = this.gl.getAttribLocation(prg, 'a_Normal');\n        prg.attributes.u_BackColor = this.gl.getUniformLocation(prg, 'u_BackColor');\n        prg.attributes.u_FrontColor = this.gl.getUniformLocation(prg, 'u_FrontColor');\n        prg.attributes.u_MvMatrix = this.gl.getUniformLocation(prg, 'u_MvMatrix');\n        prg.attributes.u_MvpMatrix = this.gl.getUniformLocation(prg, 'u_MvpMatrix');\n        prg.attributes.u_NormalMatrix = this.gl.getUniformLocation(prg, 'u_NormalMatrix');\n        prg.attributes.u_Perspective = this.gl.getUniformLocation(prg, 'u_Perspective');\n\n        if (name !== \"prgW\") {\n\n            prg.attributes.u_AmbientLight = this.gl.getUniformLocation(prg, 'u_AmbientLight');\n            prg.attributes.u_LightColor = this.gl.getUniformLocation(prg, 'u_LightColor');\n            prg.attributes.u_LightDirection = this.gl.getUniformLocation(prg, 'u_LightDirection');\n            prg.attributes.u_Shininess = this.gl.getUniformLocation(prg, 'u_Shininess');\n\n            if (!prg.attributes.u_Shininess\n                || !prg.attributes.u_LightColor\n                || !prg.attributes.u_LightDirection\n                || !prg.attributes.u_AmbientLight) {\n                throw 'Failed to get the storage location of attribute or uniform variable (lighting variables)'\n            }\n\n        } else {\n\n            prg.attributes.a_BaryCoords = this.gl.getAttribLocation(prg, 'a_BaryCoords');\n\n            if (!prg.attributes.a_BaryCoords) {\n                throw 'Failed to get the storage location of a_BaryCoords'\n\n            }\n\n        }\n\n        if (undefined === prg?.attributes?.a_Position\n            || prg?.attributes?.a_Position < 0\n            || prg?.attributes?.a_Normal < 0\n            || !prg.attributes.u_BackColor\n            || !prg.attributes.u_FrontColor\n            || !prg.attributes.u_MvMatrix\n            || !prg.attributes.u_MvpMatrix\n            || !prg.attributes.u_NormalMatrix\n            || !prg.attributes.u_Perspective) {\n\n            throw 'Failed to get the storage location of attribute or uniform variable'\n\n        }\n\n    }\n\n    /******************************************************************************/\n    getLocations = (): void => {\n        //  This function retrieves the storage locations of vertex attributes and\n        //  uniform variables in the shaders associated with the programs.\n        this.getLocationsUsingProgram(\"prgF\");\n        this.getLocationsUsingProgram(\"prgG\");\n        this.getLocationsUsingProgram(\"prgP\");\n        this.getLocationsUsingProgram(\"prgW\");\n    }\n\n\n    /******************************************************************************/\n    handleLoadedModel = (payload) => {\n\n\n        if (undefined == this.gl) {\n            throw 'this.gl is undefined!!';\n        }\n\n        //  Create the typed arrays and buffers associated with model geometry:\n        //  vertices, vertex normals, and triangle indices.\n\n        this.modelLoaded = true;\n\n        let vertices = new Float32Array(payload.vertices);\n        const indices = new Uint32Array(payload.indices);\n        let vnormals = this.constructNormals(vertices, indices);\n\n        //  Create bounding box object bbox.\n        this.gl.attributes.bbox = {};\n\n        this.computeBB(vertices, this.gl.attributes.bbox);\n\n        //  Reorder the vertex array and expand it by replicating vertices if\n        //  necessary so that it contains three distinct vertices for each triangle,\n        //  and they are stored contiguously for use by gl.drawArrays.  This is\n        //  necessary for flat shading which needs triangle normals and for a\n        //  wireframe mesh which needs barycentric coordinates.  It also avoids\n        //  the problem of treating large models in the context of webgl which\n        //  limits vertex indices to 16 bits.\n\n        const modelObj: any = {};\n\n        this.expandArrays(vertices, indices, vnormals, modelObj);\n\n        vertices = modelObj.vertices;\n\n        vnormals = modelObj.vnormals;\n\n        const bcoords = modelObj.bcoords;\n\n        //  Compute an array tnormals of vertex normal vectors that coincide with\n        //  the triangle normal vectors.  This is required for flat shading.\n        const tnormals = new Float32Array(vnormals.length);\n\n        let a, b, tn, vn, x1, x2, x3, y1, y2, y3, z1, z2, z3;\n\n        for (let i = 0; i < tnormals.length; i += 9) {\n            x1 = vertices[i];\n            y1 = vertices[i + 1];\n            z1 = vertices[i + 2];\n            x2 = vertices[i + 3];\n            y2 = vertices[i + 4];\n            z2 = vertices[i + 5];\n            x3 = vertices[i + 6];\n            y3 = vertices[i + 7];\n            z3 = vertices[i + 8];\n\n            a = [x2 - x1, y2 - y1, z2 - z1];\n            b = [x3 - x1, y3 - y1, z3 - z1];\n            tn = [a[1] * b[2] - a[2] * b[1],\n                a[2] * b[0] - a[0] * b[2],\n                a[0] * b[1] - a[1] * b[0]];\n\n            //  Normalize tn to a unit vector.\n\n            vn = Math.sqrt(tn[0] * tn[0] + tn[1] * tn[1] + tn[2] * tn[2]);\n            if (vn) {\n                tn[0] /= vn;\n                tn[1] /= vn;\n                tn[2] /= vn;\n            }\n\n            //  Store the triangle normal as the three vertex normals.\n\n            tnormals[i] = tn[0];\n            tnormals[i + 1] = tn[1];\n            tnormals[i + 2] = tn[2];\n            tnormals[i + 3] = tn[0];\n            tnormals[i + 4] = tn[1];\n            tnormals[i + 5] = tn[2];\n            tnormals[i + 6] = tn[0];\n            tnormals[i + 7] = tn[1];\n            tnormals[i + 8] = tn[2];\n        }\n\n        //  Create the buffer objects and copy the data\n        this.buffers.vertexBuffer = this.createArrayBuffer(this.gl, vertices, 3, this.gl.FLOAT);\n\n        if (!this.buffers.vertexBuffer) {\n            console.log('Failed to create vertex buffer');\n            return;\n        }\n\n        this.buffers.vnormalBuffer = this.createArrayBuffer(this.gl, vnormals, 3, this.gl.FLOAT);\n\n        if (!this.buffers.vnormalBuffer) {\n            console.log('Failed to create vertex normal buffer');\n            return;\n        }\n\n        this.buffers.tnormalBuffer = this.createArrayBuffer(this.gl, tnormals, 3, this.gl.FLOAT);\n\n        if (!this.buffers.tnormalBuffer) {\n            console.log('Failed to create triangle normal buffer');\n            return;\n        }\n\n        this.buffers.bcoordsBuffer = this.createArrayBuffer(this.gl, bcoords, 3, this.gl.FLOAT);\n\n        if (!this.buffers.bcoordsBuffer) {\n            console.log('Failed to create barycentric coordinates buffer');\n            return;\n        }\n\n        //  Store number of vertices for use by draw in gl.drawArrays.\n\n        this.buffers.nvert = vertices.length / 3;\n\n\n        //  Unbind the buffers from the targets\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n\n        //  Call draw.\n        this.draw();\n    }\n\n\n    /******************************************************************************/\n    initAttributeVariable = (gl, a_Attribute, buffer) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.vertexAttribPointer(a_Attribute, buffer.num, buffer.type, false, 0, 0);\n        gl.enableVertexAttribArray(a_Attribute);\n    }\n\n\n    /******************************************************************************/\n    initMouseEvents = (canvas) => {\n\n        //  Register event handlers for mouse button press, mouse motion, and\n        //  mouse button release.\n\n        //  dragging = true iff a mouse button has been pressed with the mouse\n        //  position in the canvas.\n        //\n        //  (xs,ys) = starting mouse position in a drag operation.\n\n        let dragging = false;\n        let xs = -1, ys = -1;\n\n        canvas.onmousedown = function (event) {\n            const x = event.clientX, y = event.clientY;\n            const rect = event.target.getBoundingClientRect();\n            if (rect.left <= x && x <= rect.right &&\n                rect.top <= y && y <= rect.bottom) {\n                xs = x;\n                ys = y;\n                dragging = true;\n            }\n        };\n\n        canvas.onmouseup = () => {\n            dragging = false;\n        };\n\n        canvas.onmousemove = (event) => {\n            let ad2, cd, sd;\n\n            let q: any = [];\n\n            const r: any = [];\n\n            const x = event.clientX, y = event.clientY;\n\n            if (dragging) {\n\n                //  Rotations are one degree per pixel.\n                const sf = Math.PI / 180.0;\n\n                const dx = sf * (x - xs);\n\n                const dy = sf * (y - ys);\n\n                if (Math.abs(dx) <= Math.abs(dy)) {\n\n                    //  Rotate the model about the x axis by dy degrees.\n\n                    ad2 = dy / 2.0;\n                    cd = Math.cos(ad2);\n                    sd = Math.sin(ad2);\n                    q = this.orient_model.toQuaternion();\n\n                    //  Compute r = p*q, where p is the unit quaternion equivalent of\n                    //  angle dy and axis [1, 0, 0].\n\n                    r[0] = cd * q[0] - sd * q[1];\n                    r[1] = cd * q[1] + sd * q[0];\n                    r[2] = cd * q[2] - sd * q[3];\n                    r[3] = cd * q[3] + sd * q[2];\n\n                    this.orient_model.fromQuaternion(r);\n\n                } else {\n\n                    //  Rotate the model about the y axis by dx degrees.\n\n                    ad2 = dx / 2.0;\n                    cd = Math.cos(ad2);\n                    sd = Math.sin(ad2);\n                    q = this.orient_model.toQuaternion();\n\n                    //  Compute r = p*q, where p is the unit quaternion equivalent of\n                    //  angle dx and axis [0, 1, 0].\n\n                    r[0] = cd * q[0] - sd * q[2];\n                    r[1] = cd * q[1] + sd * q[3];\n                    r[2] = cd * q[2] + sd * q[0];\n                    r[3] = cd * q[3] - sd * q[1];\n                    this.orient_model.fromQuaternion(r);\n                }\n\n                //  Draw the image.\n\n                this.draw();\n            }\n            xs = x;\n            ys = y;\n        };\n    }\n\n\n    /******************************************************************************/\n    keydown = (event: KeyboardEvent) => {\n\n        let ad2, cd, cfac, code, mstep, sd, xstep, ystep, zstep;\n        let q: any = [];\n        const r: any = [];\n\n        cfac = Math.PI / 180.0;  // Degrees to radians conversion factor\n        mstep = 3.0 * cfac;      // Increment for light and model rotation angle\n        xstep = 0.15 * cfac;     // Increment for pitch\n        ystep = 0.15 * cfac;     // Increment for yaw (heading)\n        zstep = 5.0 * cfac;      // Increment for roll\n\n        if (event.keyCode !== undefined) {\n            code = event.keyCode;\n        } else if (event.key !== undefined) {\n            code = event.key;\n        }\n\n        switch (code) {\n            case 37:                  // Left arrow:  y axis, increase\n                ad2 = mstep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = 5.0 * ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_model.toQuaternion();\n\n//  Compute r = p*q, where p is the unit quaternion equivalent of\n//  angle mstep or 5*mstep and axis [0, 1, 0].\n\n                r[0] = cd * q[0] - sd * q[2];\n                r[1] = cd * q[1] + sd * q[3];\n                r[2] = cd * q[2] + sd * q[0];\n                r[3] = cd * q[3] - sd * q[1];\n                this.orient_model.fromQuaternion(r);\n                break;\n\n            case 38:                  // Up arrow:  x axis, increase\n                ad2 = mstep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = 5.0 * ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_model.toQuaternion();\n\n                //  Compute r = p*q, where p is the unit quaternion equivalent of\n                //  angle mstep or 5*mstep and axis [1, 0, 0].\n\n                r[0] = cd * q[0] - sd * q[1];\n                r[1] = cd * q[1] + sd * q[0];\n                r[2] = cd * q[2] - sd * q[3];\n                r[3] = cd * q[3] + sd * q[2];\n                this.orient_model.fromQuaternion(r);\n                break;\n\n            case 39:                  // Right arrow:  y axis, decrease\n                ad2 = -mstep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = 5.0 * ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_model.toQuaternion();\n\n//  Compute r = p*q, where p is the unit quaternion equivalent of\n//  angle -mstep or -5*mstep and axis [0, 1, 0].\n\n                r[0] = cd * q[0] - sd * q[2];\n                r[1] = cd * q[1] + sd * q[3];\n                r[2] = cd * q[2] + sd * q[0];\n                r[3] = cd * q[3] - sd * q[1];\n                this.orient_model.fromQuaternion(r);\n                break;\n\n            case 40:                  // Down arrow:  x axis, decrease\n                ad2 = -mstep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = 5.0 * ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_model.toQuaternion();\n\n                //  Compute r = p*q, where p is the unit quaternion equivalent of\n                //  angle -mstep or -5*mstep and axis [1, 0, 0].\n\n                r[0] = cd * q[0] - sd * q[1];\n                r[1] = cd * q[1] + sd * q[0];\n                r[2] = cd * q[2] - sd * q[3];\n                r[3] = cd * q[3] + sd * q[2];\n                this.orient_model.fromQuaternion(r);\n                break;\n\n            case 69:                  // e:  Scale shininess exponent\n                if (event.shiftKey) {\n                    this.imodel.shininess *= 2.0;\n                } else {\n                    this.imodel.shininess *= 0.5;\n                }\n                break;\n\n            case 73:                  // i:  Rotate light source about x\n                ad2 = mstep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = -ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_light.toQuaternion();\n\n//  Compute r = p*q, where p is the unit quaternion equivalent of\n//  angle mstep or -mstep and axis [1, 0, 0].\n\n                r[0] = cd * q[0] - sd * q[1];\n                r[1] = cd * q[1] + sd * q[0];\n                r[2] = cd * q[2] - sd * q[3];\n                r[3] = cd * q[3] + sd * q[2];\n                this.orient_light.fromQuaternion(r);\n                break;\n\n            case 74:                  // j:  Rotate light source about y\n                ad2 = mstep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = -ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_light.toQuaternion();\n\n//  Compute r = p*q, where p is the unit quaternion equivalent of\n//  angle mstep or -mstep and axis [0, 1, 0].\n\n                r[0] = cd * q[0] - sd * q[2];\n                r[1] = cd * q[1] + sd * q[3];\n                r[2] = cd * q[2] + sd * q[0];\n                r[3] = cd * q[3] - sd * q[1];\n                this.orient_light.fromQuaternion(r);\n                break;\n\n            case 80:                  // p:  Toggle projection type\n                this.opt.perspective = !this.opt.perspective;\n                break;\n\n            case 82:                  // r:  Restore defaults\n                this.orient_camera.angle = 0.0;\n                this.orient_camera.axis = [1.0, 0.0, 0.0];\n                this.orient_light.angle = 0.0;\n                this.orient_light.axis = [1.0, 0.0, 0.0];\n                this.orient_model.angle = 0.0;\n                this.orient_model.axis = [1.0, 0.0, 0.0];\n                this.opt.perspective = true;\n                this.imodel.shininess = 32.0;\n                this.opt.vsf = 1.0;\n                break;\n\n            case 88:                  // x:  Change pitch\n                ad2 = xstep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = -ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_camera.toQuaternion();\n\n//  Compute r = p*q, where p is the unit quaternion equivalent of\n//  angle xstep or -xstep and axis [1, 0, 0].\n\n                r[0] = cd * q[0] - sd * q[1];\n                r[1] = cd * q[1] + sd * q[0];\n                r[2] = cd * q[2] - sd * q[3];\n                r[3] = cd * q[3] + sd * q[2];\n                this.orient_camera.fromQuaternion(r);\n                break;\n\n            case 89:                  // y:  Change yaw (heading)\n                ad2 = ystep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = -ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_camera.toQuaternion();\n\n//  Compute r = p*q, where p is the unit quaternion equivalent of\n//  angle ystep or -ystep and axis [0, 1, 0].\n\n                r[0] = cd * q[0] - sd * q[2];\n                r[1] = cd * q[1] + sd * q[3];\n                r[2] = cd * q[2] + sd * q[0];\n                r[3] = cd * q[3] - sd * q[1];\n                this.orient_camera.fromQuaternion(r);\n                break;\n\n            case 90:                  // z:  Change roll\n                ad2 = zstep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = -ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_camera.toQuaternion();\n\n                //  Compute r = p*q, where p is the unit quaternion equivalent of\n                //  angle zstep or -zstep and axis [0, 0, 1].\n\n                r[0] = cd * q[0] - sd * q[3];\n                r[1] = cd * q[1] - sd * q[2];\n                r[2] = cd * q[2] + sd * q[1];\n                r[3] = cd * q[3] + sd * q[0];\n                this.orient_camera.fromQuaternion(r);\n                break;\n\n            case 188:                 // <:  Zoom out\n                this.opt.vsf *= 0.8;\n                break;\n\n            case 190:                 // >:  Zoom in\n                this.opt.vsf *= 1.2;\n                break;\n\n            default:\n                return;\n        }\n        this.draw();\n    }\n\n\n    /******************************************************************************/\n    loadModel = (filename) => {\n\n        // Create an AJAX request to load a model asynchronously.\n        // bunny, cone, cube, e37, or elephant\n        switch (filename) {\n\n            case \"bunny\":\n                this.handleLoadedModel(bunny);\n                break;\n            case \"cone\":\n                this.handleLoadedModel(cone);\n                break;\n            case \"cube\":\n                this.handleLoadedModel(cube);\n                break;\n            case \"e37\":\n                this.handleLoadedModel(e37);\n                break;\n            case \"elephant\":\n                this.handleLoadedModel(elephant);\n                break;\n        }\n\n\n    }\n\n\n    /******************************************************************************/\n    resize = (gl) => {\n\n        // Get the canvas from the WebGL context.\n\n        const canvas = gl.canvas;\n\n        // Lookup the size the browser is displaying the canvas.\n\n        const displayWidth = canvas.clientWidth;\n        const displayHeight = canvas.clientHeight;\n\n        // Check if the canvas is not the same size.\n\n        if (canvas.width != displayWidth ||\n            canvas.height != displayHeight) {\n\n            // Make the canvas the same size.\n\n            canvas.width = displayWidth;\n            canvas.height = displayHeight;\n\n            // Set the viewport to match.\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n        }\n    }\n\n\n    render() {\n\n        return <div>\n            <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n\n            <p> Shading method:</p>\n            <form>\n                <input type=\"radio\" name=\"shading\" id=\"phong\"\n                       value=\"Phong\" checked/> Phong shading<br/>\n                <input type=\"radio\" name=\"shading\" id=\"gouraud\"\n                       value=\"Gouraud\"/> Gouraud shading<br/>\n                <input type=\"radio\" name=\"shading\" id=\"flat\"\n                       value=\"Flat\"/> Flat shading<br/>\n                <input type=\"radio\" name=\"shading\" id=\"wireframe\"\n                       value=\"Wireframe\"/> Wireframe mesh\n            </form>\n            <br/>\n            <p>Keypress Options</p>\n            <table>\n                <tbody>\n                <tr>\n                    <th>Key</th>\n                    <th>Function</th>\n                </tr>\n                <tr>\n                    <td>Left Arrow</td>\n                    <td>Rotate model left about y axis (fast)</td>\n                </tr>\n                <tr>\n                    <td>Right Arrow</td>\n                    <td>Rotate model right about y axis (fast)</td>\n                </tr>\n                <tr>\n                    <td>Up Arrow</td>\n                    <td>Rotate model up about x axis (fast)</td>\n                </tr>\n                <tr>\n                    <td>Down Arrow</td>\n                    <td>Rotate model down about x axis (fast)</td>\n                </tr>\n                <tr>\n                    <td>e</td>\n                    <td>Halve (double) shininess exponent</td>\n                </tr>\n                <tr>\n                    <td>i</td>\n                    <td>Rotate light source down (up) about x axis</td>\n                </tr>\n                <tr>\n                    <td>j</td>\n                    <td>Rotate light source right (left) about y axis</td>\n                </tr>\n                <tr>\n                    <td>p</td>\n                    <td>Toggle perspective/orthographic projection</td>\n                </tr>\n                <tr>\n                    <td>r</td>\n                    <td>Restore defaults</td>\n                </tr>\n                <tr>\n                    <td>x</td>\n                    <td>Rotate camera up (down) about x axis</td>\n                </tr>\n                <tr>\n                    <td>y</td>\n                    <td>Rotate camera left (right) about y axis</td>\n                </tr>\n                <tr>\n                    <td>z</td>\n                    <td>Rotate camera CCW (clockwise) about z axis</td>\n                </tr>\n                <tr>\n                    <td>\n                        {\"<\"}\n                    </td>\n                    <td>Zoom in</td>\n                </tr>\n                <tr>\n                    <td>{\">\"}</td>\n                    <td>Zoom out</td>\n                </tr>\n                </tbody>\n            </table>\n            <p>Options in parentheses are selected with the Shift key.</p>\n            <br/>\n            <input type=\"text\" value=\"Keyboard\"/>\n        </div>\n    }\n\n}\n\n","import React, {Component} from \"react\";\nimport {getWebGLContext} from \"../assets/js/cuon-utils\";\n\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class Chaos extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE = `\n        //\n        // Vertex shader program (GLSL code) in the form of a script\n        //\n        attribute vec4 a_Position;\n        void main() {\n            gl_Position = a_Position;\n            gl_PointSize = 1.0;\n        }\n    `;\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE = `\n        //\n        // Fragment shader program\n        //\n        precision mediump float;\n        uniform vec4 u_FragColor;\n        void main() {\n            gl_FragColor = u_FragColor;\n        }\n    `;\n\n    componentDidMount() {\n\n        //  chaos.js:  Michael Barnsley's chaos game\n        //  R. Renka\n        //  10/14/2016\n        //\n        //  The game is this:  given a triangle and a starting point p,\n        //  choose one of the three vertices at random, and move p half\n        //  way from its current position to the chosen vertex.  Render\n        //  the point, and repeat the procedure until no new pixels are\n        //  lit.  The image so generated represents a Sierpinski triangle.\n\n        // Get the rendering context for WebGL\n        const gl = getWebGLContext('webgl', [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        if (!gl) {\n            console.log(\"Failed to get the rendering context for WebGL.\");\n            return;\n        }\n\n        const program = gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program in chaos.tsx'\n        }\n\n        // Get the index of a_Position\n        const a_Position = gl.getAttribLocation(program, 'a_Position');\n\n        if (a_Position < 0) {\n            console.log(\"Failed to get the storage location of a_Position.\");\n            return;\n        }\n\n        // Get the storage location of u_FragColor\n        const u_FragColor = gl.getUniformLocation(program, 'u_FragColor');\n\n        if (!u_FragColor) {\n            console.log('Failed to get the storage location of u_FragColor');\n            return;\n        }\n\n        // Specify the color for clearing <canvas>\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\n        // Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Create the image in a triangle with vertices (vx,vy) in the\n        // clip coordinate space [-1,1] X [-1,1].\n\n        let i, j, n;\n\n        const vx = [0.0, -0.5, 0.5];    // vertex positions\n\n        const vy = [0.5, -0.5, -0.5];\n\n        const c = [[1.0, 0.0, 0.0],     // vertex colors\n            [0.0, 1.0, 0.0],\n            [0.0, 0.0, 1.0]];\n\n        let px = 0;                    // coordinates of initial point p\n\n        let py = 0;\n\n        n = 40000;                     // number of points p\n\n        for (i = 0; i < n; i++) {\n\n            j = Math.floor(3.0 * Math.random());\n\n            px = 0.5 * (px + vx[j]);\n\n            py = 0.5 * (py + vy[j]);\n\n            // Pass the position of a point to a_Position variable\n            gl.vertexAttrib3f(a_Position, px, py, 0.0);\n\n            // Pass the color of a point to u_FragColor variable\n            gl.uniform4f(u_FragColor, c[j][0], c[j][1], c[j][2], 1.0);\n\n            // Draw\n            gl.drawArrays(gl.POINTS, 0, 1);\n        }\n\n    }\n\n    render() {\n\n        return (\n            <>\n                \n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\nimport {getWebGLContext, iWebGLRenderingContext} from \"../assets/js/cuon-utils\";\nimport { Matrix4 } from \"assets/js/cuon-matrix\";\n\n\n//  R. Miles ;)\n//\n//  pendulum2.js:  2D pendulum\n//  R. Renka\n//  07/25/2016\n//  This program displays a hexagonal pendulum bob attached by a wire\n//  to an anchor point at the origin and rotating with an angular\n//  velocity that may be increased or decreased by button presses.\n//\n//  The pendulum bob is rendered as a triangle fan.  The wire is a\n//  line segment, and the anchor point is a small square.\n//\n//  This code was adapted from RotatingTriangle_withButtons.js in\n//  matsuda/ch04.\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class Pendulum2 extends Component<{}, { }> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE = `\n        //\n        // Vertex shader program (GLSL code) in the form of a script\n        //\n        attribute vec4 a_Position;\n        uniform float u_PointSize;\n        uniform mat4 u_ModelMatrix;\n        void main() {\n            gl_PointSize = u_PointSize;\n            gl_Position = u_ModelMatrix * a_Position;\n        }\n    `;\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE = `\n        //\n        // Fragment shader program\n        //\n        precision mediump float;\n        uniform vec4 u_FragColor;\n        void main() {\n            gl_FragColor = u_FragColor;\n        }\n    `;\n\n    //  Global variables:\n    //\n    //  asize = anchor width and height\n    //  currentAngle = angle defining current configuration\n    //  da = angular velocity in degrees/second\n    //  pause = true iff animation is inactive\n    //  radius = radius of pendulum bob\n    //  restart = true iff animation was paused and restarted since the\n    //            previous update\n    //  tick = rendering function defined in main\n    //  Lmin, Lmax = Minimum and maximum wire lengths\n    asize = 0.03;\n    ca = 0.0;\n    currentAngle = 0.0;\n    da = 45.0;\n    Lmin = 0.10;\n    Lmax = 0.80;\n    pause = false;\n    radius = 0.10;\n    restart = false;\n\n    a_Position : number = -1;\n\n    gl: iWebGLRenderingContext | null = null;\n\n    u_FragColor: WebGLUniformLocation | null = null;\n\n    u_ModelMatrix: WebGLUniformLocation | null = null;\n\n    //  Model matrix\n    modelMatrix : Matrix4 = new Matrix4(undefined);\n\n    componentDidMount() {\n        //  Get the rendering context for WebGL\n        this.gl = getWebGLContext(\"webgl\", [{\n            vertexShader: this.VSHADER_SOURCE,\n            fragmentShader: this.FSHADER_SOURCE\n        }]);\n\n        //  Specify the color for clearing <canvas>\n        this.gl.clearColor(0, 0, 0, 1);\n\n        //  Write the positions of vertices to the vertex shader\n        if (!this.initVertexBuffers(this.gl)) {\n            console.log(\"Failed to set the positions of the vertices\");\n            return;\n        }\n\n        const program = this.gl?.program?.value;\n\n        if (program === undefined) {\n            throw 'Failed to capture program in pend'\n        }\n\n        //  Get the storage locations of attribute and uniform variables\n        this.a_Position = this.gl.getAttribLocation(program, \"a_Position\");\n\n        this.u_FragColor = this.gl.getUniformLocation(program, \"u_FragColor\");\n\n        this.u_ModelMatrix = this.gl.getUniformLocation(program, \"u_ModelMatrix\");\n\n        if (this.a_Position < 0 || !this.u_FragColor || !this.u_ModelMatrix) {\n            console.log(\"Failed to get the storage location of an attribute \" +\n                \"or uniform variable\");\n            return;\n        }\n\n        //  Specify the color for clearing <canvas>\n        this.gl.clearColor(0, 0, 0, 1);\n\n        //  Start drawing\n        this.tick();\n        // end of main\n\n    }\n\n    tick = () => {\n\n        //  Update the rotation angle, and draw the pendulum.\n        if (this.pause) {\n\n            this.ca = this.currentAngle;\n\n            return;\n\n        }\n\n        if (!this.restart) {\n\n            this.currentAngle = this.animate(this.currentAngle);\n\n        } else {\n\n            this.currentAngle = this.ca;\n\n            this.g_last = Date.now();\n\n            this.restart = false;\n\n        }\n\n        this.draw(\n            this.gl,\n            this.currentAngle,\n            this.a_Position,\n            this.modelMatrix,\n            this.u_ModelMatrix,\n            this.u_FragColor);\n\n        //  Request that the browser call tick\n        requestAnimationFrame(this.tick);\n\n    };\n\n\n    //  Global variables:  buffer objects\n    g_bobBuffer : WebGLBuffer | null = null;\n    g_wireBuffer : WebGLBuffer | null = null;\n    g_anchorBuffer : WebGLBuffer | null = null;\n\n    /******************************************************************************/\n    initVertexBuffers = (gl : iWebGLRenderingContext) => {\n\n//  Compute vertices defining a hexagonal pendulum bob\n\n        const r = this.radius;                      // radius of hexagonal bob\n        const xp = 0.5 * r;                    // r*cos(pi/6)\n        const yp = (Math.sqrt(3.0) / 2.0) * r;   // r*sin(pi/6)\n        let vertices = new Float32Array([\n            0.0, 0.0, r, 0.0, xp, yp, -xp, yp, -r, 0.0,\n            -xp, -yp, xp, -yp, r, 0.0\n        ]);\n\n        //  Create buffer objects\n        this.g_bobBuffer = gl.createBuffer();\n        this.g_wireBuffer = gl.createBuffer();\n        this.g_anchorBuffer = gl.createBuffer();\n\n        if (!this.g_bobBuffer || !this.g_wireBuffer || !this.g_anchorBuffer) {\n            console.log(\"Failed to create a buffer object\");\n            return -1;\n        }\n\n        //  Set the number of vertices property nv, bind the buffer objects\n        //  to targets, and write the data for the bob and anchor.  The wire\n        //  is altered by draw.\n\n        // @ts-ignore\n        this.g_bobBuffer.nv = 8;\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.g_bobBuffer);\n\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        vertices = new Float32Array([-this.asize / 2.0, -this.asize / 2.0,\n            this.asize / 2.0, -this.asize / 2.0,\n            this.asize / 2.0, this.asize / 2.0,\n            -this.asize / 2.0, this.asize / 2.0]);\n\n        // @ts-ignore\n        this.g_anchorBuffer.nv = 4;\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.g_anchorBuffer);\n\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        return true;\n    } // end of initVertexBuffers\n\n\n    /******************************************************************************/\n    draw = (gl, currentAngle, a_Position, modelMatrix, u_ModelMatrix,\n         u_FragColor) => {\n\n        //  Clear <canvas>\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        //  Define the wire length as a function of currentAngle.\n        let wireLength = (this.Lmax - this.Lmin) / 180.0;\n        if (currentAngle <= 180.0) {\n            wireLength = this.Lmin + wireLength * currentAngle;\n        } else {\n            wireLength = this.Lmax - wireLength * (currentAngle - 180.0);\n        }\n\n//  Process the pendulum bob\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.g_bobBuffer);\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n        gl.enableVertexAttribArray(a_Position);\n\n//  Set the model matrix for the pendulum bob\n\n        modelMatrix.setRotate(currentAngle, 0, 0, 1);\n        modelMatrix.translate(0.0, -wireLength, 0.0);\n\n//  Pass the model matrix to the vertex shader\n\n        gl.uniformMatrix4fv(u_ModelMatrix, false, modelMatrix.elements);\n\n//  Set the fragment color.\n\n        gl.uniform4f(u_FragColor, 0.0, 0.0, 1.0, 1.0);\n\n//  Draw the pendulum bob\n\n        // @ts-ignore\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, this.g_bobBuffer.nv);\n\n        //  Process the pendulum wire\n        const vertices = new Float32Array([\n            0.0, 0.0, 0.0, Math.sqrt(3.0) * this.radius / 2.0 - wireLength]);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.g_wireBuffer);\n\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        //  Set the model matrix for the pendulum wire\n        modelMatrix.setRotate(currentAngle, 0, 0, 1);\n\n        //  Pass the model matrix to the vertex shader\n        gl.uniformMatrix4fv(u_ModelMatrix, false, modelMatrix.elements);\n\n        //  Set the fragment color.\n        gl.uniform4f(u_FragColor, 1.0, 0.0, 0.0, 1.0);\n\n        //  Draw the pendulum wire\n        gl.drawArrays(gl.LINES, 0, 2);\n\n        //  Process the pendulum anchor\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.g_anchorBuffer);\n\n        gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n        //  Set the model matrix for the pendulum anchor\n        modelMatrix.setIdentity();\n\n        //  Pass the model matrix to the vertex shader\n        gl.uniformMatrix4fv(u_ModelMatrix, false, modelMatrix.elements);\n\n        //  Set the fragment color.\n        gl.uniform4f(u_FragColor, 0.0, 1.0, 0.0, 1.0);\n\n        //  Draw the pendulum anchor\n        // @ts-ignore\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, this.g_anchorBuffer.nv);\n    } // end of draw\n\n\n    //  Global variable:  g_last = last time that animate was called\n    g_last = Date.now();\n\n    /******************************************************************************/\n    animate = (angle) => {\n\n        //  Calculate the elapsed time (in milliseconds)\n        const now = Date.now();\n        const elapsed = now - this.g_last;\n        this.g_last = now;\n\n        //  Update the current rotation angle\n        let newAngle = angle + (this.da * elapsed) / 1000.0;\n        newAngle %= 360;\n        if (newAngle < 0) {\n            newAngle += 360;\n        }\n        return newAngle;\n    } // end of animate\n\n\n//  Button functions\n\n    /******************************************************************************/\n    down = () => {\n        if (this.da > 0) {\n            this.da = Math.max(this.da - 15.0, 5.0);\n        } else {\n            this.da = Math.min(this.da + 15.0, -5.0);\n        }\n    }\n\n\n    /******************************************************************************/\n    up = () => {\n        if (this.da > 0) {\n            this.da += 15.0;\n        } else {\n            this.da -= 15.0;\n        }\n    }\n\n\n    /******************************************************************************/\n    stop = () => {\n        this.pause = true;\n    }\n\n\n    /******************************************************************************/\n    resume = () => {\n        if (!this.pause) {\n            return;\n        }\n        this.pause = false;\n        this.restart = true;\n        this.tick();\n    }\n\n\n    /******************************************************************************/\n    reverse = () => {\n        this.da = -this.da;\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight - 40}/>\n                <p>\n                    <button type=\"button\" onClick={this.up}>Speed-up</button>\n                    <button type=\"button\" onClick={this.down}>Slow down</button>\n                    <button type=\"button\" onClick={this.stop}>Pause</button>\n                    <button type=\"button\" onClick={this.resume}>Resume</button>\n                    <button type=\"button\" onClick={this.reverse}>Reverse direction</button>\n                </p>\n            </div>\n        );\n    }\n\n}\n\n","import React, {Component} from \"react\";\nimport {getWebGLContext, iWebGLRenderingContext} from \"../assets/js/cuon-utils\";\nimport { Matrix4 } from \"assets/js/cuon-matrix\";\nimport { Orientation } from \"Orientation\";\n\n//  bezier.js:  Bezier curve drawing\n//  R. Renka\n//  12/05/2016\n//\n//  This program constructs a two-segment G^1 piecewise cubic Bezier\n//  space curve.  Control points P0, P1, ..., P6 may be dragged in the\n//  projection plane (with the left mouse button), but P2, P3, and P4\n//  are forced to remain collinear in order to retain continuity of the\n//  tangent vector.  Keypresses allow rotation and zoom in or out.\n// @link https://sites.google.com/site/webglbook/home/chapter-3\nexport default class Bezier extends Component<any, any> {\n    constructor(props) {\n        super(props);\n        // we use this to make the card to appear after the page has been rendered\n        this.state = {};\n    }\n\n\n    // ColoredPoint.js (c) 2012 matsuda\n    // Vertex shader program\n    // language=GLSL\n    VSHADER_SOURCE = `\n        //\n        //  Vertex shader program (GLSL code)\n        //\n        //  a_Position = vertex position in world coordinates\n        //  u_MvpMatrix = Modelview-projection matrix\n\n        attribute vec3 a_Position;\n\n        uniform mat4 u_MvpMatrix;\n\n        void main(void) {\n\n            //  gl_Position = vertex position in clip coordinates\n\n            gl_Position = u_MvpMatrix * vec4(a_Position, 1.0);\n            gl_PointSize = 7.0;\n        }\n    `;\n\n    // Fragment shader program\n    // language=GLSL\n    FSHADER_SOURCE = `\n        //\n        // Fragment shader program\n        //\n        #ifdef GL_ES\n        precision mediump float;\n        #endif\n\n        uniform vec4 u_Color;\n\n        void main() {\n            gl_FragColor = u_Color;\n        }\n    `;\n\n    cp3 : Array<any> = [];\n\n    cpts = [[-6, -6, 0], [-4, 6, 0], [-2, -6, 0], [0, 0, 0],\n        [2, 6, 0], [4, -6, 0], [6, 6, 0]];\n\n    icp : number = -1;\n\n    gl?: iWebGLRenderingContext;\n\n    mvpi;\n    nseg = 30;\n\n    orient_curve : Orientation = new Orientation(0.0, [1.0, 0.0, 0.0]);\n\n    prg;\n\n    psize : number = 8;\n\n    radius : number = 0;\n\n    vsf : number = 1.2;\n\n    xv : Array<any> = [];\n\n    yv : Array<any> = [];\n\n    zv : Array<any> = [];\n\n    componentDidMount() {\n\n        //  Global variables:\n        //\n        //  cp3 = Saved initial value of P3 used to move P2 and P4 in parallel\n        //        with P3 when P3 is dragged\n        //  cpts = Control points [x,y,z]\n        //  icp = Index (0 to 6) of the currently selected control point (being\n        //        dragged with the mouse) or -1 if none selected\n        //  gl = webGL context\n        //  mvpi = Inverse of the modelview-projection matrix\n        //  nseg = Number of segments in the polygonal approximation (piecewise \n        //         linear interpolant) of each Bezier curve segment\n        //  orient_curve = Curve orientation (angle/axis pair)\n        //  prg = gl.program\n        //  psize = Point size (in pixels) for mouse selection of a control point\n        //  radius = Radius of an axis-aligned bounding box\n        //  vsf = Scale factor for radius of bounding box, used to zoom in or out\n        //  xv,yv,zv = Viewport coordinates and depths of control points computed\n        //             in draw for current modelview matrix:  [0,w] X [0,h] \n        //             X [-1,1] for canvas dimensions w by h\n        /******************************************************************************/\n\n        const canvasId = \"webgl\"\n\n        //  Get the rendering context for WebGL\n        this.gl = getWebGLContext(canvasId, [{\n                vertexShader: this.VSHADER_SOURCE,\n                fragmentShader: this.FSHADER_SOURCE\n            }]);\n\n        //  Specify the color for clearing <canvas> (background color)\n        this.gl.clearColor(0, 0, 0, 1);\n\n        //  Get the storage locations of attribute and uniform variables\n        this.prg = this.gl.program?.value;\n\n        this.prg.a_Position = this.gl.getAttribLocation(this.prg, 'a_Position');\n\n        this.prg.u_MvpMatrix = this.gl.getUniformLocation(this.prg, 'u_MvpMatrix');\n\n        this.prg.u_Color = this.gl.getUniformLocation(this.prg, 'u_Color');\n\n        if (this.prg.a_Position < 0 || !this.prg.u_MvpMatrix || !this.prg.u_Color) {\n\n            console.log('Failed to get the storage location of attribute ' +\n                'or uniform variable');\n\n            return;\n\n        }\n\n        //  Register event handlers\n        document.onkeydown =  (ev) => {\n            this.keydown(ev);\n        };\n\n        const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n        this.initMouseEvents(canvas);\n\n        //  Draw the initial curve\n        this.draw();\n\n    }\n\n\n    /******************************************************************************/\n    computePoints(nseg : number, cpts) {\n\n        //  Use recursive deCasteljau to evaluate a two-segment degree-3\n        //  Bezier curve on nseg+1 uniformly distributed parameter values t in\n        //  [0,1] for each segment, returning array points with 2*nseg+1 [x,y,z]\n        //  triples.  The array cpts of control points [x,y,z] must have length 7.\n\n        const cpt1 = [cpts[0], cpts[1], cpts[2], cpts[3]];\n\n        const cpt2 = [cpts[3], cpts[4], cpts[5], cpts[6]];\n\n        let points : Array<number> = [];\n\n        let t;\n\n        for (let i = 0; i <= nseg; i++) {\n\n            t = i / nseg;\n\n            points[i] = this.deCasteljau(cpt1, 3, 0, t);\n\n        }\n\n        for (let i = 1; i <= nseg; i++) {\n\n            t = i / nseg;\n\n            points[nseg + i] = this.deCasteljau(cpt2, 3, 0, t);\n\n        }\n\n        return points;\n\n    }\n\n\n    /******************************************************************************/\n    // recursive functions have extra cost not normally associated in javascript\n    // @link https://stackoverflow.com/questions/37224520/are-functions-in-javascript-tail-call-optimized\n    deCasteljau(cpts, r, i, t) {\n        //  Recursive for evaluation of a degree-n Bezier space curve C.\n        //  cpts = Array of length n+1 containing control points [x,y,z]\n        //  r = index in the range 1 to n (n in the external call)\n        //  i = index in the range 0 to n-r (0 in the external call)\n        //  t = evaluation point in [0,1]\n        //  return value = point C(t) = [x,y,z] on the curve\n        if (r === 0) {\n\n            return cpts[i];\n\n        }\n\n        const p1 = this.deCasteljau(cpts, r - 1, i, t);\n\n        const p2 = this.deCasteljau(cpts, r - 1, i + 1, t);\n\n        return [(1 - t) * p1[0] + t * p2[0], (1 - t) * p1[1] + t * p2[1],\n            (1 - t) * p1[2] + t * p2[2]];\n\n    }\n\n\n    /******************************************************************************/\n    draw() {\n\n        if (undefined === this.gl) {\n            return ;// this is for Typescript\n        }\n\n        //  Resize the canvas if necessary, and clear the color buffers\n        this.resize(this.gl);\n\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n        let r = this.radius;\n\n        if (this.icp < 0) {\n\n            //  Compute the radius r of an axis-aligned bounding box containing the\n            //  control points, and store global variable radius\n            r = 0;\n\n            for (var i = 0; i < 7; i++) {\n\n                r = Math.max(r, Math.abs(this.cpts[i][0]), Math.abs(this.cpts[i][1]),\n                    Math.abs(this.cpts[i][2]));\n\n            }\n\n            r = 1.25 * r;\n\n            this.radius = r;\n\n            //  Construct the projection matrix\n            const projMatrix = new Matrix4(undefined);\n\n            projMatrix.setOrtho(-this.vsf * r, this.vsf * r, -this.vsf * r, this.vsf * r, 0, 5.0 * r);\n\n            //  Construct the modelview matrix\n            const mvMatrix = new Matrix4(undefined);\n\n            mvMatrix.setTranslate(0.0, 0.0, -3.0 * r);\n\n            mvMatrix.rotate(this.orient_curve.angle, this.orient_curve.axis[0],\n                this.orient_curve.axis[1], this.orient_curve.axis[2]);\n\n            //  Construct the modelview-projection matrix mvp and its inverse\n            //  (global variables mvpi), and copy mvp to the shader location\n            const mvpMatrix = new Matrix4(undefined);\n\n            mvpMatrix.set(projMatrix);\n\n            mvpMatrix.multiply(mvMatrix);\n\n            const mvp = mvpMatrix.elements;\n\n            this.gl.uniformMatrix4fv(this.prg.u_MvpMatrix, false, mvp);\n\n            const mvpiMatrix = new Matrix4(undefined);\n\n            mvpiMatrix.setInverseOf(mvpMatrix);\n\n            this.mvpi = mvpiMatrix.elements;\n\n            //  Transform the control points to clip coordinates (normalized device\n            //  coordinates) (xv,yv,zv) in [-1,1]^3, and transform (xv,yv) to viewport\n            //  coordinates [0,w] X [0,h] for canvas dimensions w and h.\n\n            for (i = 0; i < 7; i++) {\n\n                this.xv[i] = mvp[0] * this.cpts[i][0] + mvp[4] * this.cpts[i][1] +\n                    mvp[8] * this.cpts[i][2] + mvp[12];\n\n                this.yv[i] = mvp[1] * this.cpts[i][0] + mvp[5] * this.cpts[i][1] +\n                    mvp[9] * this.cpts[i][2] + mvp[13];\n\n                this.zv[i] = mvp[2] * this.cpts[i][0] + mvp[6] * this.cpts[i][1] +\n                    mvp[10] * this.cpts[i][2] + mvp[14];\n\n                this.xv[i] = (this.gl.canvas.width / 2) * (this.xv[i] + 1);\n\n                this.yv[i] = (this.gl.canvas.height / 2) * (this.yv[i] + 1);\n\n            }\n\n        }\n\n        //  Create buffer objects for the control points, the curve, and the\n        //  bounding box\n        const cptsBuffer = this.gl.createBuffer();\n\n        const pointsBuffer = this.gl.createBuffer();\n\n        const boxBuffer = this.gl.createBuffer();\n\n        if (!cptsBuffer || !pointsBuffer || !boxBuffer) {\n            console.log('Failed to create a buffer object');\n            return -1;\n        }\n\n        //  *** Control points:  bind cptsBuffer to the target associated with vertex\n        //                       attributes, write the data to the buffer, and assign\n        //                       the buffer object to a_Position\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, cptsBuffer);\n\n        let vertices = new Float32Array(21);\n\n        for (i = 0; i < 7; i++) {\n\n            vertices[3 * i] = this.cpts[i][0];\n\n            vertices[3 * i + 1] = this.cpts[i][1];\n\n            vertices[3 * i + 2] = this.cpts[i][2];\n\n        }\n\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertices, this.gl.STATIC_DRAW);\n\n        if (undefined === this?.gl?.program?.value) {\n\n            throw 'Failed; saw condition undefined === this?.gl?.program?.value (search me in code)';\n\n        }\n\n        const a_Position = this.gl.getAttribLocation(this.gl.program.value, 'a_Position');\n\n        if (a_Position < 0) {\n\n            console.log('Failed to get the storage location of a_Position');\n\n            return -1;\n\n        }\n\n        this.gl.vertexAttribPointer(a_Position, 3, this.gl.FLOAT, false, 0, 0);\n\n        this.gl.enableVertexAttribArray(a_Position);\n\n\n        //  Set the uniform variable defining the color, and render the\n        //  control points\n        this.gl.uniform4f(this.prg.u_Color, 1, 0, 0, 1);\n        this.gl.drawArrays(this.gl.POINTS, 0, 4);\n\n        this.gl.uniform4f(this.prg.u_Color, 0, 0, 1, 1);\n        this.gl.drawArrays(this.gl.POINTS, 4, 3);\n\n        //  *** Curve:  Compute an array of 2*nseg+1 points on the curve\n\n        const points = this.computePoints(this.nseg, this.cpts);\n\n        //  Bind pointsBuffer to the target associated with vertex attributes,\n        //  write the data to the buffer, and assign the buffer object to a_Position\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, pointsBuffer);\n\n        vertices = new Float32Array(6 * this.nseg + 3);\n\n        for (i = 0; i < 2 * this.nseg + 1; i++) {\n\n            vertices[3 * i] = points[i][0];\n\n            vertices[3 * i + 1] = points[i][1];\n\n            vertices[3 * i + 2] = points[i][2];\n\n        }\n\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertices, this.gl.STATIC_DRAW);\n\n        this.gl.vertexAttribPointer(a_Position, 3, this.gl.FLOAT, false, 0, 0);\n\n        //  Set the uniform variable defining the color, and draw the curve\n        this.gl.lineWidth(2.0);\n        this.gl.uniform4f(this.prg.u_Color, 1, 0, 0, 1);\n        this.gl.drawArrays(this.gl.LINE_STRIP, 0, this.nseg + 1);\n\n        this.gl.uniform4f(this.prg.u_Color, 0, 0, 1, 1);\n        this.gl.drawArrays(this.gl.LINE_STRIP, this.nseg, this.nseg + 1);\n\n        // *** Bounding box\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, boxBuffer);\n\n        // Create a cube\n        //    v6----- v5\n        //   /|      /|\n        //  v1------v0|\n        //  | |     | |\n        //  | |v7---|-|v4\n        //  |/      |/\n        //  v2------v3\n        vertices = new Float32Array([\n            r, r, r, -r, r, r, -r, -r, r, r, -r, r,  // v0-v1, v2-v3\n            r, -r, -r, -r, -r, -r, r, r, -r, -r, r, -r,  // v4-v7, v5-v6\n            r, r, r, r, -r, r, -r, r, r, -r, -r, r,  // v0-v3, v1-v2\n            r, -r, -r, r, r, -r, -r, r, -r, -r, -r, -r,  // v4-v5, v6-v7\n            r, r, r, r, r, -r, -r, r, r, -r, r, -r,  // v0-v5, v1-v6\n            -r, -r, r, -r, -r, -r, r, -r, r, r, -r, -r   // v2-v7, v3-v4\n        ]);\n\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertices, this.gl.STATIC_DRAW);\n\n        this.gl.vertexAttribPointer(a_Position, 3, this.gl.FLOAT, false, 0, 0);\n\n        //  Set the uniform variables defining the color\n        this.gl.uniform4f(this.prg.u_Color, 0.5, 0.5, 0.5, 1);\n\n        //  Draw the wireframe box as line segments\n        this.gl.lineWidth(1.0);\n\n        this.gl.drawArrays(this.gl.LINES, 0, 24);\n\n        return 0;\n    }\n\n\n    /******************************************************************************/\n    initMouseEvents(canvas : HTMLCanvasElement) {\n\n        //  Register event handlers for mouse button press, mouse motion, and\n        //  mouse button release\n\n        //  Global variable icp >= 0 iff a mouse button has been pressed with\n        //  the mouse position on control point icp (0 to 6)\n        let xc, yc, zc;\n\n        canvas.onmousedown = (event : MouseEvent) => {\n\n            let x = event.clientX, y = event.clientY;\n\n            const target = event.target as HTMLElement;\n\n            const rect = target.getBoundingClientRect();\n\n            //  Convert the mouse coordinates from the client rectangle to the\n            //  viewport\n            x = (x - rect.left) * canvas.width / (rect.right - rect.left);\n\n            y = (y - rect.top) * canvas.height / (rect.bottom - rect.top);\n\n            y = canvas.height - y;\n\n            this.icp = -1;\n\n            for (let i = 0; i < 7; i++) {\n                if (Math.abs(x - this.xv[i]) <= this.psize / 2 &&\n\n                    Math.abs(y - this.yv[i]) <= this.psize / 2) {\n\n                    this.icp = i;\n\n                    break;\n\n                }\n\n            }\n\n            if (this.icp == 3) {\n                this.cp3[0] = this.cpts[3][0];\n                this.cp3[1] = this.cpts[3][1];\n                this.cp3[2] = this.cpts[3][2];\n            }\n        };\n\n        canvas.onmouseup = () => {\n            //  Move control points if necessary to maintain tangent continuity\n            if (this.icp == 2 || this.icp == 4) {\n                this.cpts[3][0] = (this.cpts[2][0] + this.cpts[4][0]) / 2;\n                this.cpts[3][1] = (this.cpts[2][1] + this.cpts[4][1]) / 2;\n                this.cpts[3][2] = (this.cpts[2][2] + this.cpts[4][2]) / 2;\n            } else if (this.icp == 3) {\n                this.cpts[2][0] = this.cpts[2][0] + this.cpts[3][0] - this.cp3[0];\n                this.cpts[2][1] = this.cpts[2][1] + this.cpts[3][1] - this.cp3[1];\n                this.cpts[2][2] = this.cpts[2][2] + this.cpts[3][2] - this.cp3[2];\n                this.cpts[4][0] = this.cpts[4][0] + this.cpts[3][0] - this.cp3[0];\n                this.cpts[4][1] = this.cpts[4][1] + this.cpts[3][1] - this.cp3[1];\n                this.cpts[4][2] = this.cpts[4][2] + this.cpts[3][2] - this.cp3[2];\n            }\n            this.icp = -1;\n            this.draw();\n        };\n\n        canvas.onmousemove = (event) => {\n            let x = event.clientX,\n                y = event.clientY;\n\n            const target = event.target as HTMLElement;\n\n            const rect = target.getBoundingClientRect();\n\n            x = (x - rect.left) * canvas.width / (rect.right - rect.left);\n\n            y = (y - rect.top) * canvas.height / (rect.bottom - rect.top);\n\n            if (this.icp >= 0) {\n\n                //  Compute clip coordinates (xc,yc,zc) of the mouse position,\n                //  and apply the inverse modelview-projection matrix to get\n                //  the new control point coordinates\n                xc = 2 * x / canvas.width - 1;\n\n                yc = 1 - 2 * y / canvas.height;\n\n                zc = this.zv[this.icp];\n\n                this.cpts[this.icp][0] = this.mvpi[0] * xc + this.mvpi[4] * yc + this.mvpi[8] * zc + this.mvpi[12];\n\n                this.cpts[this.icp][1] = this.mvpi[1] * xc + this.mvpi[5] * yc + this.mvpi[9] * zc + this.mvpi[13];\n\n                this.cpts[this.icp][2] = this.mvpi[2] * xc + this.mvpi[6] * yc + this.mvpi[10] * zc + this.mvpi[14];\n\n                //  Update the viewport coordinates\n                this.xv[this.icp] = x;\n\n                this.yv[this.icp] = canvas.height - y;\n\n                //  Display the altered curve\n                this.draw();\n            }\n        };\n    }\n\n\n    /******************************************************************************/\n    keydown(event) {\n\n        let ad2, cd, cfac, code, mstep, sd;\n        let q : number[] = [];\n        const r : Array<number> = [];\n\n        cfac = Math.PI / 180.0;  // Degrees to radians conversion factor\n        mstep = 3.0 * cfac;      // Increment for curve rotation angle\n\n        if (event.keyCode !== undefined) {\n            code = event.keyCode;\n        } else if (event.key !== undefined) {\n            code = event.key;\n        }\n\n        switch (code) {\n            case 37:                  // Left arrow:  y axis, increase\n                ad2 = mstep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = 5.0 * ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_curve.toQuaternion();\n\n                //  Compute r = p*q, where p is the unit quaternion equivalent of\n                //  angle mstep or 5*mstep and axis [0, 1, 0]\n                r[0] = cd * q[0] - sd * q[2];\n                r[1] = cd * q[1] + sd * q[3];\n                r[2] = cd * q[2] + sd * q[0];\n                r[3] = cd * q[3] - sd * q[1];\n\n                this.orient_curve.fromQuaternion(r);\n\n                this.draw();\n\n                break;\n\n            case 38:                  // Up arrow:  x axis, increase\n                ad2 = mstep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = 5.0 * ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_curve.toQuaternion();\n\n                //  Compute r = p*q, where p is the unit quaternion equivalent of\n                //  angle mstep or 5*mstep and axis [1, 0, 0]\n                r[0] = cd * q[0] - sd * q[1];\n                r[1] = cd * q[1] + sd * q[0];\n                r[2] = cd * q[2] - sd * q[3];\n                r[3] = cd * q[3] + sd * q[2];\n                this.orient_curve.fromQuaternion(r);\n                this.draw();\n                break;\n\n            case 39:                  // Right arrow:  y axis, decrease\n                ad2 = -mstep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = 5.0 * ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_curve.toQuaternion();\n\n                //  Compute r = p*q, where p is the unit quaternion equivalent of\n                //  angle -mstep or -5*mstep and axis [0, 1, 0]\n\n                r[0] = cd * q[0] - sd * q[2];\n                r[1] = cd * q[1] + sd * q[3];\n                r[2] = cd * q[2] + sd * q[0];\n                r[3] = cd * q[3] - sd * q[1];\n                this.orient_curve.fromQuaternion(r);\n                this.draw();\n                break;\n\n            case 40:                  // Down arrow:  x axis, decrease\n                ad2 = -mstep / 2.0;\n                if (event.shiftKey) {\n                    ad2 = 5.0 * ad2;\n                }\n                cd = Math.cos(ad2);\n                sd = Math.sin(ad2);\n                q = this.orient_curve.toQuaternion();\n\n                //  Compute r = p*q, where p is the unit quaternion equivalent of\n                //  angle -mstep or -5*mstep and axis [1, 0, 0]\n\n                r[0] = cd * q[0] - sd * q[1];\n                r[1] = cd * q[1] + sd * q[0];\n                r[2] = cd * q[2] - sd * q[3];\n                r[3] = cd * q[3] + sd * q[2];\n                this.orient_curve.fromQuaternion(r);\n                this.draw();\n                break;\n\n            case 82:                  // r:  Restore defaults\n                this.setDefaults();\n                break;\n\n            case 188:                 // <:  Zoom in\n                this.zoomIn();\n                break;\n\n            case 190:                 // >:  Zoom out\n                this.zoomOut();\n                break;\n\n            default:\n                return;\n        }\n    }\n\n    /******************************************************************************/\n    resize(gl) {\n\n        // Get the canvas from the WebGL context\n\n        const canvas = gl.canvas;\n\n        // Lookup the size the browser is displaying the canvas.\n        const displayWidth = canvas.clientWidth;\n\n        const displayHeight = canvas.clientHeight;\n\n        // Check if the canvas is not the same size.\n        if (canvas.width != displayWidth ||\n            canvas.height != displayHeight) {\n\n            // Make the canvas the same size\n            canvas.width = displayWidth;\n\n            canvas.height = displayHeight;\n\n            // Set the viewport to match\n            gl.viewport(0, 0, canvas.width, canvas.height);\n        }\n    }\n\n\n    /******************************************************************************/\n    setDefaults() {\n\n        //  Set default values\n        this.cpts = [[-6, -6, 0], [-4, 6, 0], [-2, -6, 0], [0, 0, 0],\n            [2, 6, 0], [4, -6, 0], [6, 6, 0]];\n\n        this.orient_curve.angle = 0.0;\n\n        this.orient_curve.axis = [1.0, 0.0, 0.0];\n\n        this.vsf = 1.2;\n\n        this.draw();\n\n    }\n\n\n    /******************************************************************************/\n    zoomIn() {\n        this.vsf *= 0.8;\n        this.draw();\n    }\n\n\n    /******************************************************************************/\n    zoomOut() {\n        this.vsf *= 1.2;\n        this.draw();\n    }\n\n    render() {\n\n        return (\n            <div>\n                <canvas id={\"webgl\"} width={window.innerWidth} height={window.innerHeight}/>\n            </div>\n        );\n    }\n\n}\n\n","import React, {Component} from 'react';\n\nimport {AxiosInstance} from \"axios\";\n\n// This is our ajax class\nimport OrbDefence from \"./examples/OrbDefence\";\nimport ClickedPoints from \"./examples/ClickedPoints\";\nimport ExampleList from \"./examples/ExampleList\";\nimport ColoredPoints from \"./examples/ColoredPoints\";\nimport MultiPoint from \"./examples/MultiPoint\";\nimport HelloTriangle from \"./examples/HelloTriangle\";\nimport HelloTriangleLines from \"./examples/HelloTriangleLines\";\nimport HelloTriangleStrip from \"./examples/HelloTriangleStrip\";\nimport HelloTriangleLoop from \"./examples/HelloTriangleLoop\";\nimport HelloQuad from \"./examples/HelloQuad\";\nimport HelloQuadFan from \"./examples/HelloQuadFan\";\nimport RotatedTriangle from \"./examples/RotatedTriangle\";\nimport RotatedTriangleMatrix from \"./examples/RotatedTriangleMatrix\";\nimport ScaledTriangleMatrix from \"./examples/ScaledTriangleMatrix\";\nimport RotatedTranslatedTriangle from \"./examples/RotatedTranslatedTriangle\";\nimport RotatingTriangle from \"./examples/RotatingTriangle\";\nimport AudioThreeJS from \"./examples/AudioThreeJS\";\nimport Hud from \"./examples/Hud\";\nimport PickFace from \"./examples/PickFace\";\nimport RotateObjectWithMouse from \"./examples/RotateObjectWithMouse\";\n// import JameshFisher from \"./examples/GameOfLife/JameshFisher\";\nimport Chaos from \"./examples/Chaos\";\nimport Pendulum2 from \"./examples/Pendulum2\";\nimport Bezier from \"./examples/Bezier\";\n\n\n\nexport interface iCustomRoute {\n    component?: any,\n    name?: string,\n    path: string,\n    pathTo?: string,\n    redirect?: boolean\n}\n\nexport default class WebGl extends Component<{ axios: AxiosInstance,\n    authenticate: string,\n    isAppLocal?: boolean,\n    authenticated?: boolean,\n    alert?: boolean,\n    operationActive: boolean,\n    isLoaded: boolean,\n    darkMode: boolean,\n    alertsWaiting: Array<any>,\n    versions: Array<any>,\n    id: string\n    subRoutingSwitch: Function\n}, {\n\n}> {\n    constructor(props) {\n\n        super(props);\n\n    }\n\n    render() {\n        console.log(\"LOGIN JSX RENDER\");\n\n\n        // Routes that belong to the public and private sector\n        let Routes : iCustomRoute[] = [\n            {\n                path: \"/WebGl/Multi\",\n                name: \"Multi-Point\",\n                component: MultiPoint\n            },\n            {\n                path: \"/WebGl/ClickedPoints\",\n                name: \"Clicked Points\",\n                component: ClickedPoints\n            },\n            {\n                path: \"/WebGl/Colored\",\n                name: \"Colored Points\",\n                component: ColoredPoints\n            },{\n                path: \"/WebGl/HelloTriangle\",\n                name: \"HelloTriangle\",\n                component: HelloTriangle\n            },{\n                path: \"/WebGl/HelloTriangleLines\",\n                name: \"HelloTriangleLines\",\n                component: HelloTriangleLines\n            },{\n                path: \"/WebGl/HelloTriangleStrip\",\n                name: \"HelloTriangleStrip\",\n                component: HelloTriangleStrip\n            },{\n                path: \"/WebGl/HelloTriangleLoop\",\n                name: \"HelloTriangleLoop\",\n                component: HelloTriangleLoop\n            },{\n                path: \"/WebGl/HelloQuad\",\n                name: \"HelloQuad\",\n                component: HelloQuad\n            },{\n                path: \"/WebGl/HelloQuadFan\",\n                name: \"HelloQuadFan\",\n                component: HelloQuadFan\n            },{\n                path: \"/WebGl/RotatedTriangle\",\n                name: \"RotatedTriangle\",\n                component: RotatedTriangle\n            },{\n                path: \"/WebGl/RotatedTriangleMatrix\",\n                name: \"RotatedTriangleMatrix\",\n                component: RotatedTriangleMatrix\n            },{\n                path: \"/WebGl/ScaledTriangleMatrix\",\n                name: \"ScaledTriangleMatrix\",\n                component: ScaledTriangleMatrix\n            },{\n                path: \"/WebGl/RotatedTranslatedTriangle\",\n                name: \"RotatedTranslatedTriangle\",\n                component: RotatedTranslatedTriangle\n            },{\n                path: \"/WebGl/RotatingTriangle\",\n                name: \"RotatingTriangle\",\n                component: RotatingTriangle\n            },{\n                path: \"/WebGl/Chaos\",\n                name: \"Chaos\",\n                component: Chaos\n            },{\n                path: \"/WebGl/Pendulum2\",\n                name: \"Pendulum2\",\n                component: Pendulum2\n            },{\n                path: \"/WebGl/Bezier\",\n                name: \"Bezier\",\n                component: Bezier\n            },{\n                path: \"/WebGl/PickFace\",\n                name: \"PickFace\",\n                component: PickFace\n            },{\n                path: \"/WebGl/RotateObjectWithMouse\",\n                name: \"RotateObjectWithMouse\",\n                component: RotateObjectWithMouse\n            },{\n                path: \"/WebGl/HUD\",\n                name: \"HUD\",\n                component: Hud\n            },/*{\n                path: \"/WebGl/GOL-JameshFisher\",\n                name: \"GOL-JameshFisher\",\n                component: JameshFisher\n            },*/{\n                path: \"/WebGl/AudioThreeJS\",\n                name: \"AudioThreeJS\",\n                component: AudioThreeJS\n            },\n            {\n                path: \"/WebGl/orb\",\n                name: \"Orb Defence\",\n                component: OrbDefence\n            },\n            {\n                path: \"/WebGl/ExampleList\",\n                name: \"Example List\",\n                component: ExampleList\n            },\n            {\n                path: \"/WebGl/\",\n                pathTo: \"/WebGl/ExampleList\",\n                redirect: true\n            }\n        ];\n\n\n        return <>\n            {this.props.subRoutingSwitch(Routes, {Routes})}\n            {alert}\n        </>;\n    }\n}\n","import React, {Component} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\n\nimport swal from '@sweetalert/with-react';\nimport Qs from \"qs\";\nimport axios, {AxiosInstance} from \"axios\";\nimport { setupCache } from 'axios-cache-adapter'\n\nimport PageNotFound from 'PageNotFound';\n// This is our ajax class\nimport {CodeBlock, dracula, googlecode} from 'react-code-blocks';\nimport WebGl from \"./WebGl\";\n\nexport interface iCustomRoute {\n    component?: any,\n    name?: string,\n    path: string,\n    pathTo?: string,\n    redirect?: boolean\n}\n\nclass bootstrap extends Component<any, {\n    axios: AxiosInstance,\n    authenticate: string,\n    isAppLocal?: boolean,\n    authenticated?: boolean,\n    alert?: boolean,\n    operationActive: boolean,\n    isLoaded: boolean,\n    darkMode: boolean,\n    alertsWaiting: Array<any>,\n    versions: Array<any>,\n    id: string\n}> {\n    constructor(props) {\n\n        super(props);\n\n        const cache = setupCache({\n            maxAge: 0\n        });\n\n        this.state = {\n            isAppLocal: '3000' === window.location.port,\n            axios: axios.create({\n                baseURL: '',\n                adapter: cache.adapter,\n                /**\n                 * These headers are important to use here at dig.\n                 * XMLHttpRequest - is a standard header all jquery ajax requests send by default. This allows our php side to return\n                 *                  nothing while running the get_header() and get_footer() functions with (bool) DropVariables::$ajax;\n                 *\n                 * application/json - is for the error catcher in php; this header will cause a JSON response instead of the default HTML\n                 */\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                    'Content-Type': 'application/json'\n                },\n\n                // `params` are the URL parameters to be sent with the request\n                // Must be a plain object or a URLSearchParams object\n                paramsSerializer: function(params) {\n                    // Nested get params [][][,,,] do not serialize correctly without Qs\n                    return Qs.stringify(params, { arrayFormat: 'indices', indices: true })\n                },\n                // `data` is the data to be sent as the request body\n                // Only applicable for request methods 'PUT', 'POST', and 'PATCH'\n                // When no `transformRequest` is set, must be of one of the following types:\n                // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n                // - Browser only: FormData, File, Blob\n                // - Node only: Stream, Buffer\n                data: {},\n                timeout: 10000,\n                withCredentials: false, // default\n                responseType: 'json', // default\n                onUploadProgress: function () { // progressEvent\n                    // Do whatever you want with the native progress event\n                },\n                onDownloadProgress: function () { // progressEvent\n                    // Do whatever you want with the native progress event\n                },\n                maxRedirects: 0, // default\n            }),\n            authenticate: '/carbon/authenticated',\n            alert: false,\n            operationActive: false,\n            isLoaded: false,\n            alertsWaiting: [],\n            darkMode: true,\n            versions: [],\n            id: ''\n        };\n\n        this.switchDarkAndLightTheme = this.switchDarkAndLightTheme.bind(this);\n        this.handleResponseCodes = this.handleResponseCodes.bind(this);\n        this.authenticate = this.authenticate.bind(this);\n        this.subRoutingSwitch = this.subRoutingSwitch.bind(this);\n        this.semaphoreLock = this.semaphoreLock.bind(this);\n        this.testRestfulPostPutDeleteResponse = this.testRestfulPostPutDeleteResponse.bind(this);\n        this.codeBlock = this.codeBlock.bind(this);\n    }\n\n    codeBlock = (markdown: String, highlight: String = \"\", language: String = \"php\", dark: boolean = true) => {\n        return <CodeBlock\n            text={markdown}\n            language={language}\n            showLineNumbers={true}\n            theme={dark ? dracula : googlecode}\n            highlight={highlight}\n        />\n    };\n\n    switchDarkAndLightTheme = () => {\n        this.setState({\n            darkMode: !this.state.darkMode\n        });\n    };\n\n    semaphoreLock = <T extends Component>(context ?: T): Function => {\n        return (callback: Function, localLock: boolean = false): Function => (opt ?: any): boolean => {\n\n            const criticalSection = async (): Promise<void> => {\n                console.time(\"Critical Section\");\n                try {\n                    if (context === undefined) {\n                        await callback(opt);\n                    } else {\n                        console.log('opActive: true');\n                        await context.setState({operationActive: true}, async () => {\n                            await callback(opt);\n                            console.log('opActive: false');\n                            context.setState({\n                                operationActive: false\n                            })\n                        })\n                    }\n                } finally {\n                    console.timeEnd(\"Critical Section\")\n                }\n                if (!localLock) {\n                    this.setState({\n                        operationActive: false\n                    })\n                }\n            };\n\n            const lockError = () => {\n                swal({\n                    text: 'An issue with out system has occurred.',\n                    buttons: {\n                        cancel: \"Close\",\n                    }\n                })\n            };\n\n            if (!this.state.operationActive) {\n                if (!localLock) {\n                    this.setState({operationActive: true},\n                        () => criticalSection().catch(lockError))\n                } else {\n                    criticalSection().catch(lockError)\n                }\n                return true;\n            }\n            return false;\n        }\n    };\n\n\n    changeLoggedInStatus = () => {\n        this.setState({authenticated: !this.state.authenticated});\n    };\n\n    startInputChangeUpdateRoutine(\n        shouldContinueAfterTimeout: () => boolean,\n        cb: () => void,\n        timeoutMs: number = 3000): () => void {\n\n        const timer = () => setTimeout(() => {\n\n            if (false === shouldContinueAfterTimeout()) {\n\n                return;\n\n            }\n\n            cb();\n\n        }, timeoutMs);\n\n        const timerId = timer();\n\n        return () => {\n            clearTimeout(timerId);\n        };\n\n    }\n\n    passPropertiesAndRender(PassComponent : React.ComponentType | React.FunctionComponent, props) {\n\n        console.log(PassComponent, props)\n\n        return <PassComponent\n            startInputChangeUpdateRoutine={this.startInputChangeUpdateRoutine}\n            changeLoggedInStatus={this.changeLoggedInStatus}\n            codeBlock={this.codeBlock}\n            semaphoreLock={this.semaphoreLock}\n            subRoutingSwitch={this.subRoutingSwitch}\n            switchDarkAndLightTheme={this.switchDarkAndLightTheme}\n            testRestfulPostPutDeleteResponse={this.testRestfulPostPutDeleteResponse}\n            {...this.state}\n            {...props} />\n\n    }\n\n    subRoutingSwitch = (route, rest) => {\n        if (rest === undefined) {\n            rest = [];\n        }\n        return <Switch>\n            {route.map((prop, key) => {\n                if (prop.redirect) {\n                    if (!prop.pathTo) {\n                        console.log('bad route redirect,', prop);\n                        return \"Bad redirect route passed to subRoutingSwitch\";\n                    }\n                    return <Redirect\n                        exact\n                        from={prop.path}\n                        to={prop.pathTo}\n                        key={key}/>;\n                }\n                if (prop.views) {\n                    return prop.views.map((x, key) => {\n                        return (\n                            <Route\n                                exact\n                                path={x.path}\n                                render={y => this.passPropertiesAndRender(x.component, {...x, ...rest, ...y})}\n                                key={key}/>\n                        );\n                    });\n                }\n                return <Route\n                    path={prop.path}\n                    render={props => this.passPropertiesAndRender(prop.component, {...prop, ...rest, ...props})}\n                    key={key}/>;\n            })}\n            <Route component={PageNotFound}/>\n        </Switch>\n    };\n\n    authenticate = () => {\n        this.setState({\n            isLoaded: true\n        });\n\n        /*this.state.axios.get(this.state.authenticate).then(res => {\n            console.log(\"authenticate data: \", res);\n            this.setState({\n                id: res?.data?.id || '',\n                authenticated: res?.data?.success || false,\n                versions: Object.values(res?.data?.versions || {}).sort((v1: any, v2: any) => {\n                    let lexicographical = false,\n                        zeroExtend = false,\n                        v1parts = v1.split('.'),\n                        v2parts = v2.split('.');\n\n                    function isValidPart(x) {\n                        return (lexicographical ? /^\\d+[A-Za-z]*$/ : /^\\d+$/).test(x);\n                    }\n\n                    if (!v1parts.every(isValidPart) || !v2parts.every(isValidPart)) {\n                        return NaN;\n                    }\n\n                    if (zeroExtend) {\n                        while (v1parts.length < v2parts.length) v1parts.push(\"0\");\n                        while (v2parts.length < v1parts.length) v2parts.push(\"0\");\n                    }\n\n                    if (!lexicographical) {\n                        v1parts = v1parts.map(Number);\n                        v2parts = v2parts.map(Number);\n                    }\n\n                    for (let i = 0; i < v1parts.length; ++i) {\n                        if (v2parts.length === i) {\n                            return 1;\n                        }\n\n                        if (v1parts[i] === v2parts[i]) {\n                            // noinspection UnnecessaryContinueJS - clarity call\n                            continue;\n                        } else if (v1parts[i] > v2parts[i]) {\n                            return 1;\n                        } else {\n                            return -1;\n                        }\n                    }\n\n                    if (v1parts.length !== v2parts.length) {\n                        return -1;\n                    }\n\n                    return 0;\n\n                }).reverse(),\n                isLoaded: true\n            });\n        });*/\n    };\n\n    testRestfulPostPutDeleteResponse = (response, success, error) => {\n        if (('data' in response) && ('rest' in response.data) &&\n            (('created' in response.data.rest) ||\n                ('updated' in response.data.rest) ||\n                ('deleted' in response.data.rest))\n        ) {\n            if (typeof success === 'function') {\n                return success(response);\n            }\n            if (success === null || typeof success === 'string') {\n                swal(\"Success!\", success, \"success\");\n            }\n\n            return response.data.rest?.created ?? response.data.rest?.updated ?? response.data.rest?.deleted ?? true;\n        }\n\n        if (typeof error === 'function') {\n            return error(response);\n        }\n\n        if (error === null || typeof error === 'string') {\n            swal(\"Whoops!\", error, \"error\");\n        }\n\n        return false;\n    };\n\n    handleResponseCodes = data => {\n        console.log(\"handleResponseCodes data\", data);\n\n        interface iAlert {\n            intercept?: boolean,\n            message?: string,\n            title?: string,\n            type?: string,\n        }\n\n        let handleAlert = (alert: iAlert): void => {\n\n            console.log(\"alert\", Object.assign({}, alert));\n\n            if (alert.intercept === false) {\n                return; // recursive ending condition\n            }\n\n            swal({\n                title: alert.title || 'Danger! You didn\\'t set a title in your react alert.',\n                text: alert.message || 'An alert was encountered, but no message could be parsed.',\n                icon: alert.type || 'error',\n            }).then(() => {\n                let alertsWaiting = this.state.alertsWaiting;\n                let nextAlert = alertsWaiting?.pop();\n                this.setState({\n                    alert: nextAlert !== undefined,\n                    alertsWaiting: alertsWaiting\n                }, () => nextAlert !== undefined && handleAlert(nextAlert));     // this is another means to end. note: doesn't hurt\n            });\n\n            //\n        };\n\n        if (data?.data?.alert) {\n            console.log(\"handleResponseCodes ∈ Bootstrap\");\n\n            let a: iAlert = data.data.alert, stack: Array<iAlert> = [];\n\n            // C6 Public Alerts\n\n            ['info', 'success', 'warning', 'danger'].map(value => {\n                if (value in a) {\n                    a[value].map(message => {\n                        stack.push({\n                            'intercept': true,    // for now lets intercept all\n                            'message': message,\n                            'title': value,\n                            'type': value,\n                        });\n                        return null;\n                    });\n                    console.log(\"stack\", Object.assign({}, stack));\n                }\n                return false; // free up memory through a map\n            });\n\n            if (stack.length === 0) {\n                return null;\n            }\n\n            if (this.state.alert === true) {\n                let alertsWaiting = this.state.alertsWaiting;\n                alertsWaiting.push(stack);\n                this.setState({\n                    alertsWaiting: alertsWaiting\n                });\n                return null;\n            }\n\n            let alert = stack.pop();\n\n            console.log(\"alert\", Object.assign({}, alert));\n\n            this.setState({\n                alert: true,\n                alertsWaiting: stack\n            });\n\n            if (undefined !== alert) {\n                handleAlert(alert);\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.state.axios.interceptors.request.use(req => {\n                if (req.method === 'get' && req?.url?.match(/^\\/rest\\/.*$/)) {\n                    req.params = JSON.stringify(req.params)\n                }\n                return req;\n            }, error => {\n                return Promise.reject(error);\n            }\n        );\n        this.state.axios.interceptors.response.use(\n            response => {\n                // Do something with response data\n                console.log(\n                    \"Every Axios response is logged in login.jsx :: \",\n                    response\n                );\n                if (response?.data?.alert) {\n                    console.log(\"alert ∈ response\");\n                    this.handleResponseCodes(response);\n                    return (response?.data?.alert?.error || response?.data?.alert?.danger) ?\n                        Promise.reject(response) :\n                        response;\n                }\n                return response;\n            },\n            error => {\n                /* Do something with response error\n                   this changes from project to project depending on how your server uses response codes.\n                   when you can control all errors universally from a single api, return Promise.reject(error);\n                   is the way to go.\n                */\n                this.handleResponseCodes(error.response);\n                console.log(\"Carbon Axios Caught A Response Error response :: \", error.response);\n                return Promise.reject(error);\n                // return error.response;\n            }\n        );\n\n        this.authenticate();\n    }\n\n\n    render() {\n        console.log(\"LOGIN JSX RENDER\");\n\n        const {alert} = this.state;\n\n        // Routes that belong to the public and private sector\n        let Routes : iCustomRoute[] = [\n            {\n                path: \"/WebGl\",\n                name: \"Example List\",\n                component: WebGl\n            },\n            {\n                path: \"/\",\n                pathTo: \"/WebGl\",\n                redirect: true\n            }\n        ];\n\n\n        return <>\n\n            {this.subRoutingSwitch(Routes, {\n                Routes: Routes\n            })}\n\n            {alert}\n\n        </>;\n\n    }\n\n}\n\nexport default bootstrap;\n","// noinspection NpmUsedModulesInstalled\nimport React from \"react\";\n// noinspection NpmUsedModulesInstalled\nimport ReactDOM from \"react-dom\";\nimport {createBrowserHistory} from \"history\";\nimport {HashRouter, Router} from \"react-router-dom\";\n\n// Custom CarbonPHP Context Switch\nimport Bootstrap from \"Bootstrap.tsx\";\n\nconst hist = createBrowserHistory();\n\nconst APP_ROOT = process.cwd();\n\nconst isAppLocal = '3000' === window.location.port;\n\nconsole.log(APP_ROOT);\n\nconst DOM = isAppLocal ?\n    <Router history={hist}>\n        <Bootstrap/>\n    </Router>\n    :\n    <HashRouter history={hist}>\n    <Bootstrap/>\n</HashRouter>;\n\n// @link https://sites.google.com/site/webglbook/home\n// @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API\nReactDOM.render(DOM,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}